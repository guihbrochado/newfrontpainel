{"version":3,"file":"page-B30OdubS.js","sources":["../../src/app/(admin)/dashboard/analytics/components/TotalPosts.tsx","../../src/assets/images/user.png","../../src/app/(admin)/dashboard/analytics/components/MostViewedPosts.tsx","../../src/app/(admin)/dashboard/analytics/components/CategoriesChart.tsx","../../src/app/(admin)/dashboard/analytics/components/AuthorRanking.tsx","../../src/app/(admin)/dashboard/analytics/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardHeader, CardTitle, Col, Row } from \"react-bootstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios, { AxiosError } from \"axios\";\nimport { ApexOptions } from \"apexcharts\";\n\ninterface Totals {\n  total: number;\n  mes: number;\n  semana: number;\n  hoje: number;\n}\n\nconst TotalPost = () => {\n  const [totais, setTotais] = useState<Totals>({ total: 0, mes: 0, semana: 0, hoje: 0 });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [labels, setLabels] = useState<string[]>([]);\n  const [values, setValues] = useState<number[]>([]);\n  const API_URL = import.meta.env.VITE_API_URL;\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [totalRes, postsRes] = await Promise.all([\n          axios.get(`${API_URL}/posts-total`),\n          axios.get(`${API_URL}/posts-por-mes`),\n        ]);\n        if (totalRes.data.status === \"success\") setTotais(totalRes.data.data);\n        if (postsRes.data.status === \"success\") {\n          setLabels(postsRes.data.data.labels);\n          setValues(postsRes.data.data.values);\n        }\n      } catch (err) {\n        const error = err as AxiosError<{ message?: string }>;\n        setError(error.response?.data?.message || \"Erro ao carregar os dados.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []); // Dependências vazias são aceitáveis se fetchData é estático\n\n  const chartOptions: ApexOptions = {\n    chart: { height: 270, type: \"bar\", toolbar: { show: false } },\n    colors: [\"#22c55e\"],\n    plotOptions: { bar: { borderRadius: 6, columnWidth: \"40%\", distributed: true } },\n    dataLabels: {\n      enabled: true,\n      offsetY: -20,\n      style: { fontSize: \"12px\", colors: [\"#8997bd\"] },\n    },\n    xaxis: { categories: labels },\n    yaxis: {\n      labels: {\n        formatter: (val: number) => `${val}`, // Converter número para string\n      },\n    },\n    grid: { strokeDashArray: 2.5 },\n    legend: { show: false },\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Publicações por mês</CardTitle>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <p>Carregando...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : (\n          <>\n            <ReactApexChart\n              height={270}\n              options={chartOptions}\n              series={[{ name: \"Publicações\", data: values }]}\n              type=\"bar\"\n            />\n            <Row className=\"mt-4\">\n              {[\n                { title: \"TOTAL\", stat: totais.total },\n                { title: \"NESTE MÊS\", stat: totais.mes },\n                { title: \"NESSA SEMANA\", stat: totais.semana },\n                { title: \"TOTAL HOJE\", stat: totais.hoje },\n              ].map((item, idx) => (\n                <Col md={6} lg={3} key={idx}>\n                  <Card className=\"shadow-none border mb-3\">\n                    <CardBody className=\"text-center\">\n                      <span className=\"fs-18 fw-semibold\">{item.stat}</span>\n                      <h6 className=\"text-uppercase text-muted mt-2 m-0\">{item.title}</h6>\n                    </CardBody>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TotalPost;\n","export default \"__VITE_ASSET__j9txl95G__\"","import { useEffect, useState } from 'react';\nimport { Card, CardBody, CardHeader, CardTitle, Col, ProgressBar, Row } from 'react-bootstrap';\nimport axios from 'axios';\nimport defaultImage from '@/assets/images/user.png'; // Importe a imagem padrão\n\nconst MostViewedPosts = () => {\n  const [posts, setPosts] = useState<{ id: number; title: string; views: number; progress: number; image: string; author: string; }[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const API_URL = import.meta.env.VITE_API_URL;\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(`${API_URL}/posts-most-viewed`);\n        if (response.data.status === 'success') {\n          setPosts(response.data.data);\n        }\n      } catch (err) {\n        setError('Erro ao carregar os posts mais visualizados.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Mais Visualizados</CardTitle>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <p>Carregando...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : (\n          <div className=\"table-responsive\">\n            <table className=\"table mb-0\">\n              <tbody>\n                {posts.map((post, idx) => (\n                  <tr key={idx}>\n                    <td className=\"px-0\">\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          src={post.image && post.image.trim() !== '' ? post.image : defaultImage}\n                          className=\"me-2 align-self-center thumb-md\"\n                          alt={post.title}\n                          onError={(e) => (e.currentTarget.src = defaultImage)} // Fallback adicional\n                        />\n                        <div className=\"flex-grow-1 text-truncate\">\n                          <h6 className=\"m-0 text-truncate\">{post.title}</h6>\n                          <small className=\"text-muted\">Por {post.author}</small>\n                          <div className=\"d-flex align-items-center\">\n                            <ProgressBar variant=\"primary\" now={post.progress} className=\"w-100\" style={{ height: 5 }} />\n                            <small className=\"flex-shrink-1 ms-1\">{post.progress.toFixed(1)}%</small>\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-0 text-end\">\n                      <span className=\"text-body ps-2 align-self-center text-end\">\n                        {post.views} visualizações\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MostViewedPosts;","import { useState, useEffect } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Row } from 'react-bootstrap'\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport ReactApexChart from 'react-apexcharts'\nimport type { ApexOptions } from 'apexcharts'\n\nconst CategoriesChart = () => {\n  const [categories, setCategories] = useState<string[]>([])\n  const [values, setValues] = useState<number[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const API_URL = import.meta.env.VITE_API_URL;\n\n  const fetchCategories = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      const response = await fetch(`${API_URL}/posts/most-viewed-categories`)\n      if (!response.ok) throw new Error('Erro ao buscar categorias')\n\n      const data = await response.json()\n      if (data.status === 'success') {\n        setCategories(data.data.map((cat: any) => cat.name))\n        setValues(data.data.map((cat: any) => cat.total))\n      } else {\n        throw new Error(data.message || 'Erro ao carregar categorias')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro desconhecido')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const chartOptions: ApexOptions = {\n    series: [{ name: 'Itens', data: values }],\n    chart: {\n      type: 'bar',\n      height: 275,\n      toolbar: { show: false },\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 6,\n        horizontal: true,\n        distributed: true,\n        barHeight: '85%',\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (_val, opt) {\n        return categories[opt.dataPointIndex]\n      },\n      style: {\n        colors: ['#22c55e'],\n        fontWeight: 400,\n        fontSize: '13px',\n      },\n    },\n    xaxis: { categories },\n    colors: [\n      'rgba(34, 197, 94, 0.45)',\n      'rgba(34, 197, 94, 0.4)',\n      'rgba(34, 197, 94, 0.35)',\n      'rgba(34, 197, 94, 0.3)',\n      'rgba(34, 197, 94, 0.25)',\n      'rgba(34, 197, 94, 0.2)',\n      'rgba(34, 197, 94, 0.15)',\n      'rgba(34, 197, 94, 0.1)',\n    ],\n    legend: { show: false },\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Categorias mais Visualizadas</CardTitle>\n          </Col>\n          <Col xs=\"auto\">\n            <div className=\"text-center\">\n              <h6 className=\"text-uppercase text-muted mt-1 m-0\">\n                <span className=\"fs-16 fw-semibold\">{categories.length}</span> Categorias\n              </h6>\n            </div>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <div className=\"text-center py-3\">Carregando...</div>\n        ) : error ? (\n          <div className=\"text-center py-3 text-danger\">{error}</div>\n        ) : categories.length === 0 ? (\n          <div className=\"text-center py-3\">Nenhuma categoria encontrada</div>\n        ) : (\n          <>\n            <ReactApexChart height={265} options={chartOptions} series={chartOptions.series} type=\"bar\" />\n            <div className=\"text-center\">\n              \n            </div>\n          </>\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CategoriesChart\n","import { Card, CardBody, CardHeader, CardTitle, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport defaultImage from '@/assets/images/user.png'; // Importe a imagem padrão\n\ntype AuthorData = {\n  id: string;\n  name: string;\n  image: string;\n  amount: number;\n};\n\nconst AuthorRanking = () => {\n  const [authors, setAuthors] = useState<AuthorData[]>([]);\n  const [period, setPeriod] = useState('month');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const API_URL = import.meta.env.VITE_API_URL;\n\n  const fetchTopAuthors = async (selectedPeriod: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log(`Buscando autores para período: ${selectedPeriod}`);\n      const response = await fetch(`${API_URL}/posts/top-authors?period=${selectedPeriod}`);\n\n      if (!response.ok) {\n        console.error('Erro na resposta da API:', response);\n        throw new Error('Erro ao buscar autores');\n      }\n\n      const data = await response.json();\n      console.log('Dados recebidos:', data);\n\n      if (data.status === 'success') {\n        setAuthors(data.data);\n      } else {\n        throw new Error(data.message || 'Erro ao carregar dados');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro desconhecido');\n      console.error('Erro ao buscar autores:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Buscar dados quando o componente montar ou o período mudar\n  useEffect(() => {\n    fetchTopAuthors(period);\n  }, [period]);\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Autores que mais publicam</CardTitle>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <div className=\"text-center py-3\">Carregando...</div>\n        ) : error ? (\n          <div className=\"text-center py-3 text-danger\">{error}</div>\n        ) : authors.length === 0 ? (\n          <div className=\"text-center py-3\">Nenhum autor encontrado para este período.</div>\n        ) : (\n          <div className=\"table-responsive\">\n            <table className=\"table mb-0\">\n              <tbody>\n                {authors.map((author, idx) => (\n                  <tr key={idx}>\n                    <td className=\"px-0\">\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          src={author.image && author.image.trim() !== '' ? author.image : defaultImage}\n                          height={36}\n                          className=\"me-2 align-self-center rounded\"\n                          alt={author.name}\n                          onError={(e) => (e.currentTarget.src = defaultImage)} // Fallback adicional\n                        />\n                        <div className=\"flex-grow-1 text-truncate\">\n                          <h6 className=\"m-0 text-truncate\">{author.name}</h6>\n                          <Link\n                            to={`/colunista/${author.id}`} // Ajuste o link conforme sua estrutura de rotas\n                            className=\"font-12 text-muted text-decoration-underline\"\n                          >\n                            #{author.id}\n                          </Link>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-0 text-end\">\n                      <span className=\"text-primary ps-2 align-self-center text-end\">\n                        {author.amount}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default AuthorRanking;","import { Col, Row } from 'react-bootstrap'\nimport TotalPosts from './components/TotalPosts'\nimport MostViewedPosts from './components/MostViewedPosts'\nimport CategoriesChart from './components/CategoriesChart'\nimport AuthorRanking from './components/AuthorRanking'\nimport PageMetaData from '@/components/PageMetaData'\n\nconst ReportPosts = () => {\n  return (\n    <>\n      <PageMetaData title=\"Relatório\" />\n\n      <Row>\n        <Col md={12} lg={12}>\n          <TotalPosts />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={6}>\n          <MostViewedPosts />\n        </Col>\n        <Col md={6} lg={6}>\n            <AuthorRanking />\n        </Col>\n        <Col md={12} lg={12}>\n          <CategoriesChart />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ReportPosts\n"],"names":["TotalPost","totais","setTotais","useState","loading","setLoading","error","setError","labels","setLabels","values","setValues","API_URL","useEffect","fetchData","totalRes","postsRes","axios","err","chartOptions","val","Card","jsx","CardHeader","Row","Col","CardTitle","CardBody","jsxs","Fragment","ReactApexChart","item","idx","defaultImage","MostViewedPosts","posts","setPosts","response","post","e","ProgressBar","CategoriesChart","categories","setCategories","fetchCategories","data","cat","_val","opt","AuthorRanking","authors","setAuthors","period","setPeriod","fetchTopAuthors","selectedPeriod","author","Link","ReportPosts","PageMetaData","TotalPosts"],"mappings":"iSAeA,MAAMA,EAAY,IAAM,CACtB,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAAiB,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,EAAG,KAAM,EAAG,EAC/E,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAChD,CAACK,EAAQC,CAAS,EAAIN,EAAAA,SAAmB,CAAA,CAAE,EAC3C,CAACO,EAAQC,CAAS,EAAIR,EAAAA,SAAmB,CAAA,CAAE,EAC3CS,EAAU,gEAEhBC,EAAAA,UAAU,IAAM,CACd,eAAeC,GAAY,SACrB,GAAA,CACF,KAAM,CAACC,EAAUC,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC7CC,EAAM,IAAI,GAAGL,CAAO,cAAc,EAClCK,EAAM,IAAI,GAAGL,CAAO,gBAAgB,CAAA,CACrC,EACGG,EAAS,KAAK,SAAW,WAAqBb,EAAAa,EAAS,KAAK,IAAI,EAChEC,EAAS,KAAK,SAAW,YACjBP,EAAAO,EAAS,KAAK,KAAK,MAAM,EACzBL,EAAAK,EAAS,KAAK,KAAK,MAAM,SAE9BE,EAAK,CAEZX,IAASD,GAAAA,EADKY,EACC,WAANZ,YAAAA,EAAgB,OAAhBA,YAAAA,EAAsB,UAAW,4BAA4B,CAAA,QACtE,CACAD,EAAW,EAAK,CAAA,CAClB,CAEQS,EAAA,CACZ,EAAG,EAAE,EAEL,MAAMK,EAA4B,CAChC,MAAO,CAAE,OAAQ,IAAK,KAAM,MAAO,QAAS,CAAE,KAAM,GAAQ,EAC5D,OAAQ,CAAC,SAAS,EAClB,YAAa,CAAE,IAAK,CAAE,aAAc,EAAG,YAAa,MAAO,YAAa,GAAO,EAC/E,WAAY,CACV,QAAS,GACT,QAAS,IACT,MAAO,CAAE,SAAU,OAAQ,OAAQ,CAAC,SAAS,CAAE,CACjD,EACA,MAAO,CAAE,WAAYX,CAAO,EAC5B,MAAO,CACL,OAAQ,CACN,UAAYY,GAAgB,GAAGA,CAAG,EAAA,CAEtC,EACA,KAAM,CAAE,gBAAiB,GAAI,EAC7B,OAAQ,CAAE,KAAM,EAAM,CACxB,gBAGGC,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAD,EAAA,IAACE,EAAI,CAAA,UAAU,qBACb,SAACF,EAAA,IAAAG,EACC,CAAA,SAAAH,MAACI,EAAU,CAAA,SAAA,sBAAmB,CAAA,CAChC,CACF,CAAA,EACF,QACCC,EAAS,CAAA,UAAU,OACjB,SAAAvB,EACEkB,MAAA,IAAE,CAAA,SAAA,eAAa,CAAA,EACdhB,EACDgB,MAAA,IAAE,CAAA,UAAU,cAAe,SAAAhB,CAAA,CAAM,EAGhCsB,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAP,EAAA,IAACQ,EAAA,CACC,OAAQ,IACR,QAASX,EACT,OAAQ,CAAC,CAAE,KAAM,cAAe,KAAMT,EAAQ,EAC9C,KAAK,KAAA,CACP,EACCY,EAAAA,IAAAE,EAAI,CAAA,UAAU,OACZ,SAAA,CACC,CAAE,MAAO,QAAS,KAAMvB,EAAO,KAAM,EACrC,CAAE,MAAO,YAAa,KAAMA,EAAO,GAAI,EACvC,CAAE,MAAO,eAAgB,KAAMA,EAAO,MAAO,EAC7C,CAAE,MAAO,aAAc,KAAMA,EAAO,IAAK,CAC3C,EAAE,IAAI,CAAC8B,EAAMC,UACVP,GAAI,GAAI,EAAG,GAAI,EACd,SAACH,EAAA,IAAAD,EAAK,CAAA,UAAU,0BACd,gBAACM,EAAA,CAAS,UAAU,cAClB,SAAA,CAAAL,EAAA,IAAC,OAAK,CAAA,UAAU,oBAAqB,SAAAS,EAAK,KAAK,EAC9CT,EAAA,IAAA,KAAA,CAAG,UAAU,qCAAsC,WAAK,KAAM,CAAA,CAAA,CAAA,CACjE,CACF,CAAA,GANsBU,CAOxB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,CAEJ,EC5GeC,EAAA,4BCKTC,EAAkB,IAAM,CAC5B,KAAM,CAACC,EAAOC,CAAQ,EAAIjC,EAAAA,SAA2G,CAAA,CAAE,EACjI,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAChDS,EAAU,gEAEhBC,OAAAA,EAAAA,UAAU,IAAM,CACd,eAAeC,GAAY,CACrB,GAAA,CACF,MAAMuB,EAAW,MAAMpB,EAAM,IAAI,GAAGL,CAAO,oBAAoB,EAC3DyB,EAAS,KAAK,SAAW,WAClBD,EAAAC,EAAS,KAAK,IAAI,OAEjB,CACZ9B,EAAS,8CAA8C,CAAA,QACvD,CACAF,EAAW,EAAK,CAAA,CAClB,CAGQS,EAAA,CACZ,EAAG,EAAE,SAGFO,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAD,EAAA,IAACE,EAAI,CAAA,UAAU,qBACb,SAACF,EAAA,IAAAG,EACC,CAAA,SAAAH,MAACI,EAAU,CAAA,SAAA,oBAAiB,CAAA,CAC9B,CACF,CAAA,EACF,EACCJ,MAAAK,EAAA,CAAS,UAAU,OACjB,WACEL,EAAAA,IAAA,IAAA,CAAE,SAAa,gBAAA,EACdhB,EACDgB,EAAA,IAAA,IAAE,CAAA,UAAU,cAAe,SAAMhB,CAAA,CAAA,QAEjC,MAAA,CAAI,UAAU,mBACb,eAAC,QAAA,CAAM,UAAU,aACf,SAAAgB,EAAAA,IAAC,QACE,CAAA,SAAAa,EAAM,IAAI,CAACG,EAAMN,WACf,KACC,CAAA,SAAA,CAAAV,EAAAA,IAAC,MAAG,UAAU,OACZ,SAACM,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAN,EAAA,IAAC,MAAA,CACC,IAAKgB,EAAK,OAASA,EAAK,MAAM,KAAK,IAAM,GAAKA,EAAK,MAAQL,EAC3D,UAAU,kCACV,IAAKK,EAAK,MACV,QAAUC,GAAOA,EAAE,cAAc,IAAMN,CAAA,CACzC,EACCL,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAN,EAAA,IAAC,KAAG,CAAA,UAAU,oBAAqB,SAAAgB,EAAK,MAAM,EAC7CV,EAAAA,KAAA,QAAM,CAAA,UAAU,aAAa,SAAA,CAAA,OAAKU,EAAK,MAAA,EAAO,EAC9CV,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,CAACN,EAAAA,IAAAkB,EAAY,CAAA,QAAQ,UAAU,IAAKF,EAAK,SAAU,UAAU,QAAQ,MAAO,CAAE,OAAQ,GAAK,EAC1FV,EAAAA,KAAA,QAAM,CAAA,UAAU,qBAAsB,SAAA,CAAKU,EAAA,SAAS,QAAQ,CAAC,EAAE,GAAA,CAAC,CAAA,CAAA,CACnE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QACC,KAAG,CAAA,UAAU,gBACZ,SAACV,EAAA,KAAA,OAAA,CAAK,UAAU,4CACb,SAAA,CAAKU,EAAA,MAAM,gBAAA,CAAA,CACd,CACF,CAAA,CAAA,CAAA,EAvBON,CAwBT,CACD,CACH,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,EC1EMS,EAAkB,IAAM,CAC5B,KAAM,CAACC,EAAYC,CAAa,EAAIxC,EAAAA,SAAmB,CAAA,CAAE,EACnD,CAACO,EAAQC,CAAS,EAAIR,EAAAA,SAAmB,CAAA,CAAE,EAC3C,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAChDS,EAAU,gEAEVgC,EAAkB,SAAY,CAC9B,GAAA,CACFvC,EAAW,EAAI,EACfE,EAAS,IAAI,EAEb,MAAM8B,EAAW,MAAM,MAAM,GAAGzB,CAAO,+BAA+B,EACtE,GAAI,CAACyB,EAAS,GAAU,MAAA,IAAI,MAAM,2BAA2B,EAEvD,MAAAQ,EAAO,MAAMR,EAAS,KAAK,EAC7B,GAAAQ,EAAK,SAAW,UAClBF,EAAcE,EAAK,KAAK,IAAKC,GAAaA,EAAI,IAAI,CAAC,EACnDnC,EAAUkC,EAAK,KAAK,IAAKC,GAAaA,EAAI,KAAK,CAAC,MAEhD,OAAM,IAAI,MAAMD,EAAK,SAAW,6BAA6B,QAExD3B,EAAK,CACZX,EAASW,aAAe,MAAQA,EAAI,QAAU,mBAAmB,CAAA,QACjE,CACAb,EAAW,EAAK,CAAA,CAEpB,EAEAQ,EAAAA,UAAU,IAAM,CACE+B,EAAA,CAClB,EAAG,EAAE,EAEL,MAAMzB,EAA4B,CAChC,OAAQ,CAAC,CAAE,KAAM,QAAS,KAAMT,EAAQ,EACxC,MAAO,CACL,KAAM,MACN,OAAQ,IACR,QAAS,CAAE,KAAM,EAAM,CACzB,EACA,YAAa,CACX,IAAK,CACH,aAAc,EACd,WAAY,GACZ,YAAa,GACb,UAAW,KAAA,CAEf,EACA,WAAY,CACV,QAAS,GACT,UAAW,SAAUqC,EAAMC,EAAK,CACvB,OAAAN,EAAWM,EAAI,cAAc,CACtC,EACA,MAAO,CACL,OAAQ,CAAC,SAAS,EAClB,WAAY,IACZ,SAAU,MAAA,CAEd,EACA,MAAO,CAAE,WAAAN,CAAW,EACpB,OAAQ,CACN,0BACA,yBACA,0BACA,yBACA,0BACA,yBACA,0BACA,wBACF,EACA,OAAQ,CAAE,KAAM,EAAM,CACxB,gBAGGrB,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,gBAACC,EAAI,CAAA,UAAU,qBACb,SAAA,CAAAF,MAACG,EACC,CAAA,SAAAH,EAAA,IAACI,EAAU,CAAA,SAAA,8BAA4B,CAAA,EACzC,QACCD,EAAI,CAAA,GAAG,OACN,SAACH,EAAA,IAAA,MAAI,CAAA,UAAU,cACb,SAAAM,OAAC,KAAG,CAAA,UAAU,qCACZ,SAAA,CAAAN,EAAA,IAAC,OAAK,CAAA,UAAU,oBAAqB,SAAAoB,EAAW,OAAO,EAAO,aAAA,CAChE,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QACCf,EAAS,CAAA,UAAU,OACjB,SAAAvB,EACEkB,EAAAA,IAAA,MAAA,CAAI,UAAU,mBAAmB,SAAa,eAAA,CAAA,EAC7ChB,QACD,MAAI,CAAA,UAAU,+BAAgC,SAAAA,EAAM,EACnDoC,EAAW,SAAW,EACvBpB,EAAAA,IAAA,MAAA,CAAI,UAAU,mBAAmB,SAA4B,8BAAA,CAAA,EAG5DM,OAAAC,EAAAA,SAAA,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAe,OAAQ,IAAK,QAASX,EAAc,OAAQA,EAAa,OAAQ,KAAK,KAAA,CAAM,EAC3FG,EAAAA,IAAA,MAAI,CAAA,UAAU,aAEf,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,CAEJ,ECrGM2B,EAAgB,IAAM,CAC1B,KAAM,CAACC,EAASC,CAAU,EAAIhD,EAAAA,SAAuB,CAAA,CAAE,EACjD,CAACiD,EAAQC,CAAS,EAAIlD,EAAAA,SAAS,OAAO,EACtC,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAChDS,EAAU,gEAEV0C,EAAkB,MAAOC,GAA2B,CACpD,GAAA,CACFlD,EAAW,EAAI,EACfE,EAAS,IAAI,EAEL,QAAA,IAAI,kCAAkCgD,CAAc,EAAE,EAC9D,MAAMlB,EAAW,MAAM,MAAM,GAAGzB,CAAO,6BAA6B2C,CAAc,EAAE,EAEhF,GAAA,CAAClB,EAAS,GACJ,cAAA,MAAM,2BAA4BA,CAAQ,EAC5C,IAAI,MAAM,wBAAwB,EAGpC,MAAAQ,EAAO,MAAMR,EAAS,KAAK,EAG7B,GAFI,QAAA,IAAI,mBAAoBQ,CAAI,EAEhCA,EAAK,SAAW,UAClBM,EAAWN,EAAK,IAAI,MAEpB,OAAM,IAAI,MAAMA,EAAK,SAAW,wBAAwB,QAEnD3B,EAAK,CACZX,EAASW,aAAe,MAAQA,EAAI,QAAU,mBAAmB,EACzD,QAAA,MAAM,0BAA2BA,CAAG,CAAA,QAC5C,CACAb,EAAW,EAAK,CAAA,CAEpB,EAGAQ,OAAAA,EAAAA,UAAU,IAAM,CACdyC,EAAgBF,CAAM,CAAA,EACrB,CAACA,CAAM,CAAC,SAGR/B,EACC,CAAA,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAD,EAAA,IAACE,EAAI,CAAA,UAAU,qBACb,SAACF,EAAA,IAAAG,EACC,CAAA,SAAAH,MAACI,EAAU,CAAA,SAAA,4BAAyB,CAAA,CACtC,CACF,CAAA,EACF,EACCJ,EAAAA,IAAAK,EAAS,CAAA,UAAU,OACjB,SACCvB,EAAAkB,EAAA,IAAC,OAAI,UAAU,mBAAmB,yBAAa,EAC7ChB,QACD,MAAI,CAAA,UAAU,+BAAgC,SAAMA,CAAA,CAAA,EACnD4C,EAAQ,SAAW,EACpB5B,EAAA,IAAA,MAAI,CAAA,UAAU,mBAAmB,SAA0C,4CAAA,CAAA,QAE3E,MAAI,CAAA,UAAU,mBACb,SAACA,EAAA,IAAA,QAAA,CAAM,UAAU,aACf,SAAAA,EAAA,IAAC,SACE,SAAQ4B,EAAA,IAAI,CAACM,EAAQxB,IACnBJ,EAAA,KAAA,KACC,CAAA,SAAA,CAAAN,EAAAA,IAAC,MAAG,UAAU,OACZ,SAACM,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAN,EAAA,IAAC,MAAA,CACC,IAAKkC,EAAO,OAASA,EAAO,MAAM,KAAK,IAAM,GAAKA,EAAO,MAAQvB,EACjE,OAAQ,GACR,UAAU,iCACV,IAAKuB,EAAO,KACZ,QAAUjB,GAAOA,EAAE,cAAc,IAAMN,CAAA,CACzC,EACCL,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAN,EAAA,IAAC,KAAG,CAAA,UAAU,oBAAqB,SAAAkC,EAAO,KAAK,EAC/C5B,EAAA,KAAC6B,EAAA,CACC,GAAI,cAAcD,EAAO,EAAE,GAC3B,UAAU,+CACX,SAAA,CAAA,IACGA,EAAO,EAAA,CAAA,CAAA,CACX,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QACC,KAAG,CAAA,UAAU,gBACZ,SAAClC,EAAA,IAAA,QAAK,UAAU,+CACb,SAAOkC,EAAA,MACV,CAAA,CACF,CAAA,CAAA,CAAA,EAzBOxB,CA0BT,CACD,CACH,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,ECtGM0B,EAAc,IAGd9B,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACP,EAAAA,IAAAqC,EAAA,CAAa,MAAM,WAAY,CAAA,EAEhCrC,EAAA,IAACE,EACC,CAAA,SAAAF,EAAAA,IAACG,EAAI,CAAA,GAAI,GAAI,GAAI,GACf,SAAAH,EAAA,IAACsC,EAAW,CAAA,CAAA,CACd,CAAA,EACF,EACAhC,EAAAA,KAACJ,EAAI,CAAA,UAAU,yBACb,SAAA,CAAAF,EAAAA,IAACG,GAAI,GAAI,EAAG,GAAI,EACd,SAAAH,EAAA,IAACY,IAAgB,CACnB,CAAA,EACAZ,EAAAA,IAACG,GAAI,GAAI,EAAG,GAAI,EACZ,SAAAH,EAAA,IAAC2B,IAAc,CACnB,CAAA,EACA3B,EAAAA,IAACG,GAAI,GAAI,GAAI,GAAI,GACf,SAAAH,EAAAA,IAACmB,GAAgB,CAAA,CACnB,CAAA,CAAA,CACF,CAAA,CAAA,EACF"}