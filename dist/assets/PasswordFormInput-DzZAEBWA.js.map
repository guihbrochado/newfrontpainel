{"version":3,"file":"PasswordFormInput-DzZAEBWA.js","sources":["../../src/components/form/PasswordFormInput.tsx"],"sourcesContent":["import { useState, type InputHTMLAttributes } from 'react'\nimport { FormControl, FormGroup, FormLabel, type FormControlProps } from 'react-bootstrap'\nimport Feedback from 'react-bootstrap/esm/Feedback'\nimport { Controller, type FieldPath, type FieldValues, type PathValue } from 'react-hook-form'\n\nimport type { FormInputProps } from '@/types/component-props'\nimport IconifyIcon from '../wrappers/IconifyIcon'\n\nconst PasswordFormInput = <TFieldValues extends FieldValues = FieldValues, TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>>({\n  name,\n  containerClassName: containerClass,\n  control,\n  id,\n  labelClassName: labelClass,\n  label,\n  noValidate,\n  ...other\n}: FormInputProps<TFieldValues> & FormControlProps & InputHTMLAttributes<HTMLInputElement>) => {\n  const [showPassword, setShowPassword] = useState(false)\n\n  return (\n    <Controller<TFieldValues, TName>\n      name={name as TName}\n      defaultValue={'' as PathValue<TFieldValues, TName>}\n      control={control}\n      render={({ field, fieldState }) => (\n        <FormGroup className={containerClass ?? ''}>\n          {label &&\n            (typeof label === 'string' ? (\n              <FormLabel htmlFor={id ?? name} className={labelClass}>\n                {label}\n              </FormLabel>\n            ) : (\n              <>{label}</>\n            ))}\n          <div className=\"position-relative\">\n            <FormControl id={id} type={showPassword ? 'text' : 'password'} {...other} {...field} isInvalid={Boolean(fieldState.error?.message)} />\n            {!noValidate && fieldState.error?.message && <Feedback type=\"invalid\">{fieldState.error?.message}</Feedback>}\n            <span className=\"d-flex position-absolute top-50 end-0 translate-middle-y p-0 pe-2 me-2\" onClick={() => setShowPassword(!showPassword)}>\n              {!fieldState.error &&\n                (showPassword ? (\n                  <IconifyIcon icon=\"bi:eye-slash-fill\" height={18} width={18} className=\"cursor-pointer\" />\n                ) : (\n                  <IconifyIcon icon=\"bi:eye-fill\" height={18} width={18} className=\"cursor-pointer\" />\n                ))}\n            </span>\n          </div>\n        </FormGroup>\n      )}\n    />\n  )\n}\n\nexport default PasswordFormInput\n"],"names":["PasswordFormInput","name","containerClass","control","id","labelClass","label","noValidate","other","showPassword","setShowPassword","useState","jsx","Controller","field","fieldState","jsxs","FormGroup","FormLabel","FormControl","_a","_b","Feedback","_c","IconifyIcon"],"mappings":"mRAQA,MAAMA,EAAoB,CAAkH,CAC1I,KAAAC,EACA,mBAAoBC,EACpB,QAAAC,EACA,GAAAC,EACA,eAAgBC,EAChB,MAAAC,EACA,WAAAC,EACA,GAAGC,CACL,IAA+F,CAC7F,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,EAAK,EAGpD,OAAAC,EAAA,IAACC,EAAA,CACC,KAAAZ,EACA,aAAc,GACd,QAAAE,EACA,OAAQ,CAAC,CAAE,MAAAW,EAAO,WAAAC,KACfC,WAAAA,OAAAA,EAAAA,KAAAC,EAAA,CAAU,UAAWf,GAAkB,GACrC,SAAA,CAAAI,IACE,OAAOA,GAAU,SAChBM,EAAAA,IAACM,EAAU,CAAA,QAASd,GAAMH,EAAM,UAAWI,EACxC,SACHC,CAAA,CAAA,oBAEG,SAAMA,CAAA,CAAA,GAEbU,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAJ,EAAA,IAACO,EAAY,CAAA,GAAAf,EAAQ,KAAMK,EAAe,OAAS,WAAa,GAAGD,EAAQ,GAAGM,EAAO,UAAW,IAAQM,EAAAL,EAAW,QAAX,MAAAK,EAAkB,SAAU,EACnI,CAACb,KAAcc,EAAAN,EAAW,QAAX,YAAAM,EAAkB,UAAYT,EAAA,IAAAU,EAAA,CAAS,KAAK,UAAW,UAAWC,EAAAR,EAAA,QAAA,YAAAQ,EAAO,OAAQ,CAAA,EAChGX,EAAA,IAAA,OAAA,CAAK,UAAU,yEAAyE,QAAS,IAAMF,EAAgB,CAACD,CAAY,EAClI,SAAC,CAAAM,EAAW,QACVN,QACEe,EAAY,CAAA,KAAK,oBAAoB,OAAQ,GAAI,MAAO,GAAI,UAAU,iBAAiB,EAEvFZ,EAAA,IAAAY,EAAA,CAAY,KAAK,cAAc,OAAQ,GAAI,MAAO,GAAI,UAAU,gBAAiB,CAAA,EAExF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAAA,CAEJ,CAEJ"}