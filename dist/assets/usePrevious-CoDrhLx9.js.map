{"version":3,"file":"usePrevious-CoDrhLx9.js","sources":["../../node_modules/@restart/hooks/esm/usePrevious.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}"],"names":["usePrevious","value","ref","useRef","useEffect"],"mappings":"wCAmBe,SAASA,EAAYC,EAAO,CACzC,MAAMC,EAAMC,EAAM,OAAC,IAAI,EACvBC,OAAAA,EAAAA,UAAU,IAAM,CACdF,EAAI,QAAUD,CAClB,CAAG,EACMC,EAAI,OACb","x_google_ignoreList":[0]}