{"version":3,"file":"FormLabel-D8w_mrTU.js","sources":["../../node_modules/react-bootstrap/esm/FormGroup.js","../../node_modules/react-bootstrap/esm/FormLabel.js"],"sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;"],"names":["FormGroup","React.forwardRef","controlId","Component","props","ref","context","useMemo","_jsx","FormContext","FormLabel","bsPrefix","column","visuallyHidden","className","htmlFor","useContext","useBootstrapPrefix","columnClass","classes","classNames","Col"],"mappings":"kHAIK,MAACA,EAAyBC,EAAgB,WAAC,CAAC,CAC/C,UAAAC,EAEA,GAAIC,EAAY,MAChB,GAAGC,CACL,EAAGC,IAAQ,CACT,MAAMC,EAAUC,EAAAA,QAAQ,KAAO,CAC7B,UAAAL,CACJ,GAAM,CAACA,CAAS,CAAC,EACf,OAAoBM,EAAI,IAACC,EAAY,SAAU,CAC7C,MAAOH,EACP,SAAuBE,EAAI,IAACL,EAAW,CACrC,GAAGC,EACH,IAAKC,CACN,CAAA,CACL,CAAG,CACH,CAAC,EACDL,EAAU,YAAc,YCXlB,MAAAU,EAA+BT,EAAA,WAAW,CAAC,CAE/C,GAAIE,EAAY,QAChB,SAAAQ,EACA,OAAAC,EAAS,GACT,eAAAC,EAAiB,GACjB,UAAAC,EACA,QAAAC,EACA,GAAGX,CACL,EAAGC,IAAQ,CACH,KAAA,CACJ,UAAAH,CAAA,EACEc,EAAAA,WAAWP,CAAW,EACfE,EAAAM,EAAmBN,EAAU,YAAY,EACpD,IAAIO,EAAc,iBACd,OAAON,GAAW,WAAUM,EAAc,GAAGA,CAAW,IAAIA,CAAW,IAAIN,CAAM,IACrF,MAAMO,EAAUC,EAAWN,EAAWH,EAAUE,GAAkB,kBAAmBD,GAAUM,CAAW,EAGtG,OADJH,EAAUA,GAAWb,EACjBU,EAA4BJ,EAAA,IAAKa,EAAK,CACxC,IAAAhB,EACA,GAAI,QACJ,UAAWc,EACX,QAAAJ,EACA,GAAGX,CAAA,CACJ,QAIMD,EAAW,CACd,IAAAE,EACA,UAAWc,EACX,QAAAJ,EACA,GAAGX,CACJ,CAAA,CAEL,CAAC,EACDM,EAAU,YAAc","x_google_ignoreList":[0,1]}