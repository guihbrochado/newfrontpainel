{"version":3,"file":"page-mTyAe9oz.js","sources":["../../src/app/(admin)/dashboard/analytics/components/TotalPosts.tsx","../../src/app/(admin)/dashboard/analytics/components/MostViewedPosts.tsx","../../src/app/(admin)/dashboard/analytics/components/CategoriesChart.tsx","../../src/app/(admin)/dashboard/analytics/components/AuthorRanking.tsx","../../src/app/(admin)/dashboard/analytics/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardHeader, CardTitle, Col, Row } from \"react-bootstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios, { AxiosError } from \"axios\";\nimport { ApexOptions } from \"apexcharts\";\n\ninterface Totals {\n  total: number;\n  mes: number;\n  semana: number;\n  hoje: number;\n}\n\nconst TotalPost = () => {\n  const [totais, setTotais] = useState<Totals>({ total: 0, mes: 0, semana: 0, hoje: 0 });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [labels, setLabels] = useState<string[]>([]);\n  const [values, setValues] = useState<number[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [totalRes, postsRes] = await Promise.all([\n          axios.get(\"https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-total\"),\n          axios.get(\"https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-por-mes\"),\n        ]);\n        if (totalRes.data.status === \"success\") setTotais(totalRes.data.data);\n        if (postsRes.data.status === \"success\") {\n          setLabels(postsRes.data.data.labels);\n          setValues(postsRes.data.data.values);\n        }\n      } catch (err) {\n        const error = err as AxiosError<{ message?: string }>;\n        setError(error.response?.data?.message || \"Erro ao carregar os dados.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []); // Dependências vazias são aceitáveis se fetchData é estático\n\n  const chartOptions: ApexOptions = {\n    chart: { height: 270, type: \"bar\", toolbar: { show: false } },\n    colors: [\"#22c55e\"],\n    plotOptions: { bar: { borderRadius: 6, columnWidth: \"40%\", distributed: true } },\n    dataLabels: {\n      enabled: true,\n      offsetY: -20,\n      style: { fontSize: \"12px\", colors: [\"#8997bd\"] },\n    },\n    xaxis: { categories: labels },\n    yaxis: {\n      labels: {\n        formatter: (val: number) => `${val}`, // Converter número para string\n      },\n    },\n    grid: { strokeDashArray: 2.5 },\n    legend: { show: false },\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Publicações por mês</CardTitle>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <p>Carregando...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : (\n          <>\n            <ReactApexChart\n              height={270}\n              options={chartOptions}\n              series={[{ name: \"Publicações\", data: values }]}\n              type=\"bar\"\n            />\n            <Row className=\"mt-4\">\n              {[\n                { title: \"TOTAL\", stat: totais.total },\n                { title: \"NESTE MÊS\", stat: totais.mes },\n                { title: \"NESSA SEMANA\", stat: totais.semana },\n                { title: \"TOTAL HOJE\", stat: totais.hoje },\n              ].map((item, idx) => (\n                <Col md={6} lg={3} key={idx}>\n                  <Card className=\"shadow-none border mb-3\">\n                    <CardBody className=\"text-center\">\n                      <span className=\"fs-18 fw-semibold\">{item.stat}</span>\n                      <h6 className=\"text-uppercase text-muted mt-2 m-0\">{item.title}</h6>\n                    </CardBody>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TotalPost;\n","import { useEffect, useState } from 'react';\nimport { Card, CardBody, CardHeader, CardTitle, Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, ProgressBar, Row } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst MostViewedPosts = () => {\n  const [posts, setPosts] = useState<{ id: number; title: string; views: number; progress: number; image: string; author: string; }[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-most-viewed');\n        if (response.data.status === 'success') {\n          setPosts(response.data.data);\n        }\n      } catch (err) {\n        setError('Erro ao carregar os posts mais visualizados.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Mais Visualizados</CardTitle>\n          </Col>\n          <Col xs=\"auto\">\n            <Dropdown>\n              <DropdownToggle className=\"btn bt btn-light\">\n                <i className=\"icofont-calendar fs-5 me-1\" />\n                No mês\n                <i className=\"ms-1 icofont-caret-down\" />\n              </DropdownToggle>\n              <DropdownMenu align={'end'}>\n                <DropdownItem href=\"#\">Hoje</DropdownItem>\n                <DropdownItem href=\"#\">Última Semana</DropdownItem>\n                <DropdownItem href=\"#\">Último Mês</DropdownItem>\n                <DropdownItem href=\"#\">Esse Ano</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <p>Carregando...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : (\n          <div className=\"table-responsive\">\n            <table className=\"table mb-0\">\n              <tbody>\n                {posts.map((post, idx) => (\n                  <tr key={idx}>\n                    <td className=\"px-0\">\n                      <div className=\"d-flex align-items-center\">\n                        <img src={post.image} className=\"me-2 align-self-center thumb-md\" alt=\"...\" />\n                        <div className=\"flex-grow-1 text-truncate\">\n                          <h6 className=\"m-0 text-truncate\">{post.title}</h6>\n                          <small className=\"text-muted\">Por {post.author}</small>\n                          <div className=\"d-flex align-items-center\">\n                            <ProgressBar variant=\"primary\" now={post.progress} className=\"w-100\" style={{ height: 5 }} />\n                            <small className=\"flex-shrink-1 ms-1\">{post.progress.toFixed(1)}%</small>\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-0 text-end\">\n                      <span className=\"text-body ps-2 align-self-center text-end\">\n                        {post.views} visualizações\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MostViewedPosts;\n","import { useState, useEffect } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Row } from 'react-bootstrap'\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport ReactApexChart from 'react-apexcharts'\nimport type { ApexOptions } from 'apexcharts'\n\nconst CategoriesChart = () => {\n  const [categories, setCategories] = useState<string[]>([])\n  const [values, setValues] = useState<number[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // Buscar categorias mais visualizadas\n  const fetchCategories = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      const response = await fetch('https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts/most-viewed-categories')\n      if (!response.ok) throw new Error('Erro ao buscar categorias')\n\n      const data = await response.json()\n      if (data.status === 'success') {\n        setCategories(data.data.map((cat: any) => cat.name))\n        setValues(data.data.map((cat: any) => cat.total))\n      } else {\n        throw new Error(data.message || 'Erro ao carregar categorias')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro desconhecido')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const chartOptions: ApexOptions = {\n    series: [{ name: 'Itens', data: values }],\n    chart: {\n      type: 'bar',\n      height: 275,\n      toolbar: { show: false },\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 6,\n        horizontal: true,\n        distributed: true,\n        barHeight: '85%',\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (_val, opt) {\n        return categories[opt.dataPointIndex]\n      },\n      style: {\n        colors: ['#22c55e'],\n        fontWeight: 400,\n        fontSize: '13px',\n      },\n    },\n    xaxis: { categories },\n    colors: [\n      'rgba(34, 197, 94, 0.45)',\n      'rgba(34, 197, 94, 0.4)',\n      'rgba(34, 197, 94, 0.35)',\n      'rgba(34, 197, 94, 0.3)',\n      'rgba(34, 197, 94, 0.25)',\n      'rgba(34, 197, 94, 0.2)',\n      'rgba(34, 197, 94, 0.15)',\n      'rgba(34, 197, 94, 0.1)',\n    ],\n    legend: { show: false },\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Categorias mais Visualizadas</CardTitle>\n          </Col>\n          <Col xs=\"auto\">\n            <div className=\"text-center\">\n              <h6 className=\"text-uppercase text-muted mt-1 m-0\">\n                <span className=\"fs-16 fw-semibold\">{categories.length}</span> Categorias\n              </h6>\n            </div>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <div className=\"text-center py-3\">Carregando...</div>\n        ) : error ? (\n          <div className=\"text-center py-3 text-danger\">{error}</div>\n        ) : categories.length === 0 ? (\n          <div className=\"text-center py-3\">Nenhuma categoria encontrada</div>\n        ) : (\n          <>\n            <ReactApexChart height={265} options={chartOptions} series={chartOptions.series} type=\"bar\" />\n            <div className=\"text-center\">\n              <Button type=\"button\" variant=\"primary\" className=\"mx-auto icons-center gap-1\">\n                Ver Mais <IconifyIcon icon=\"fa6-solid:arrow-right-long\" />\n              </Button>\n            </div>\n          </>\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CategoriesChart\n","import { Card, CardBody, CardHeader, CardTitle, Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Row } from 'react-bootstrap';\nimport IconifyIcon from '@/components/wrappers/IconifyIcon';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\ntype AuthorData = {\n  id: string;\n  name: string;\n  image: string;\n  amount: number;\n};\n\nconst AuthorRanking = () => {\n  const [authors, setAuthors] = useState<AuthorData[]>([]);\n  const [period, setPeriod] = useState('month'); // Período padrão: último mês\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Função para buscar os dados da API\n  const fetchTopAuthors = async (selectedPeriod: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log(`Buscando autores para período: ${selectedPeriod}`);\n      const response = await fetch(`https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts/top-authors?period=${selectedPeriod}`);\n\n      if (!response.ok) {\n        console.error('Erro na resposta da API:', response);\n        throw new Error('Erro ao buscar autores');\n      }\n\n      const data = await response.json();\n      console.log('Dados recebidos:', data);\n\n      if (data.status === 'success') {\n        setAuthors(data.data);\n      } else {\n        throw new Error(data.message || 'Erro ao carregar dados');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro desconhecido');\n      console.error('Erro ao buscar autores:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  // Buscar dados quando o componente montar ou o período mudar\n  useEffect(() => {\n    fetchTopAuthors(period);\n  }, [period]);\n\n  // Mapear os períodos do dropdown para os valores da API\n  const periodOptions = [\n    { label: 'Hoje', value: 'today' },\n    { label: 'Última Semana', value: 'week' },\n    { label: 'No Mês', value: 'month' },\n    { label: 'Esse Ano', value: 'year' },\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <Row className=\"align-items-center\">\n          <Col>\n            <CardTitle>Autores que mais publicam</CardTitle>\n          </Col>\n          <Col xs=\"auto\">\n            <Dropdown>\n              <DropdownToggle className=\"btn btn-light\">\n                <i className=\"icofont-calendar fs-5 me-1\" />\n                {periodOptions.find(opt => opt.value === period)?.label || 'No Mês'}\n                <IconifyIcon icon=\"la:angle-down\" className=\"ms-1\" />\n              </DropdownToggle>\n              <DropdownMenu align={'end'}>\n                {periodOptions.map((opt) => (\n                  <DropdownItem\n                    key={opt.value}\n                    onClick={() => setPeriod(opt.value)}\n                    active={period === opt.value}\n                  >\n                    {opt.label}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        {loading ? (\n          <div className=\"text-center py-3\">Carregando...</div>\n        ) : error ? (\n          <div className=\"text-center py-3 text-danger\">{error}</div>\n        ) : authors.length === 0 ? (\n          <div className=\"text-center py-3\">Nenhum autor encontrado para este período.</div>\n        ) : (\n          <div className=\"table-responsive\">\n            <table className=\"table mb-0\">\n              <tbody>\n                {authors.map((author, idx) => (\n                  <tr key={idx}>\n                    <td className=\"px-0\">\n                      <div className=\"d-flex align-items-center\">\n                        <img\n                          src={author.image}\n                          height={36}\n                          className=\"me-2 align-self-center rounded\"\n                          alt={author.name}\n                        />\n                        <div className=\"flex-grow-1 text-truncate\">\n                          <h6 className=\"m-0 text-truncate\">{author.name}</h6>\n                          <Link\n                            to={`/colunista/${author.id}`} // Ajuste o link conforme sua estrutura de rotas\n                            className=\"font-12 text-muted text-decoration-underline\"\n                          >\n                            #{author.id}\n                          </Link>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-0 text-end\">\n                      <span className=\"text-primary ps-2 align-self-center text-end\">\n                        {author.amount}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default AuthorRanking;\n","import { Col, Row } from 'react-bootstrap'\nimport TotalPosts from './components/TotalPosts'\nimport MostViewedPosts from './components/MostViewedPosts'\nimport CategoriesChart from './components/CategoriesChart'\nimport AuthorRanking from './components/AuthorRanking'\nimport PageMetaData from '@/components/PageMetaData'\n\nconst ReportPosts = () => {\n  return (\n    <>\n      <PageMetaData title=\"Relatório\" />\n\n      <Row>\n        <Col md={12} lg={12}>\n          <TotalPosts />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={6}>\n          <MostViewedPosts />\n        </Col>\n        <Col md={6} lg={6}>\n            <AuthorRanking />\n        </Col>\n        <Col md={12} lg={12}>\n          <CategoriesChart />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ReportPosts\n"],"names":["TotalPost","totais","setTotais","useState","loading","setLoading","error","setError","labels","setLabels","values","setValues","useEffect","fetchData","totalRes","postsRes","axios","err","chartOptions","val","Card","jsx","CardHeader","Row","Col","CardTitle","CardBody","jsxs","Fragment","ReactApexChart","item","idx","MostViewedPosts","posts","setPosts","response","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","post","ProgressBar","CategoriesChart","categories","setCategories","fetchCategories","data","cat","_val","opt","Button","IconifyIcon","AuthorRanking","authors","setAuthors","period","setPeriod","fetchTopAuthors","selectedPeriod","periodOptions","_a","author","Link","ReportPosts","PageMetaData","TotalPosts"],"mappings":"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"}