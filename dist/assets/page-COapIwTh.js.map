{"version":3,"file":"page-COapIwTh.js","sources":["../../src/app/(admin)/tables/basic/data.ts","../../src/app/(admin)/tables/basic/page.tsx"],"sourcesContent":["import chatGpt from '@/assets/images/logos/lang-logo/chatgpt.png'\nimport nextJsLogo from '@/assets/images/logos/lang-logo/nextjs.png'\nimport reactJsLogo from '@/assets/images/logos/lang-logo/reactjs.png'\nimport symfonyLogo from '@/assets/images/logos/lang-logo/symfony.png'\n\nimport avatar3 from '@/assets/images/users/avatar-3.jpg'\nimport avatar4 from '@/assets/images/users/avatar-4.jpg'\nimport avatar5 from '@/assets/images/users/avatar-5.jpg'\nimport avatar6 from '@/assets/images/users/avatar-6.jpg'\n\ntype BasicTableType = {\n  name: string\n  logo: string\n  bill: number\n  avgBill: number\n  paidBill: number\n}\n\ntype TableType = {\n  id: number\n  firstName: string\n  lastName: string\n  userName: string\n}\n\ntype BorderTableType = {\n  id: number\n  date: string\n  price: number\n  status: 'Approved' | 'Rejected'\n}\ntype StripedRowTableType = {\n  name: string\n  avatar: string\n  email: string\n  phoneNo: string\n}\n\nexport const basicTableData: BasicTableType[] = [\n  {\n    name: 'Micromin',\n    logo: chatGpt,\n    bill: 4,\n    avgBill: 250,\n    paidBill: 800,\n  },\n  {\n    name: 'ZZ Diamond',\n    logo: nextJsLogo,\n    bill: 2,\n    avgBill: 180,\n    paidBill: 400,\n  },\n  {\n    name: 'Dairy Sweet',\n    logo: reactJsLogo,\n    bill: 6,\n    avgBill: 210,\n    paidBill: 500,\n  },\n  {\n    name: 'Corner Tea',\n    logo: symfonyLogo,\n    bill: 3,\n    avgBill: 80,\n    paidBill: 350,\n  },\n]\n\nexport const borderTableData: BorderTableType[] = [\n  {\n    id: 124781,\n    date: '25/11/2018',\n    price: 321,\n    status: 'Approved',\n  },\n  {\n    id: 542136,\n    date: '19/11/2018',\n    price: 227,\n    status: 'Approved',\n  },\n  {\n    id: 234578,\n    date: '11/10/2018',\n    price: 442,\n    status: 'Rejected',\n  },\n  {\n    id: 951357,\n    date: '03/12/2018',\n    price: 625,\n    status: 'Approved',\n  },\n]\n\nexport const stripedRowTableData: StripedRowTableType[] = [\n  {\n    name: 'Aaron Poulin',\n    avatar: avatar3,\n    email: 'Aaron@example.com',\n    phoneNo: '+21 21547896',\n  },\n  {\n    name: 'Richard Ali',\n    avatar: avatar4,\n    email: 'Richard@example.com',\n    phoneNo: '+41 21547896',\n  },\n  {\n    name: 'Juan Clark',\n    avatar: avatar5,\n    email: 'Juan@example.com',\n    phoneNo: '+65 21547896',\n  },\n  {\n    name: 'Albert Hull',\n    avatar: avatar6,\n    email: 'Albert@example.com',\n    phoneNo: '+88 21547896',\n  },\n]\n\nexport const tableData: TableType[] = [\n  {\n    id: 1,\n    firstName: 'Mark',\n    lastName: 'Otto',\n    userName: '@mdo',\n  },\n  {\n    id: 2,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    userName: '@fat',\n  },\n  {\n    id: 3,\n    firstName: 'Larry',\n    lastName: 'the Bird',\n    userName: '@twitter',\n  },\n  {\n    id: 4,\n    firstName: 'Mark',\n    lastName: 'Otto',\n    userName: '@mdo',\n  },\n  {\n    id: 5,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    userName: '@fat',\n  },\n  {\n    id: 6,\n    firstName: 'Larry',\n    lastName: 'the Bird',\n    userName: '@twitter',\n  },\n  {\n    id: 7,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    userName: '@fat',\n  },\n  {\n    id: 8,\n    firstName: 'Larry',\n    lastName: 'the Bird',\n    userName: '@twitter',\n  },\n  {\n    id: 9,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    userName: '@fat',\n  },\n  {\n    id: 10,\n    firstName: 'Larry',\n    lastName: 'the Bird',\n    userName: '@twitter',\n  },\n]\n","import ComponentContainerCard from '@/components/ComponentContainerCard'\nimport { Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Row, Table } from 'react-bootstrap'\nimport { basicTableData, borderTableData, stripedRowTableData, tableData } from './data'\nimport PageMetaData from '@/components/PageMetaData'\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport { currency } from '@/context/constants'\n\nconst BasicTable = () => {\n  return (\n    <ComponentContainerCard title=\"Basic Example\">\n      <div className=\"table-responsive\">\n        <Table className=\"mb-0 table-centered\">\n          <thead className=\"table-light\">\n            <tr>\n              <th>Compny</th>\n              <th>Bill</th>\n              <th>Average Bill</th>\n              <th>Paid Bill</th>\n              <th className=\"text-end\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {basicTableData.map((item, idx) => (\n              <tr key={idx}>\n                <td>\n                  <img src={item.logo} alt=\"avatar\" className=\"rounded-circle thumb-md me-1 d-inline\" />\n                  {item.name}\n                </td>\n                <td>{item.bill}</td>\n                <td>\n                  {currency}\n                  {item.avgBill}\n                </td>\n                <td>\n                  {currency}\n                  {item.paidBill}\n                </td>\n                <td className=\"text-end\">\n                  <Dropdown className=\"d-inline-block\">\n                    <DropdownToggle as=\"a\" className=\"arrow-none\" id=\"dLabel11\" role=\"button\">\n                      <IconifyIcon icon=\"la:ellipsis-v\" className=\"fs-20 text-muted\" />\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-menu-end\" aria-labelledby=\"dLabel11\">\n                      <DropdownItem href=\"#\">Creat Project</DropdownItem>\n                      <DropdownItem href=\"#\">Open Project</DropdownItem>\n                      <DropdownItem href=\"#\">Tasks Details</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst BorderedTable = () => {\n  return (\n    <ComponentContainerCard title=\"Bordered Table\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered mb-0 table-centered\">\n          <thead>\n            <tr>\n              <th>Transaction ID</th>\n              <th>Date</th>\n              <th>Price</th>\n              <th>Order Status</th>\n              <th className=\"text-end\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {borderTableData.map((item, idx) => (\n              <tr key={idx}>\n                <td>#{item.id}</td>\n                <td>{item.date}</td>\n                <td>\n                  {currency}\n                  {item.price}\n                </td>\n                <td>\n                  <span className={`badge bg-${item.status === 'Rejected' ? 'danger' : 'success'}`}>{item.status}</span>\n                </td>\n                <td className=\"text-end\">\n                  <Dropdown className=\"d-inline-block\">\n                    <DropdownToggle as=\"a\" className=\"arrow-none\" id=\"dLabel11\" role=\"button\">\n                      <IconifyIcon icon=\"la:ellipsis-v\" className=\"fs-20 text-muted\" />\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-menu-end\" aria-labelledby=\"dLabel11\">\n                      <DropdownItem href=\"#\">Creat Project</DropdownItem>\n                      <DropdownItem href=\"#\">Open Project</DropdownItem>\n                      <DropdownItem href=\"#\">Tasks Details</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst StripedRowsTable = () => {\n  return (\n    <ComponentContainerCard title=\"Striped Rows\">\n      <Table striped className=\"table mb-0\">\n        <thead className=\"table-light\">\n          <tr>\n            <th>Customer</th>\n            <th>Email</th>\n            <th>Contact No</th>\n            <th className=\"text-end\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stripedRowTableData.map((item, idx) => (\n            <tr key={idx}>\n              <td>\n                <img src={item.avatar} alt=\"avatar\" className=\"rounded-circle thumb-md me-1 d-inline\" /> Aaron Poulin\n              </td>\n              <td>{item.email}</td>\n              <td>{item.phoneNo}</td>\n              <td className=\"text-end\">\n                <span role=\"button\">\n                  <IconifyIcon icon=\"la:pen\" className=\"text-secondary font-16\" />\n                </span>\n                <span role=\"button\">\n                  <IconifyIcon icon=\"la:trash-alt\" className=\"text-secondary font-16\" />\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </ComponentContainerCard>\n  )\n}\n\nconst TableHeadOptions = () => {\n  return (\n    <ComponentContainerCard title=\"Table Head Options\">\n      <div className=\"table-responsive\">\n        <Table className=\"mb-0\">\n          <thead className=\"table-light\">\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Access</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">1</th>\n              <td>Mark</td>\n              <td>XYZ@Example.com</td>\n              <td>\n                <span className=\"badge bg-transparent border border-success text-success\">Business</span>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">2</th>\n              <td>Jacob</td>\n              <td>XYZ@Example.com</td>\n              <td>\n                <span className=\"badge bg-transparent border border-warning text-warning\">Personal</span>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">3</th>\n              <td>Larry</td>\n              <td>XYZ@Example.com</td>\n              <td>\n                <span className=\"badge bg-transparent border border-danger text-danger\">Disabled</span>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">4</th>\n              <td>Mark</td>\n              <td>XYZ@Example.com</td>\n              <td>\n                <span className=\"badge bg-transparent border border-success text-success\">Business</span>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">5</th>\n              <td>Jacob</td>\n              <td>XYZ@Example.com</td>\n              <td>\n                <span className=\"badge bg-transparent border border-warning text-warning\">Personal</span>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst HoverableRowsTable = () => {\n  return (\n    <ComponentContainerCard title=\"Hoverable Rows\">\n      <div className=\"table-responsive\">\n        <Table className=\"table-hover mb-0\">\n          <thead className=\"table-light\">\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.slice(0, 3).map((item, idx) => (\n              <tr key={idx}>\n                <th scope=\"row\">{item.id}</th>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.userName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst DarkTable = () => {\n  return (\n    <ComponentContainerCard title=\"Dark Table\">\n      <div className=\"table-responsive\">\n        <Table variant=\"dark\" className=\"mb-0\">\n          <thead>\n            <tr>\n              <th className=\"rounded-bottom-0\">#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th className=\"rounded-bottom-0\">Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.slice(0, 3).map((item, idx) => (\n              <tr key={idx}>\n                <th scope=\"row\">{item.id}</th>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.userName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst ContextualClasses = () => {\n  return (\n    <ComponentContainerCard title=\"Contextual Classes\">\n      <div className=\"table-responsive-sm\">\n        <table className=\"table mb-0\">\n          <thead className=\"table-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"table-primary\">\n              <th scope=\"row\">1</th>\n              <td>Mark</td>\n              <td>Otto</td>\n              <td>@mdo</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">2</th>\n              <td>Jacob</td>\n              <td>Thornton</td>\n              <td>@fat</td>\n            </tr>\n            <tr className=\"table-secondary\">\n              <th scope=\"row\">3</th>\n              <td>Larry</td>\n              <td>the Bird</td>\n              <td>@twitter</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">4</th>\n              <td>Mark</td>\n              <td>Otto</td>\n              <td>@mdo</td>\n            </tr>\n            <tr className=\"table-success\">\n              <th scope=\"row\">5</th>\n              <td>Jacob</td>\n              <td>Thornton</td>\n              <td>@fat</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">6</th>\n              <td>Larry</td>\n              <td>the Bird</td>\n              <td>@twitter</td>\n            </tr>\n            <tr className=\"table-info\">\n              <th scope=\"row\">7</th>\n              <td>Jacob</td>\n              <td>Thornton</td>\n              <td>@fat</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">8</th>\n              <td>Larry</td>\n              <td>the Bird</td>\n              <td>@twitter</td>\n            </tr>\n            <tr className=\"table-warning\">\n              <th scope=\"row\">9</th>\n              <td>Jacob</td>\n              <td>Thornton</td>\n              <td>@fat</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">10</th>\n              <td>Larry</td>\n              <td>the Bird</td>\n              <td>@twitter</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst CaptionsTable = () => {\n  return (\n    <ComponentContainerCard title=\"Captions Table\">\n      <div className=\"table-responsive-sm\">\n        <Table className=\"mb-0\">\n          <caption>List of users</caption>\n          <thead className=\"table-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.slice(0, 3).map((item, idx) => (\n              <tr key={idx}>\n                <th scope=\"row\">{item.id}</th>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.userName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst SmallTable = () => {\n  return (\n    <ComponentContainerCard title=\"Small Table\">\n      <div className=\"table-responsive-sm\">\n        <Table size=\"sm\" className=\"mb-0\">\n          <thead className=\"table-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableData.slice(0, 3).map((item, idx) => (\n              <tr key={idx}>\n                <th scope=\"row\">{item.id}</th>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.userName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst BasicTables = () => {\n  return (\n    <>\n      <PageMetaData title=\"Basic Tables\" />\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={6}>\n          <BasicTable />\n        </Col>\n        <Col md={6} lg={6}>\n          <BorderedTable />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={6}>\n          <StripedRowsTable />\n        </Col>\n        <Col md={6} lg={6}>\n          <TableHeadOptions />\n        </Col>\n      </Row>\n      <div className=\"row justify-content-center\">\n        <Col md={6} lg={6}>\n          <HoverableRowsTable />\n        </Col>\n        <Col md={6} lg={6}>\n          <DarkTable />\n        </Col>\n      </div>\n      <div className=\"row justify-content-center\">\n        <Col md={6} lg={6}>\n          <ContextualClasses />\n        </Col>\n        <Col md={6} lg={6}>\n          <CaptionsTable />\n          <SmallTable />\n        </Col>\n      </div>\n    </>\n  )\n}\n\nexport default BasicTables\n"],"names":["basicTableData","chatGpt","nextJsLogo","reactJsLogo","symfonyLogo","borderTableData","stripedRowTableData","avatar3","avatar4","avatar5","avatar6","tableData","BasicTable","jsx","ComponentContainerCard","jsxs","Table","item","idx","currency","Dropdown","DropdownToggle","IconifyIcon","DropdownMenu","DropdownItem","BorderedTable","StripedRowsTable","TableHeadOptions","HoverableRowsTable","DarkTable","ContextualClasses","CaptionsTable","SmallTable","BasicTables","Fragment","PageMetaData","Row","Col"],"mappings":"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"}