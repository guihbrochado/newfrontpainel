{"version":3,"file":"SelectFormInput-bk88NkRC.js","sources":["../../src/components/form/SelectFormInput.tsx"],"sourcesContent":["'use client'\nimport { FormLabel } from 'react-bootstrap'\nimport Feedback from 'react-bootstrap/esm/Feedback'\nimport { Controller, FieldPath, FieldValues } from 'react-hook-form'\nimport ReactSelect, { type Props } from 'react-select'\n\nimport type { FormInputProps } from '@/types/component-props'\n\nconst SelectFormInput = <\n  Option extends { value: string; label: string },\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  control,\n  id,\n  name,\n  label,\n  className,\n  containerClassName,\n  labelClassName,\n  noValidate,\n  options,\n  ...other\n}: FormInputProps<TFieldValues> & Props<Option>) => {\n  return (\n    <Controller<TFieldValues, TName>\n      control={control}\n      name={name as TName}\n      render={({ field, fieldState }) => (\n        <div className={containerClassName}>\n          {label &&\n            (typeof label === 'string' ? (\n              <FormLabel htmlFor={id ?? name} className={labelClassName}>\n                {label}\n              </FormLabel>\n            ) : (\n              <>{label}</>\n            ))}\n          {/* @ts-ignore */}\n          <ReactSelect<Option>\n            {...other}\n            {...field}\n            options={options}\n            onChange={(e) => field.onChange(e!.value)}\n            value={Array.isArray(options) && options?.find((op) => 'value' in op && op.value == field.value)}\n            classNamePrefix=\"react-select\"\n            id={id ?? name}\n          />\n          {!noValidate && fieldState.error?.message && <Feedback type=\"invalid\">{fieldState.error?.message}</Feedback>}\n        </div>\n      )}\n    />\n  )\n}\n\nexport default SelectFormInput\n"],"names":["SelectFormInput","control","id","name","label","className","containerClassName","labelClassName","noValidate","options","other","jsx","Controller","field","fieldState","jsxs","FormLabel","ReactSelect","e","op","_a","Feedback","_b"],"mappings":"iOAQA,MAAMA,EAAkB,CAItB,CACA,QAAAC,EACA,GAAAC,EACA,KAAAC,EACA,MAAAC,EACA,UAAAC,EACA,mBAAAC,EACA,eAAAC,EACA,WAAAC,EACA,QAAAC,EACA,GAAGC,CACL,IAEIC,EAAA,IAACC,EAAA,CACC,QAAAX,EACA,KAAAE,EACA,OAAQ,CAAC,CAAE,MAAAU,EAAO,WAAAC,CAChB,IAAA,SAAAC,OAAAA,OAAC,MAAI,CAAA,UAAWT,EACb,SAAA,CAAAF,IACE,OAAOA,GAAU,SAChBO,EAAAA,IAACK,EAAU,CAAA,QAASd,GAAMC,EAAM,UAAWI,EACxC,SACHH,CAAA,CAAA,oBAEG,SAAMA,CAAA,CAAA,GAGbO,EAAA,IAACM,EAAA,CACE,GAAGP,EACH,GAAGG,EACJ,QAAAJ,EACA,SAAWS,GAAML,EAAM,SAASK,EAAG,KAAK,EACxC,MAAO,MAAM,QAAQT,CAAO,IAAKA,GAAA,YAAAA,EAAS,KAAMU,GAAO,UAAWA,GAAMA,EAAG,OAASN,EAAM,QAC1F,gBAAgB,eAChB,GAAIX,GAAMC,CAAA,CACZ,EACC,CAACK,KAAcY,EAAAN,EAAW,QAAX,YAAAM,EAAkB,UAAYT,EAAAA,IAAAU,EAAA,CAAS,KAAK,UAAW,UAAWC,EAAAR,EAAA,QAAA,YAAAQ,EAAO,OAAQ,CAAA,CAAA,CACnG,CAAA,EAAA,CAEJ"}