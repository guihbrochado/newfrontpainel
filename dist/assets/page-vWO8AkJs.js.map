{"version":3,"file":"page-vWO8AkJs.js","sources":["../../src/app/(admin)/categories/page.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ComponentContainerCard from \"@/components/ComponentContainerCard\";\nimport { Col, Row, Table, Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport PageMetaData from \"@/components/PageMetaData\";\nimport IconifyIcon from \"@/components/wrappers/IconifyIcon\";\nimport axios from \"axios\";\nimport { useAuthContext } from \"@/context/AuthContext\";\n\nconst CategoriesPage = () => {\n  const { user, loading } = useAuthContext();\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showCreateModal, setShowCreateModal] = useState(false); // ðŸ”¹ Agora estÃ¡ corretamente declarado\n  const [newCategory, setNewCategory] = useState({ name: \"\" });\n\n  // ðŸš€ Buscar categorias\n  useEffect(() => {\n    const fetchCategories = async () => {\n      if (loading || !user) {\n        setError(\"UsuÃ¡rio nÃ£o autenticado.\");\n        return;\n      }\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-categories\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n\tconsole.log(response.data);\n\n        if (response.data && Array.isArray(response.data)) {\n          setCategories(response.data);\n        } else {\n          setError(\"Erro ao carregar categorias.\");\n        }\n      } catch (err) {\n        console.error(\"Erro ao buscar categorias:\", err);\n        setError(\"Erro ao carregar categorias.\");\n      }\n    };\n    fetchCategories();\n  }, [user, loading]);\n\n  // ðŸš€ Criar nova categoria\n  const handleCreateCategory = async () => {\n    if (!newCategory.name.trim()) {\n      setError(\"O nome da categoria Ã© obrigatÃ³rio.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-categories\",\n        { name: newCategory.name }, // ðŸ”¹ Enviando apenas o nome\n        { headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" } }\n      );\n\tconsole.log(response.data);\n      setMessage(\"Categoria criada com sucesso!\");\n      setShowCreateModal(false);\n      setNewCategory({ name: \"\" });\n\n      // Atualizar lista de categorias\n      const updatedCategories = await axios.get(\"https://webapp396758.ip-45-33-113-78.cloudezapp.io/public/api/posts-categories\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setCategories(updatedCategories.data);\n    } catch (err) {\n      console.error(\"Erro ao criar categoria:\", err);\n      if (err.response?.status === 422) {\n        setError(\"Erro ao criar categoria: dados invÃ¡lidos.\");\n      } else {\n        setError(\"Erro ao criar categoria.\");\n      }\n    }\n  };\n\n  if (error) {\n    return (\n      <Row className=\"justify-content-center\">\n        <Col md={12} lg={12}>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Row className=\"justify-content-center\">\n        <Col md={12} lg={12}>\n          <div>Carregando...</div>\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      <PageMetaData title=\"Categorias de Posts\" />\n      <Row className=\"justify-content-center\">\n        <Col md={12} lg={12}>\n          <ComponentContainerCard title=\"Categorias de Posts\">\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n\n            {/* ðŸ”¹ BotÃ£o para criar categoria */}\n            <div className=\"d-flex justify-content-end mb-3\">\n              <Button variant=\"primary\" onClick={() => setShowCreateModal(true)}>\n                <IconifyIcon icon=\"la:plus\" className=\"me-1\" /> Adicionar Categoria\n              </Button>\n            </div>\n\n            <Table striped className=\"table mb-0\">\n              <thead className=\"table-light\">\n                <tr>\n                  <th>ID</th>\n                  <th>TÃ­tulo</th>\n                  <th>Quantidade de Posts</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categories.map((category) => (\n                  <tr key={category.id}>\n                    <td>{category.id}</td>\n                    <td>{category.name}</td>\n                    <td>{category.posts ? category.posts.length : 0}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ComponentContainerCard>\n        </Col>\n      </Row>\n\n      {/* ðŸ”¹ Modal de CriaÃ§Ã£o de Categoria */}\n      <Modal show={showCreateModal} onHide={() => setShowCreateModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Criar Nova Categoria</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"categoryName\">\n              <Form.Label>Nome da Categoria</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Digite o nome da categoria\"\n                value={newCategory.name}\n                onChange={(e) => setNewCategory({ ...newCategory, name: e.target.value })}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowCreateModal(false)}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={handleCreateCategory}>\n            Criar Categoria\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["CategoriesPage","user","loading","useAuthContext","categories","setCategories","useState","error","setError","message","setMessage","showCreateModal","setShowCreateModal","newCategory","setNewCategory","useEffect","token","response","axios","err","handleCreateCategory","updatedCategories","_a","Row","jsx","Col","Alert","jsxs","Fragment","PageMetaData","ComponentContainerCard","Button","IconifyIcon","Table","category","Modal","Form","e"],"mappings":"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"}