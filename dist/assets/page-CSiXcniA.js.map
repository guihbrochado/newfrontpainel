{"version":3,"file":"page-CSiXcniA.js","sources":["../../src/app/(admin)/banners/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, ChangeEvent } from \"react\";\nimport { Table, Modal, Button, Form, Alert, Nav } from \"react-bootstrap\";\nimport axios, { AxiosError } from \"axios\";\nimport { useAuthContext } from \"@/context/AuthContext\";\n//import { useNavigate } from \"react-router-dom\";\nimport PageMetaData from \"@/components/PageMetaData\";\nimport ComponentContainerCard from \"@/components/ComponentContainerCard\";\nimport IconifyIcon from \"@/components/wrappers/IconifyIcon\";\n\n// Interface para o formato do erro retornado pela API\ninterface ApiErrorResponse {\n  message?: string;\n}\n\ninterface Banner {\n  id: number;\n  title: string;\n  image_path: string;\n  position: string;\n  is_carousel: boolean;\n  url: string;\n  open_in_new_tab: boolean;\n  start_date: string;\n  end_date: string;\n  clicks: number;\n  is_active: boolean;\n}\n\ninterface BannerFormData {\n  title: string;\n  image: File | null;\n  position: string;\n  order: number;\n  carousel: boolean;\n  url: string;\n  open_in_new_tab: boolean;\n  start_date: string;\n  end_date: string;\n  clicks: number;\n  is_active: boolean;\n}\n\nconst ListaBanners = () => {\n  const { user } = useAuthContext();\n  //  const navigate = useNavigate();\n  const [banners, setBanners] = useState<Banner[]>([]);\n  const [error, setError] = useState<string | null>(\"\");\n  const [message, setMessage] = useState<string | null>(\"\");\n  const [activeTab, setActiveTab] = useState(\"ativos\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedBanner, setSelectedBanner] = useState<Banner | null>(null);\n  const [bannerData, setBannerData] = useState<BannerFormData>({\n    title: \"\",\n    image: null,\n    position: \"topo\",\n    order: 1,\n    carousel: false,\n    url: \"\",\n    open_in_new_tab: false,\n    start_date: \"\",\n    end_date: \"\",\n    clicks: 0,\n    is_active: true,\n  });\n\n  const API_URL = import.meta.env.VITE_API_URL;\n\n  useEffect(() => {\n    if (!user) {\n      setError(\"Usuário não autenticado.\");\n      return;\n    }\n    if (user.role !== \"Administrador\") {\n      setError(\"Você não tem permissão para acessar esta página.\");\n      return;\n    }\n\n    const fetchBanners = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\n          `${API_URL}/banners`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        const bannersArray = response.data?.data || [];\n        setBanners(bannersArray);\n      } catch (err) {\n        setError(\"Erro ao carregar banners.\");\n      }\n    };\n\n    fetchBanners();\n  }, [user]);\n\n  const filterBanners = (status: string) => {\n    return banners.filter((banner) => {\n      if (status === \"ativos\") return banner.is_active;\n      if (status === \"inativos\") return !banner.is_active;\n      return true;\n    });\n  };\n\n  const handleEditClick = (banner: Banner) => {\n    setSelectedBanner(banner);\n    const initialPosition = [\"topo\", \"lateral\", \"entre_conteudos\", \"rodape\"].includes(banner.position)\n      ? banner.position\n      : \"topo\";\n    setBannerData({\n      title: banner.title || \"\",\n      image: null,\n      position: initialPosition,\n      order: 1,\n      carousel: banner.is_carousel || false,\n      url: banner.url || \"\",\n      open_in_new_tab: banner.open_in_new_tab || false,\n      start_date: banner.start_date ? new Date(banner.start_date).toISOString().split(\"T\")[0] : \"\",\n      end_date: banner.end_date ? new Date(banner.end_date).toISOString().split(\"T\")[0] : \"\",\n      clicks: banner.clicks || 0,\n      is_active: banner.is_active || true,\n    });\n    setShowModal(true);\n  };\n\n  const handleCreateClick = () => {\n    setSelectedBanner(null);\n    setBannerData({\n      title: \"\",\n      image: null,\n      position: \"topo\",\n      order: 1,\n      carousel: false,\n      url: \"\",\n      open_in_new_tab: false,\n      start_date: \"\",\n      end_date: \"\",\n      clicks: 0,\n      is_active: true,\n    });\n    setShowModal(true);\n  };\n\n  const handleSaveBanner = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      const validPosition = [\"topo\", \"lateral\", \"entre_conteudos\", \"rodape\"].includes(bannerData.position)\n        ? bannerData.position\n        : \"topo\";\n\n      const formData = new FormData();\n      formData.append(\"title\", bannerData.title);\n      if (bannerData.image instanceof File) {\n        formData.append(\"image\", bannerData.image);\n      }\n      formData.append(\"position\", validPosition);\n      formData.append(\"is_carousel\", bannerData.carousel ? \"1\" : \"0\");\n      formData.append(\"url\", bannerData.url);\n      formData.append(\"open_in_new_tab\", bannerData.open_in_new_tab ? \"1\" : \"0\");\n      formData.append(\"start_date\", bannerData.start_date || \"\");\n      formData.append(\"end_date\", bannerData.end_date || \"\");\n      formData.append(\"is_active\", bannerData.is_active ? \"1\" : \"0\");\n\n      // Log para verificar os dados enviados\n      console.log(\"Dados enviados no FormData:\");\n      for (let [key, value] of formData.entries()) {\n        console.log(`${key}: ${value instanceof File ? `${value.name} (${value.size} bytes)` : value}`);\n      }\n\n      if (selectedBanner) {\n        const response = await axios.put(\n          `${API_URL}/banners/${selectedBanner.id}`,\n          formData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        console.log(\"Resposta do servidor (update):\", response.data);\n        setBanners(\n          banners.map((b) =>\n            b.id === selectedBanner.id\n              ? {\n                ...b,\n                ...bannerData,\n                position: validPosition,\n                image_path: response.data.data.image_path || b.image_path, // Atualiza o image_path\n              }\n              : b\n          )\n        );\n        setMessage(\"Banner atualizado com sucesso!\");\n      } else {\n        const response = await axios.post(\n          `${API_URL}/banners`,\n          formData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        setBanners([...banners, response.data.data]);\n        setMessage(\"Banner criado com sucesso!\");\n      }\n      setShowModal(false);\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      const error = err as AxiosError<ApiErrorResponse>;\n      console.error(\"Erro ao salvar banner:\", error.response?.data);\n      setError(error.response?.data?.message || \"Erro ao salvar banner. Tente novamente.\");\n    }\n  };\n\n  const handleDeleteClick = async (banner: Banner) => {\n    if (!confirm(\"Tem certeza que deseja excluir este banner?\")) return;\n\n    const token = localStorage.getItem(\"token\");\n    try {\n      await axios.delete(\n        `${API_URL}/banners/${banner.id}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setBanners(banners.filter((b) => b.id !== banner.id));\n      setMessage(\"Banner excluído com sucesso!\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Erro ao excluir banner:\", err);\n      setError(\"Erro ao excluir banner. Tente novamente.\");\n    }\n  };\n\n  const handleToggleStatus = async (id: number, currentStatus: boolean) => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      await axios.patch(\n        `${API_URL}/banners/${id}/toggle-status`, {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setBanners(\n        banners.map((banner) =>\n          banner.id === id ? { ...banner, is_active: !currentStatus } : banner\n        )\n      );\n      setMessage(`Status do banner atualizado para ${!currentStatus ? \"ativo\" : \"inativo\"}!`);\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Erro ao alternar status:\", err);\n      setError(\"Erro ao atualizar o status do banner.\");\n    }\n  };\n\n  if (error) {\n    return <Alert variant=\"danger\">{error}</Alert>;\n  }\n\n  return (\n    <>\n      <PageMetaData title=\"Gestão de Banners\" />\n      <ComponentContainerCard title=\"Gestão de Banners\" showAddButton onAddClick={handleCreateClick}>\n        {message && <Alert variant=\"info\">{message}</Alert>}\n\n        <Nav variant=\"tabs\" className=\"mt-3\">\n          <Nav.Item>\n            <Nav.Link active={activeTab === \"ativos\"} onClick={() => setActiveTab(\"ativos\")}>\n              Ativos\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link active={activeTab === \"inativos\"} onClick={() => setActiveTab(\"inativos\")}>\n              Inativos\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <Table striped className=\"table mb-0 mt-3\">\n          <thead className=\"table-light\">\n            <tr>\n              <th>ID</th>\n              <th>Imagem</th>\n              <th>Título</th>\n              <th>Posição</th>\n              <th>Ordem</th>\n              <th>Carrossel</th>\n              <th>Cliques</th>\n              <th>Ativo</th>\n              <th className=\"text-end\">Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filterBanners(activeTab).length > 0 ? (\n              filterBanners(activeTab).map((banner) => (\n                <tr key={banner.id}>\n                  <td>{banner.id}</td>\n                  <td>\n                    {banner.image_path && (\n                      <img\n                        src={`${API_URL}/storage/app/public/banners/${banner.image_path\n                          .split(\"/\")\n                          .pop()}`}\n                        alt={banner.title || \"Banner\"}\n                        style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\n                      />\n                    )}\n                  </td>\n                  <td>{banner.title || \"Sem título\"}</td>\n                  <td>{banner.position}</td>\n                  <td>{1}</td>\n                  <td>{banner.is_carousel ? \"Sim\" : \"Não\"}</td>\n                  <td>{banner.clicks || 0}</td>\n                  <td>{banner.is_active ? \"Sim\" : \"Não\"}</td>\n                  <td className=\"text-end\">\n                    <span role=\"button\" onClick={() => handleEditClick(banner)}>\n                      <IconifyIcon icon=\"la:pen\" className=\"text-secondary font-16 me-2\" />\n                    </span>\n                    <span role=\"button\" onClick={() => handleDeleteClick(banner)}>\n                      <IconifyIcon icon=\"la:trash-alt\" className=\"text-danger font-16\" />\n                    </span>\n                    <span role=\"button\" onClick={() => handleToggleStatus(banner.id, banner.is_active)}>\n                      <IconifyIcon\n                        icon={banner.is_active ? \"la:times\" : \"la:check\"}\n                        className={banner.is_active ? \"text-secondary font-16 me-2\" : \"text-success font-16\"}\n                      />\n                    </span>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={9} className=\"text-center\">\n                  Nenhum banner encontrado.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{selectedBanner ? \"Editar Banner\" : \"Criar Banner\"}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Título</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={bannerData.title}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, title: e.target.value }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Imagem</Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  accept=\".png,.jpg,.gif\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                    const file = e.target.files?.[0];\n                    if (file) {\n                      if (file.size > 2048 * 1024) {\n                        setError(\"A imagem deve ter no máximo 2 MB.\");\n                        return;\n                      }\n                      const validTypes = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n                      if (!validTypes.includes(file.type)) {\n                        setError(\"A imagem deve ser do tipo PNG, JPG ou GIF.\");\n                        return;\n                      }\n                      console.log(\"Imagem selecionada:\", file.name, file.size, \"bytes\"); // Log para verificar\n                      setBannerData((prev) => ({ ...prev, image: file }));\n                    }\n                  }}\n                />\n                {selectedBanner && selectedBanner.image_path && (\n                  <img\n                    src={`${API_URL}/storage/app/public/banners/${selectedBanner.image_path.split(\"/\").pop()}`}\n                    alt={selectedBanner.title || \"Banner\"}\n                    style={{ maxWidth: \"100px\", maxHeight: \"100px\", marginTop: \"10px\" }}\n                  />\n                )}\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Posição</Form.Label>\n                <Form.Select\n                  value={bannerData.position}\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n                    setBannerData((prev) => ({ ...prev, position: e.target.value }))\n                  }\n                >\n                  <option value=\"topo\">Topo</option>\n                  <option value=\"lateral\">Lateral</option>\n                  <option value=\"entre_conteudos\">Entre Conteúdos</option>\n                  <option value=\"rodape\">Rodapé</option>\n                </Form.Select>\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Ordem</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  min=\"1\"\n                  value={bannerData.order}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, order: parseInt(e.target.value) }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Exibir no Carrossel\"\n                  checked={bannerData.carousel}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, carousel: e.target.checked }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Link</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={bannerData.url}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, url: e.target.value }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Abrir em nova aba\"\n                  checked={bannerData.open_in_new_tab}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, open_in_new_tab: e.target.checked }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Data de Início</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={bannerData.start_date}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, start_date: e.target.value }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Data de Término</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={bannerData.end_date}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, end_date: e.target.value }))\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Ativo\"\n                  checked={bannerData.is_active}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setBannerData((prev) => ({ ...prev, is_active: e.target.checked }))\n                  }\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Cancelar\n            </Button>\n            <Button variant=\"primary\" onClick={handleSaveBanner}>\n              Salvar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </ComponentContainerCard>\n    </>\n  );\n};\n\nexport default ListaBanners;\n"],"names":["ListaBanners","user","useAuthContext","banners","setBanners","useState","error","setError","message","setMessage","activeTab","setActiveTab","showModal","setShowModal","selectedBanner","setSelectedBanner","bannerData","setBannerData","API_URL","useEffect","token","bannersArray","_a","axios","filterBanners","status","banner","handleEditClick","initialPosition","handleCreateClick","handleSaveBanner","validPosition","formData","key","value","response","b","err","handleDeleteClick","handleToggleStatus","id","currentStatus","Alert","jsxs","Fragment","jsx","PageMetaData","ComponentContainerCard","Nav","Table","IconifyIcon","Modal","Form","e","prev","file","Button"],"mappings":"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"}