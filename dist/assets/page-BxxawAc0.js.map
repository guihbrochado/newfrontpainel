{"version":3,"file":"page-BxxawAc0.js","sources":["../../src/context/useChatContext.tsx","../../src/app/(admin)/apps/chat/components/ChatArea.tsx","../../src/app/(admin)/apps/chat/components/ChatItem.tsx","../../src/app/(admin)/apps/chat/components/ActiveUsersPane.tsx","../../src/app/(admin)/apps/chat/components/MessagesPane.tsx","../../src/app/(admin)/apps/chat/components/ChatListPanel.tsx","../../src/app/(admin)/apps/chat/page.tsx"],"sourcesContent":["'use client'\nimport { createContext, useContext, useEffect, useState } from 'react'\n\nimport { getUserById } from '@/helpers/data'\nimport type { ChildrenType } from '@/types/component-props'\nimport type { ChatContextType } from '@/types/context'\nimport type { UserType } from '@/types/data'\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined)\n\nexport const useChatContext = () => {\n  const context = useContext(ChatContext)\n  if (!context) {\n    throw new Error('useChatContext can only be used within ChatProvider')\n  }\n  return context\n}\n\nexport const ChatProvider = ({ children }: ChildrenType) => {\n  const [activeChat, setActiveChat] = useState<UserType>()\n\n  const changeActiveChat = async (userId: UserType['id']) => {\n    const user = await getUserById(userId)\n    if (user) setActiveChat(user)\n  }\n\n  useEffect(() => {\n    changeActiveChat('101')\n  }, [])\n\n  return (\n    <ChatContext.Provider\n      value={{\n        activeChat,\n        changeActiveChat,\n      }}>\n      {children}\n    </ChatContext.Provider>\n  )\n}\n","import { yupResolver } from '@hookform/resolvers/yup'\nimport clsx from 'clsx'\n\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport * as yup from 'yup'\n\nimport { messages } from '@/assets/data/apps'\nimport TextFormInput from '@/components/form/TextFormInput'\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport SimplebarReactClient from '@/components/wrappers/SimplebarReactClient'\nimport { useChatContext } from '@/context/useChatContext'\nimport type { ChatMessageType, UserType } from '@/types/data'\nimport { addOrSubtractMinutesFromDate, timeSince } from '@/utils/date'\n\nimport avatar1 from '@/assets/images/users/avatar-1.jpg'\nimport avatar10 from '@/assets/images/users/avatar-10.jpg'\n\nconst AlwaysScrollToBottom = () => {\n  const elementRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (elementRef?.current?.scrollIntoView) elementRef.current.scrollIntoView({ behavior: 'smooth' })\n  })\n  return <div ref={elementRef} />\n}\n\nconst UserMessage = ({ message, toUser }: { message: ChatMessageType; toUser: UserType }) => {\n  const received = message.from.id === toUser.id\n  return (\n    <div className={clsx('d-flex', { 'flex-row-reverse': received })}>\n      <img src={message.from.avatar} alt=\"user-avatar\" className=\"rounded-circle thumb-md\" />\n      <div className={clsx('chat-box w-100', received ? 'me-1 reverse' : 'ms-1')}>\n        <div className=\"user-chat\">\n          <p>{message.message}</p>\n        </div>\n        <div className=\"chat-time\">{timeSince(new Date(message.sentOn))}</div>\n      </div>\n    </div>\n  )\n}\n\nconst ChatArea = () => {\n  const { activeChat } = useChatContext()\n  const [userMessages, setUserMessages] = useState<ChatMessageType[]>([])\n\n  const messageSchema = yup.object({\n    newMessage: yup.string().required('Please enter message'),\n  })\n\n  const { reset, handleSubmit, control } = useForm({\n    resolver: yupResolver(messageSchema),\n  })\n\n  const [toUser] = useState<UserType>({\n    id: '103',\n    name: 'Gilbert Chicoine',\n    avatar: avatar10,\n    handle: '@gilbert',\n    role: 'User',\n    source: 'Direct',\n    status: 'Active',\n    email: 'jamesbridge@teleworm.us',\n    lastMessage: 'Hey! Okay, thank you for letting me know. See you!',\n    lastActivity: addOrSubtractMinutesFromDate(1),\n    phoneNo: '456 9595 9594',\n    activityStatus: 'typing',\n  })\n\n  const getMessagesForUser = useCallback(() => {\n    if (activeChat) {\n      setUserMessages(\n        messages.filter((m) => (m.to.id === toUser.id && m.from.id === activeChat.id) || (toUser.id === m.from.id && m.to.id === activeChat.id)),\n      )\n    }\n  }, [activeChat, toUser])\n\n  useEffect(() => {\n    getMessagesForUser()\n  }, [activeChat])\n\n  const sendChatMessage = (values: { newMessage?: string }) => {\n    if (activeChat) {\n      const newUserMessages = [...userMessages]\n      newUserMessages.push({\n        id: (userMessages.length + 1).toString(),\n        from: toUser,\n        to: activeChat,\n        message: values.newMessage ?? '',\n        sentOn: addOrSubtractMinutesFromDate(0.1),\n      })\n      setTimeout(() => {\n        const otherNewMessages = [...newUserMessages]\n        otherNewMessages.push({\n          id: (userMessages.length + 1).toString(),\n          from: activeChat,\n          to: toUser,\n          message: values.newMessage ?? '',\n          sentOn: addOrSubtractMinutesFromDate(0.1),\n        })\n        setUserMessages(otherNewMessages)\n      }, 1000)\n      setUserMessages(newUserMessages)\n      reset()\n    }\n  }\n\n  if (activeChat) {\n    const { name, lastActivity } = activeChat\n\n    return (\n      <div className=\"chat-box-right\">\n        <div className=\"p-3 d-flex justify-content-between align-items-center card-bg rounded\">\n          <div role=\"button\" className=\"d-flex align-self-center\">\n            <div className=\"flex-shrink-0\">\n              <img src={activeChat.avatar ?? avatar1} alt=\"user\" className=\"rounded-circle thumb-lg\" />\n            </div>\n            <div className=\"flex-grow-1 ms-2 align-self-center\">\n              <div>\n                <h6 className=\"my-0 fw-medium text-dark fs-14\">{name}</h6>\n                <p className=\"text-muted mb-0\">Last seen: {timeSince(new Date(lastActivity))}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"d-none d-sm-inline-block align-self-center mb-1\">\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip className=\"tooltip-primary\">Call</Tooltip>}>\n              <span role=\"button\" className=\"fs-22 me-2 text-muted\">\n                <IconifyIcon icon=\"iconoir:phone\" />\n              </span>\n            </OverlayTrigger>\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip className=\"tooltip-primary\">Video call</Tooltip>}>\n              <span role=\"button\" className=\"fs-22 me-2 text-muted\">\n                <IconifyIcon icon=\"iconoir:video-camera\" />\n              </span>\n            </OverlayTrigger>\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip className=\"tooltip-primary\">Delete</Tooltip>}>\n              <span role=\"button\" className=\"fs-22 me-2 text-muted\">\n                <IconifyIcon icon=\"iconoir:trash\" />\n              </span>\n            </OverlayTrigger>\n            <span role=\"button\" className=\"fs-22 text-muted\">\n              <IconifyIcon icon=\"iconoir:menu-scale\" />\n            </span>\n          </div>\n        </div>\n        <SimplebarReactClient className=\"chat-body\">\n          <div className=\"chat-detail\">\n            {userMessages.map((message) => {\n              return <UserMessage key={message.id} message={message} toUser={toUser} />\n            })}\n\n            <AlwaysScrollToBottom />\n          </div>\n        </SimplebarReactClient>\n        <div className=\"chat-footer\">\n          <form className=\"d-flex\" onSubmit={handleSubmit(sendChatMessage)}>\n            <TextFormInput containerClassName=\"w-100\" name=\"newMessage\" control={control} placeholder=\"Type something here...\" noValidate />\n            <div className=\"text-end\">\n              <div className=\"chat-features icons-center flex-nowrap\">\n                <div className=\"d-none d-sm-inline-flex \">\n                  <span role=\"button\">\n                    <IconifyIcon icon=\"iconoir:camera\" />\n                  </span>\n                  <span role=\"button\">\n                    <IconifyIcon icon=\"iconoir:attachment\" />\n                  </span>\n                  <span role=\"button\">\n                    <IconifyIcon icon=\"iconoir:microphone\" />\n                  </span>\n                </div>\n                <button type=\"submit\" role=\"button\" className=\"btn p-0 text-primary\">\n                  <IconifyIcon icon=\"iconoir:send-solid\" />\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatArea\n","import clsx from 'clsx'\n\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport type { UserType } from '@/types/data'\nimport { timeSince } from '@/utils/date'\nimport { useChatContext } from '@/context/useChatContext'\n\nconst ChatItem = ({ id, avatar, activityStatus, lastActivity, lastMessage, name, unreadCount }: UserType) => {\n  const { changeActiveChat } = useChatContext()\n  return (\n    <div onClick={() => changeActiveChat(id)} className=\"p-2 border-dashed border-theme-color rounded mb-2\">\n      <div role=\"button\">\n        <div className=\"d-flex align-items-start\">\n          <div className=\"position-relative\">\n            <img src={avatar} alt=\"avatar\" className=\"thumb-lg rounded-circle\" />\n            <span className=\"position-absolute bottom-0 end-0\">\n              <IconifyIcon\n                icon=\"fa6-solid:circle\"\n                className={clsx('fs-10 border-2 border-theme-color', activityStatus !== 'offline' ? 'text-success' : 'text-secondary')}\n              />\n            </span>\n          </div>\n          <div className=\"flex-grow-1 ms-2 text-truncate align-self-center\">\n            <h6 className=\"my-0 fw-medium text-dark fs-14\">\n              {name}\n              <small className=\"float-end text-muted fs-11\">{timeSince(new Date(lastActivity))}</small>\n            </h6>\n            <p className=\"text-muted mb-0\">\n              {activityStatus === 'typing' ? <span className=\"text-primary\">Typing...</span> : lastMessage}\n              {unreadCount && <span className=\"badge float-end rounded text-white bg-success \">{unreadCount}</span>}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatItem\n","import { TabPane } from 'react-bootstrap'\n\nimport type { UserType } from '@/types/data'\nimport ChatItem from './ChatItem'\n\nconst ActiveUsersPane = ({ chats }: { chats: UserType[] }) => {\n  return (\n    <TabPane eventKey=\"Active\" className=\"fade\" role=\"tabpanel\">\n      {chats\n        .filter((user) => user.activityStatus !== 'offline')\n        .map((chat) => (\n          <ChatItem key={chat.id} {...chat} />\n        ))}\n    </TabPane>\n  )\n}\n\nexport default ActiveUsersPane\n","import { Col, Row, TabPane } from 'react-bootstrap'\n\nimport ChatItem from './ChatItem'\nimport type { UserType } from '@/types/data'\n\nconst MessagesPane = ({ chats }: { chats: UserType[] }) => {\n  return (\n    <TabPane eventKey=\"Messages\" className=\"fade\" role=\"tabpanel\">\n      <Row>\n        <Col>\n          {chats.map((chat) => (\n            <ChatItem key={chat.id} {...chat} />\n          ))}\n        </Col>\n      </Row>\n    </TabPane>\n  )\n}\n\nexport default MessagesPane\n","import { useState } from 'react'\nimport { Nav, NavItem, NavLink, TabContainer, TabContent } from 'react-bootstrap'\n\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport SimplebarReactClient from '@/components/wrappers/SimplebarReactClient'\nimport ActiveUsersPane from './ActiveUsersPane'\nimport MessagesPane from './MessagesPane'\nimport { users } from '@/assets/data/other'\n\nconst ChatListPanel = () => {\n  const [chats, setChats] = useState(users)\n\n  const search = (text: string) => {\n    setChats(text ? users.filter((u) => u.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) : users)\n  }\n\n  return (\n    <div className=\"chat-box-left\">\n      <TabContainer mountOnEnter defaultActiveKey=\"Messages\">\n        <Nav justify variant=\"tabs\">\n          <NavItem role=\"presentation\">\n            <NavLink as=\"span\" className=\"py-2\" eventKey=\"Messages\" role=\"button\">\n              Messages\n            </NavLink>\n          </NavItem>\n          <NavItem role=\"presentation\">\n            <NavLink as=\"span\" className=\"py-2\" eventKey=\"Active\" role=\"button\">\n              Active\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <div className=\"chat-search p-3\">\n          <div className=\"p-1 bg-light rounded rounded-pill\">\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <button type=\"button\" className=\"btn btn-link text-secondary\">\n                  <IconifyIcon icon=\"fa6-solid:magnifying-glass\" />\n                </button>\n              </div>\n              <input\n                type=\"search\"\n                placeholder=\"Searching..\"\n                onChange={(e) => search(e.target.value)}\n                aria-describedby=\"button-addon2\"\n                className=\"form-control border-0 bg-light\"\n              />\n            </div>\n          </div>\n        </div>\n        <SimplebarReactClient className=\"chat-body-left px-3\">\n          <TabContent>\n            <MessagesPane chats={chats} />\n\n            <ActiveUsersPane chats={chats} />\n          </TabContent>\n        </SimplebarReactClient>\n      </TabContainer>\n    </div>\n  )\n}\n\nexport default ChatListPanel\n","import { ChatProvider } from '@/context/useChatContext'\nimport ChatArea from './components/ChatArea'\nimport ChatListPanel from './components/ChatListPanel'\nimport { Col, Row } from 'react-bootstrap'\nimport PageMetaData from '@/components/PageMetaData'\n\nconst Chat = () => {\n  return (\n    <>\n      <PageMetaData title=\"Chat\" />\n      <Row>\n        <Col xs={12}>\n          <ChatProvider>\n            <ChatListPanel />\n            <ChatArea />\n          </ChatProvider>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Chat\n"],"names":["ChatContext","createContext","useChatContext","context","useContext","ChatProvider","children","activeChat","setActiveChat","useState","changeActiveChat","userId","user","getUserById","useEffect","jsx","AlwaysScrollToBottom","elementRef","useRef","_a","UserMessage","message","toUser","received","jsxs","clsx","timeSince","ChatArea","userMessages","setUserMessages","messageSchema","yup.object","yup.string","reset","handleSubmit","control","useForm","yupResolver","avatar10","addOrSubtractMinutesFromDate","getMessagesForUser","useCallback","messages","m","sendChatMessage","values","newUserMessages","otherNewMessages","name","lastActivity","avatar1","OverlayTrigger","Tooltip","IconifyIcon","SimplebarReactClient","TextFormInput","ChatItem","id","avatar","activityStatus","lastMessage","unreadCount","ActiveUsersPane","chats","TabPane","chat","MessagesPane","Row","Col","ChatListPanel","setChats","users","search","text","u","TabContainer","Nav","NavItem","NavLink","e","TabContent","Chat","Fragment","PageMetaData"],"mappings":"w0DAQA,MAAMA,EAAcC,gBAA2C,MAAS,EAE3DC,EAAiB,IAAM,CAC5B,MAAAC,EAAUC,aAAWJ,CAAW,EACtC,GAAI,CAACG,EACG,MAAA,IAAI,MAAM,qDAAqD,EAEhE,OAAAA,CACT,EAEaE,EAAe,CAAC,CAAE,SAAAC,KAA6B,CAC1D,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAAmB,EAEjDC,EAAmB,MAAOC,GAA2B,CACnD,MAAAC,EAAO,MAAMC,EAAYF,CAAM,EACjCC,KAAoBA,CAAI,CAC9B,EAEAE,OAAAA,EAAAA,UAAU,IAAM,CACdJ,EAAiB,KAAK,CACxB,EAAG,EAAE,EAGHK,EAAA,IAACf,EAAY,SAAZ,CACC,MAAO,CACL,WAAAO,EACA,iBAAAG,CACF,EACC,SAAAJ,CAAA,CACH,CAEJ,ECpBMU,EAAuB,IAAM,CAC3B,MAAAC,EAAaC,SAAuB,IAAI,EAC9CJ,OAAAA,EAAAA,UAAU,IAAM,QACVK,EAAAF,GAAA,YAAAA,EAAY,UAAZ,MAAAE,EAAqB,gBAAgBF,EAAW,QAAQ,eAAe,CAAE,SAAU,SAAU,CAAA,CAClG,EACMF,EAAA,IAAC,MAAI,CAAA,IAAKE,CAAY,CAAA,CAC/B,EAEMG,EAAc,CAAC,CAAE,QAAAC,EAAS,OAAAC,KAA6D,CAC3F,MAAMC,EAAWF,EAAQ,KAAK,KAAOC,EAAO,GAE1C,OAAAE,OAAC,OAAI,UAAWC,EAAK,SAAU,CAAE,mBAAoBF,EAAU,EAC7D,SAAA,CAACR,EAAAA,IAAA,MAAA,CAAI,IAAKM,EAAQ,KAAK,OAAQ,IAAI,cAAc,UAAU,yBAA0B,CAAA,EACrFG,OAAC,OAAI,UAAWC,EAAK,iBAAkBF,EAAW,eAAiB,MAAM,EACvE,SAAA,CAAAR,EAAAA,IAAC,OAAI,UAAU,YACb,eAAC,IAAG,CAAA,SAAAM,EAAQ,QAAQ,CACtB,CAAA,EACAN,EAAAA,IAAC,MAAI,CAAA,UAAU,YAAa,SAAAW,EAAU,IAAI,KAAKL,EAAQ,MAAM,CAAC,CAAE,CAAA,CAAA,CAClE,CAAA,CAAA,EACF,CAEJ,EAEMM,EAAW,IAAM,CACf,KAAA,CAAE,WAAApB,CAAW,EAAIL,EAAe,EAChC,CAAC0B,EAAcC,CAAe,EAAIpB,EAAAA,SAA4B,CAAA,CAAE,EAEhEqB,EAAgBC,EAAW,CAC/B,WAAYC,IAAa,SAAS,sBAAsB,CAAA,CACzD,EAEK,CAAE,MAAAC,EAAO,aAAAC,EAAc,QAAAC,CAAA,EAAYC,EAAQ,CAC/C,SAAUC,EAAYP,CAAa,CAAA,CACpC,EAEK,CAACR,CAAM,EAAIb,WAAmB,CAClC,GAAI,MACJ,KAAM,mBACN,OAAQ6B,EACR,OAAQ,WACR,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,MAAO,0BACP,YAAa,qDACb,aAAcC,EAA6B,CAAC,EAC5C,QAAS,gBACT,eAAgB,QAAA,CACjB,EAEKC,EAAqBC,EAAAA,YAAY,IAAM,CACvClC,GACFsB,EACEa,EAAS,OAAQC,GAAOA,EAAE,GAAG,KAAOrB,EAAO,IAAMqB,EAAE,KAAK,KAAOpC,EAAW,IAAQe,EAAO,KAAOqB,EAAE,KAAK,IAAMA,EAAE,GAAG,KAAOpC,EAAW,EAAG,CACzI,CACF,EACC,CAACA,EAAYe,CAAM,CAAC,EAEvBR,EAAAA,UAAU,IAAM,CACK0B,EAAA,CAAA,EAClB,CAACjC,CAAU,CAAC,EAET,MAAAqC,EAAmBC,GAAoC,CAC3D,GAAItC,EAAY,CACR,MAAAuC,EAAkB,CAAC,GAAGlB,CAAY,EACxCkB,EAAgB,KAAK,CACnB,IAAKlB,EAAa,OAAS,GAAG,SAAS,EACvC,KAAMN,EACN,GAAIf,EACJ,QAASsC,EAAO,YAAc,GAC9B,OAAQN,EAA6B,EAAG,CAAA,CACzC,EACD,WAAW,IAAM,CACT,MAAAQ,EAAmB,CAAC,GAAGD,CAAe,EAC5CC,EAAiB,KAAK,CACpB,IAAKnB,EAAa,OAAS,GAAG,SAAS,EACvC,KAAMrB,EACN,GAAIe,EACJ,QAASuB,EAAO,YAAc,GAC9B,OAAQN,EAA6B,EAAG,CAAA,CACzC,EACDV,EAAgBkB,CAAgB,GAC/B,GAAI,EACPlB,EAAgBiB,CAAe,EACzBb,EAAA,CAAA,CAEV,EAEA,GAAI1B,EAAY,CACR,KAAA,CAAE,KAAAyC,EAAM,aAAAC,CAAA,EAAiB1C,EAG7B,OAAAiB,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wEACb,SAAA,CAAAA,EAAA,KAAC,MAAI,CAAA,KAAK,SAAS,UAAU,2BAC3B,SAAA,CAAAT,EAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,IAAKR,EAAW,QAAU2C,EAAS,IAAI,OAAO,UAAU,yBAA0B,CAAA,EACzF,EACCnC,MAAA,MAAA,CAAI,UAAU,qCACb,gBAAC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,iCAAkC,SAAKiC,EAAA,EACrDxB,EAAAA,KAAC,IAAE,CAAA,UAAU,kBAAkB,SAAA,CAAA,cAAYE,EAAU,IAAI,KAAKuB,CAAY,CAAC,CAAA,CAAE,CAAA,CAAA,CAAA,CAC/E,CACF,CAAA,CAAA,EACF,EACAzB,EAAAA,KAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAACT,EAAAA,IAAAoC,EAAA,CAAe,UAAU,MAAM,cAAUC,EAAQ,CAAA,UAAU,kBAAkB,SAAI,MAAA,CAAA,EAChF,eAAC,OAAK,CAAA,KAAK,SAAS,UAAU,wBAC5B,eAACC,EAAY,CAAA,KAAK,eAAgB,CAAA,CAAA,CACpC,CACF,CAAA,EACAtC,EAAAA,IAACoC,GAAe,UAAU,MAAM,QAAUpC,EAAA,IAAAqC,EAAA,CAAQ,UAAU,kBAAkB,SAAU,YAAA,CAAA,EACtF,eAAC,OAAK,CAAA,KAAK,SAAS,UAAU,wBAC5B,eAACC,EAAY,CAAA,KAAK,sBAAuB,CAAA,CAAA,CAC3C,CACF,CAAA,EACAtC,EAAAA,IAACoC,GAAe,UAAU,MAAM,QAAUpC,EAAA,IAAAqC,EAAA,CAAQ,UAAU,kBAAkB,SAAM,QAAA,CAAA,EAClF,eAAC,OAAK,CAAA,KAAK,SAAS,UAAU,wBAC5B,eAACC,EAAY,CAAA,KAAK,eAAgB,CAAA,CAAA,CACpC,CACF,CAAA,EACAtC,EAAAA,IAAC,OAAK,CAAA,KAAK,SAAS,UAAU,mBAC5B,SAACA,EAAA,IAAAsC,EAAA,CAAY,KAAK,oBAAqB,CAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QACCC,EAAqB,CAAA,UAAU,YAC9B,SAAC9B,EAAA,KAAA,MAAA,CAAI,UAAU,cACZ,SAAA,CAAaI,EAAA,IAAKP,GACTN,EAAAA,IAAAK,EAAA,CAA6B,QAAAC,EAAkB,OAAAC,CAAA,EAA9BD,EAAQ,EAAsC,CACxE,QAEAL,EAAqB,CAAA,CAAA,CAAA,CAAA,CACxB,CACF,CAAA,EACAD,EAAA,IAAC,MAAI,CAAA,UAAU,cACb,SAAAS,EAAAA,KAAC,OAAK,CAAA,UAAU,SAAS,SAAUU,EAAaU,CAAe,EAC7D,SAAA,CAAC7B,EAAAA,IAAAwC,EAAA,CAAc,mBAAmB,QAAQ,KAAK,aAAa,QAAApB,EAAkB,YAAY,yBAAyB,WAAU,EAAC,CAAA,QAC7H,MAAI,CAAA,UAAU,WACb,SAACX,EAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAAAT,EAAAA,IAAC,QAAK,KAAK,SACT,eAACsC,EAAY,CAAA,KAAK,iBAAiB,CACrC,CAAA,EACAtC,EAAAA,IAAC,QAAK,KAAK,SACT,eAACsC,EAAY,CAAA,KAAK,qBAAqB,CACzC,CAAA,EACAtC,EAAAA,IAAC,QAAK,KAAK,SACT,eAACsC,EAAY,CAAA,KAAK,oBAAqB,CAAA,CACzC,CAAA,CAAA,EACF,EACCtC,EAAA,IAAA,SAAA,CAAO,KAAK,SAAS,KAAK,SAAS,UAAU,uBAC5C,SAACA,EAAAA,IAAAsC,EAAA,CAAY,KAAK,oBAAA,CAAqB,CACzC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAAA,CAGN,EC7KMG,EAAW,CAAC,CAAE,GAAAC,EAAI,OAAAC,EAAQ,eAAAC,EAAgB,aAAAV,EAAc,YAAAW,EAAa,KAAAZ,EAAM,YAAAa,KAA4B,CACrG,KAAA,CAAE,iBAAAnD,CAAiB,EAAIR,EAAe,EAC5C,aACG,MAAI,CAAA,QAAS,IAAMQ,EAAiB+C,CAAE,EAAG,UAAU,oDAClD,SAAA1C,EAAA,IAAC,OAAI,KAAK,SACR,SAACS,OAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAT,MAAC,OAAI,IAAK2C,EAAQ,IAAI,SAAS,UAAU,0BAA0B,EACnE3C,EAAAA,IAAC,OAAK,CAAA,UAAU,mCACd,SAAAA,EAAA,IAACsC,EAAA,CACC,KAAK,mBACL,UAAW5B,EAAK,oCAAqCkC,IAAmB,UAAY,eAAiB,gBAAgB,CAAA,CAAA,CAEzH,CAAA,CAAA,EACF,EACAnC,EAAAA,KAAC,MAAI,CAAA,UAAU,mDACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,iCACX,SAAA,CAAAwB,EACDjC,MAAC,SAAM,UAAU,6BAA8B,WAAU,IAAI,KAAKkC,CAAY,CAAC,CAAE,CAAA,CAAA,EACnF,EACAzB,EAAAA,KAAC,IAAE,CAAA,UAAU,kBACV,SAAA,CAAAmC,IAAmB,SAAY5C,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,oBAAS,CAAA,EAAU6C,EAChFC,GAAe9C,EAAA,IAAC,OAAK,CAAA,UAAU,iDAAkD,SAAY8C,CAAA,CAAA,CAAA,CAChG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ,EC/BMC,EAAkB,CAAC,CAAE,MAAAC,KAEvBhD,EAAA,IAACiD,EAAQ,CAAA,SAAS,SAAS,UAAU,OAAO,KAAK,WAC9C,SAAAD,EACE,OAAQnD,GAASA,EAAK,iBAAmB,SAAS,EAClD,IAAKqD,GACJlD,EAAA,IAACyC,EAAwB,CAAA,GAAGS,CAAb,EAAAA,EAAK,EAAc,CACnC,CACL,CAAA,ECREC,EAAe,CAAC,CAAE,MAAAH,KAEpBhD,EAAAA,IAACiD,EAAQ,CAAA,SAAS,WAAW,UAAU,OAAO,KAAK,WACjD,SAACjD,EAAA,IAAAoD,EAAA,CACC,SAACpD,EAAAA,IAAAqD,EAAA,CACE,WAAM,IAAKH,GACVlD,EAAAA,IAACyC,EAAwB,CAAA,GAAGS,CAAb,EAAAA,EAAK,EAAc,CACnC,CACH,CAAA,CAAA,CACF,CACF,CAAA,ECNEI,EAAgB,IAAM,CAC1B,KAAM,CAACN,EAAOO,CAAQ,EAAI7D,EAAAA,SAAS8D,CAAK,EAElCC,EAAUC,GAAiB,CAC/BH,EAASG,EAAOF,EAAM,OAAQG,GAAMA,EAAE,KAAK,YAAA,EAAc,QAAQD,EAAK,YAAa,CAAA,GAAK,CAAC,EAAIF,CAAK,CACpG,EAGE,OAAAxD,EAAA,IAAC,OAAI,UAAU,gBACb,gBAAC4D,EAAa,CAAA,aAAY,GAAC,iBAAiB,WAC1C,SAAA,CAAAnD,EAAA,KAACoD,EAAI,CAAA,QAAO,GAAC,QAAQ,OACnB,SAAA,CAAA7D,MAAC8D,EAAQ,CAAA,KAAK,eACZ,SAAA9D,EAAA,IAAC+D,GAAQ,GAAG,OAAO,UAAU,OAAO,SAAS,WAAW,KAAK,SAAS,mBAEtE,CAAA,EACF,EACC/D,MAAA8D,EAAA,CAAQ,KAAK,eACZ,eAACC,EAAQ,CAAA,GAAG,OAAO,UAAU,OAAO,SAAS,SAAS,KAAK,SAAS,kBAEpE,CACF,CAAA,CAAA,EACF,EACA/D,EAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,oCACb,SAAAS,OAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAT,MAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAAC,UAAO,KAAK,SAAS,UAAU,8BAC9B,SAACA,EAAAA,IAAAsC,EAAA,CAAY,KAAK,4BAAA,CAA6B,CACjD,CAAA,EACF,EACAtC,EAAA,IAAC,QAAA,CACC,KAAK,SACL,YAAY,cACZ,SAAWgE,GAAMP,EAAOO,EAAE,OAAO,KAAK,EACtC,mBAAiB,gBACjB,UAAU,gCAAA,CAAA,CACZ,CACF,CAAA,CACF,CAAA,EACF,EACChE,MAAAuC,EAAA,CAAqB,UAAU,sBAC9B,gBAAC0B,EACC,CAAA,SAAA,CAAAjE,MAACmD,GAAa,MAAAH,EAAc,EAE5BhD,MAAC+C,GAAgB,MAAAC,CAAc,CAAA,CAAA,CAAA,CACjC,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECrDMkB,GAAO,IAGPzD,EAAA,KAAA0D,WAAA,CAAA,SAAA,CAACnE,EAAAA,IAAAoE,EAAA,CAAa,MAAM,MAAO,CAAA,QAC1BhB,EACC,CAAA,SAAApD,EAAAA,IAACqD,GAAI,GAAI,GACP,gBAAC/D,EACC,CAAA,SAAA,CAAAU,EAAA,IAACsD,EAAc,EAAA,QACd1C,EAAS,CAAA,CAAA,CAAA,CACZ,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF"}