{"version":3,"file":"Dropdown-DyAbvVHF.js","sources":["../../node_modules/@restart/hooks/esm/useEventListener.js","../../node_modules/@restart/ui/esm/DropdownContext.js","../../node_modules/@restart/ui/esm/DropdownMenu.js","../../node_modules/@restart/ui/esm/DropdownToggle.js","../../node_modules/@restart/ui/esm/DropdownItem.js","../../node_modules/@restart/ui/esm/Dropdown.js","../../node_modules/react-bootstrap/esm/DropdownContext.js","../../node_modules/react-bootstrap/esm/DropdownDivider.js","../../node_modules/react-bootstrap/esm/DropdownHeader.js","../../node_modules/react-bootstrap/esm/DropdownItem.js","../../node_modules/react-bootstrap/esm/DropdownItemText.js","../../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../../node_modules/react-bootstrap/esm/DropdownMenu.js","../../node_modules/react-bootstrap/esm/DropdownToggle.js","../../node_modules/react-bootstrap/esm/Dropdown.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","const _excluded = [\"children\", \"usePopper\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst noop = () => {};\n\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n      children,\n      usePopper: usePopperProp = true\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useDropdownMenu(Object.assign({}, options, {\n    usePopper: usePopperProp\n  }));\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownMenu.displayName = 'DropdownMenu';\n\n/** @component */\nexport default DropdownMenu;","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nconst noop = () => {};\n\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  };\n\n  // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show,\n    toggle\n  }];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n\n/** @component */\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      eventKey,\n      disabled,\n      onClick,\n      active,\n      as: Component = Button\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element;\n    // ensure that a menu set triggers an update for consumers\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n\n/**\n * @displayName Dropdown\n * @public\n */\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle);\n\n  // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    }\n    // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target);\n\n    // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n    const isInput = /input|textarea/i.test(target.tagName);\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n        return;\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        onToggle(false, meta);\n        break;\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","\"use client\";\n\nimport * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownDivider = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'hr',\n  role = 'separator',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-divider');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownDivider.displayName = 'DropdownDivider';\nexport default DropdownDivider;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  role = 'heading',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownHeader.displayName = 'DropdownHeader';\nexport default DropdownHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItemText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-item-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nDropdownItemText.displayName = 'DropdownItemText';\nexport default DropdownItemText;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useMergedRefs(warningRef, ref);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip = true,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint];\n\n        // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null || popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\n\n  // For custom components provide additional, non-DOM, props;\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...menuProps,\n    style: style\n    // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nexport default DropdownMenu;","\"use client\";\n\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    var _meta$originalEvent;\n    /** Checking if target of event is ToggleButton,\n     * if it is then nullify mousedown event\n     */\n    const isToggleButton = (_meta$originalEvent = meta.originalEvent) == null || (_meta$originalEvent = _meta$originalEvent.target) == null ? void 0 : _meta$originalEvent.classList.contains('dropdown-toggle');\n    if (isToggleButton && meta.source === 'mousedown') {\n      return;\n    }\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null || onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"],"names":["useEventListener","eventTarget","event","listener","capture","handler","useEventCallback","useEffect","target","DropdownContext","React.createContext","_excluded","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","key","i","noop","useDropdownMenu","options","context","useContext","arrowElement","attachArrowRef","useCallbackRef","hasShownRef","useRef","flip","offset","rootCloseEvent","fixed","placementOverride","popperConfig","enableEventListeners","shouldUsePopper","show","handleClose","e","placement","setMenu","menuElement","toggleElement","popper","usePopper","mergeOptionsWithPopperConfig","menuProps","metadata","useClickOutside","DropdownMenu","_ref","children","usePopperProp","props","meta","_jsx","_Fragment","isRoleMenu","el","_el$getAttribute","useDropdownToggle","id","useSSRSafeId","toggle","setToggle","handleClick","useCallback","DropdownToggle","useDropdownItem","href","active","disabled","onClick","onSelectCtx","SelectableContext","navContext","NavContext","activeKey","eventKey","makeEventKey","isActive","dataAttr","DropdownItem","React.forwardRef","ref","Component","Button","dropdownItemProps","useRefWithUpdate","forceUpdate","useForceUpdate","attachRef","element","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","itemSelector","focusFirstItemOnShow","window","useWindow","onToggle","useUncontrolledProp","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","handleSelect","useMemo","focusToggle","maybeFocusFirst","type","focusType","first","qsa","getNextFocusedChild","current","items","index","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","next","addEventListener","_menuRef$current2","DropdownDivider","className","bsPrefix","role","useBootstrapPrefix","classNames","DropdownHeader","Anchor","prefix","DropdownItemText","useWrappedRefWithWarning","componentName","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","topStart","topEnd","bottomStart","bottomEnd","leftStart","leftEnd","rightStart","rightEnd","align","showProps","renderOnMount","variant","isNavbar","NavbarContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","keys","brkPoint","direction","hasShown","useMergedRefs","useIsomorphicEffect","style","split","childBsPrefix","dropdownContext","toggleProps","pProps","_4","autoClose","useUncontrolled","useIsRTL","isClosingPermitted","handleToggle","_meta$originalEvent","contextValue","directionClasses","BaseDropdown","Dropdown$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}