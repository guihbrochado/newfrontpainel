{"version":3,"file":"page-NCtSb9i1.js","sources":["../../node_modules/jsvectormap/dist/jsvectormap.esm.js","../../node_modules/jsvectormap/dist/maps/world.js","../../src/components/VectorMap/BaseVectorMap.tsx","../../src/components/VectorMap/WorldMap.tsx","../../src/app/(admin)/maps/vector/data.ts","../../src/app/(admin)/maps/vector/components/WorldMap.tsx","../../src/app/(admin)/maps/vector/components/AllVectorMaps.tsx","../../src/app/(admin)/maps/vector/page.tsx"],"sourcesContent":["/**\n * By https://github.com/TehShrike/deepmerge\n */\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isNode(value) || isReactElement(value);\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isNode(value) {\n  return value instanceof Node;\n}\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\nfunction mergeObject(target, source, options) {\n  var destination = {};\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\nvar deepmerge = function deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\nvar getElement = function getElement(selector) {\n  if (typeof selector === 'object' && typeof selector.nodeType !== 'undefined') {\n    return selector;\n  }\n  if (typeof selector === 'string') {\n    return document.querySelector(selector);\n  }\n  return null;\n};\nvar createElement = function createElement(type, classes, content, html) {\n  if (html === void 0) {\n    html = false;\n  }\n  var el = document.createElement(type);\n  if (content) {\n    el[!html ? 'textContent' : 'innerHTML'] = content;\n  }\n  if (classes) {\n    el.className = classes;\n  }\n  return el;\n};\nvar findElement = function findElement(parentElement, selector) {\n  return Element.prototype.querySelector.call(parentElement, selector);\n};\nvar removeElement = function removeElement(target) {\n  target.parentNode.removeChild(target);\n};\nvar isImageUrl = function isImageUrl(url) {\n  return /\\.(jpg|gif|png)$/.test(url);\n};\nvar hyphenate = function hyphenate(string) {\n  return string.replace(/[\\w]([A-Z])/g, function (m) {\n    return m[0] + \"-\" + m[1];\n  }).toLowerCase();\n};\nvar merge = function merge(target, source, deep) {\n  if (deep === void 0) {\n    deep = false;\n  }\n  if (deep) {\n    return deepmerge(target, source);\n  }\n  return Object.assign(target, source);\n};\nvar getLineUid = function getLineUid(from, to) {\n  return from.toLowerCase() + \":to:\" + to.toLowerCase();\n};\nvar inherit = function inherit(target, source) {\n  Object.assign(target.prototype, source);\n};\n\nvar eventRegistry = {};\nvar eventUid = 1;\n\n/**\n * ------------------------------------------------------------------------\n * Event Handler\n * ------------------------------------------------------------------------\n */\nvar EventHandler = {\n  on: function on(element, event, handler, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var uid = \"jvm:\" + event + \"::\" + eventUid++;\n    eventRegistry[uid] = {\n      selector: element,\n      handler: handler\n    };\n    handler._uid = uid;\n    element.addEventListener(event, handler, options);\n  },\n  delegate: function delegate(element, event, selector, handler) {\n    event = event.split(' ');\n    event.forEach(function (eventName) {\n      EventHandler.on(element, eventName, function (e) {\n        var target = e.target;\n        if (target.matches(selector)) {\n          handler.call(target, e);\n        }\n      });\n    });\n  },\n  off: function off(element, event, handler) {\n    var eventType = event.split(':')[1];\n    element.removeEventListener(eventType, handler);\n    delete eventRegistry[handler._uid];\n  },\n  flush: function flush() {\n    Object.keys(eventRegistry).forEach(function (event) {\n      EventHandler.off(eventRegistry[event].selector, event, eventRegistry[event].handler);\n    });\n  },\n  getEventRegistry: function getEventRegistry() {\n    return eventRegistry;\n  }\n};\n\nfunction setupContainerEvents() {\n  var _this = this;\n  var map = this;\n  var mouseDown = false;\n  var oldPageX;\n  var oldPageY;\n  if (this.params.draggable) {\n    EventHandler.on(this.container, 'mousemove', function (e) {\n      if (!mouseDown) {\n        return false;\n      }\n      map.transX -= (oldPageX - e.pageX) / map.scale;\n      map.transY -= (oldPageY - e.pageY) / map.scale;\n      map._applyTransform();\n      oldPageX = e.pageX;\n      oldPageY = e.pageY;\n    });\n    EventHandler.on(this.container, 'mousedown', function (e) {\n      mouseDown = true;\n      oldPageX = e.pageX;\n      oldPageY = e.pageY;\n      return false;\n    });\n    EventHandler.on(document.body, 'mouseup', function () {\n      mouseDown = false;\n    });\n  }\n  if (this.params.zoomOnScroll) {\n    EventHandler.on(this.container, 'wheel', function (event) {\n      var deltaY = ((event.deltaY || -event.wheelDelta || event.detail) >> 10 || 1) * 75;\n      var rect = _this.container.getBoundingClientRect();\n      var offsetX = event.pageX - rect.left - window.pageXOffset;\n      var offsetY = event.pageY - rect.top - window.pageYOffset;\n      var zoomStep = Math.pow(1 + map.params.zoomOnScrollSpeed / 1000, -1.5 * deltaY);\n      if (map.tooltip) {\n        map._tooltip.hide();\n      }\n      map._setScale(map.scale * zoomStep, offsetX, offsetY);\n      event.preventDefault();\n    });\n  }\n}\n\nvar Events = {\n  onLoaded: 'map:loaded',\n  onViewportChange: 'viewport:changed',\n  onRegionClick: 'region:clicked',\n  onMarkerClick: 'marker:clicked',\n  onRegionSelected: 'region:selected',\n  onMarkerSelected: 'marker:selected',\n  onRegionTooltipShow: 'region.tooltip:show',\n  onMarkerTooltipShow: 'marker.tooltip:show',\n  onDestroyed: 'map:destroyed'\n};\n\nvar parseEvent = function parseEvent(map, selector, isTooltip) {\n  var element = getElement(selector);\n  var type = element.getAttribute('class').indexOf('jvm-region') === -1 ? 'marker' : 'region';\n  var isRegion = type === 'region';\n  var code = isRegion ? element.getAttribute('data-code') : element.getAttribute('data-index');\n  var event = isRegion ? Events.onRegionSelected : Events.onMarkerSelected;\n\n  // Init tooltip event\n  if (isTooltip) {\n    event = isRegion ? Events.onRegionTooltipShow : Events.onMarkerTooltipShow;\n  }\n  return {\n    type: type,\n    code: code,\n    event: event,\n    element: isRegion ? map.regions[code].element : map._markers[code].element,\n    tooltipText: isRegion ? map._mapData.paths[code].name || '' : map._markers[code].config.name || ''\n  };\n};\nfunction setupElementEvents() {\n  var map = this;\n  var container = this.container;\n  var pageX, pageY, mouseMoved;\n  EventHandler.on(container, 'mousemove', function (event) {\n    if (Math.abs(pageX - event.pageX) + Math.abs(pageY - event.pageY) > 2) {\n      mouseMoved = true;\n    }\n  });\n\n  // When the mouse is pressed\n  EventHandler.delegate(container, 'mousedown', '.jvm-element', function (event) {\n    pageX = event.pageX;\n    pageY = event.pageY;\n    mouseMoved = false;\n  });\n\n  // When the mouse is over the region/marker | When the mouse is out the region/marker\n  EventHandler.delegate(container, 'mouseover mouseout', '.jvm-element', function (event) {\n    var data = parseEvent(map, this, true);\n    var showTooltip = map.params.showTooltip;\n    if (event.type === 'mouseover') {\n      data.element.hover(true);\n      if (showTooltip) {\n        map._tooltip.text(data.tooltipText);\n        map._tooltip.show();\n        map._emit(data.event, [event, map._tooltip, data.code]);\n      }\n    } else {\n      data.element.hover(false);\n      if (showTooltip) {\n        map._tooltip.hide();\n      }\n    }\n  });\n\n  // When the click is released\n  EventHandler.delegate(container, 'mouseup', '.jvm-element', function (event) {\n    var data = parseEvent(map, this);\n    if (mouseMoved) {\n      return;\n    }\n    if (data.type === 'region' && map.params.regionsSelectable || data.type === 'marker' && map.params.markersSelectable) {\n      var element = data.element;\n\n      // We're checking if regions/markers|SelectableOne option is presented\n      if (map.params[data.type + \"sSelectableOne\"]) {\n        map._clearSelected(data.type + \"s\");\n      }\n      if (data.element.isSelected) {\n        element.select(false);\n      } else {\n        element.select(true);\n      }\n      map._emit(data.event, [data.code, element.isSelected, map._getSelected(data.type + \"s\")]);\n    }\n  });\n\n  // When region/marker is clicked\n  EventHandler.delegate(container, 'click', '.jvm-element', function (event) {\n    var _parseEvent = parseEvent(map, this),\n      type = _parseEvent.type,\n      code = _parseEvent.code;\n    map._emit(type === 'region' ? Events.onRegionClick : Events.onMarkerClick, [event, code]);\n  });\n}\n\nfunction setupZoomButtons() {\n  var _this = this;\n  var zoomin = createElement('div', 'jvm-zoom-btn jvm-zoomin', '&#43;', true);\n  var zoomout = createElement('div', 'jvm-zoom-btn jvm-zoomout', '&#x2212', true);\n  this.container.appendChild(zoomin);\n  this.container.appendChild(zoomout);\n  var handler = function handler(zoomin) {\n    if (zoomin === void 0) {\n      zoomin = true;\n    }\n    return function () {\n      return _this._setScale(zoomin ? _this.scale * _this.params.zoomStep : _this.scale / _this.params.zoomStep, _this._width / 2, _this._height / 2, false, _this.params.zoomAnimate);\n    };\n  };\n  EventHandler.on(zoomin, 'click', handler());\n  EventHandler.on(zoomout, 'click', handler(false));\n}\n\nfunction setupContainerTouchEvents() {\n  var map = this,\n    touchStartScale,\n    touchStartDistance,\n    touchX,\n    touchY,\n    centerTouchX,\n    centerTouchY,\n    lastTouchesLength;\n  var handleTouchEvent = function handleTouchEvent(e) {\n    var touches = e.touches;\n    var offset, scale, transXOld, transYOld;\n    if (e.type == 'touchstart') {\n      lastTouchesLength = 0;\n    }\n    if (touches.length == 1) {\n      if (lastTouchesLength == 1) {\n        transXOld = map.transX;\n        transYOld = map.transY;\n        map.transX -= (touchX - touches[0].pageX) / map.scale;\n        map.transY -= (touchY - touches[0].pageY) / map.scale;\n        map._tooltip.hide();\n        map._applyTransform();\n        if (transXOld != map.transX || transYOld != map.transY) {\n          e.preventDefault();\n        }\n      }\n      touchX = touches[0].pageX;\n      touchY = touches[0].pageY;\n    } else if (touches.length == 2) {\n      if (lastTouchesLength == 2) {\n        scale = Math.sqrt(Math.pow(touches[0].pageX - touches[1].pageX, 2) + Math.pow(touches[0].pageY - touches[1].pageY, 2)) / touchStartDistance;\n        map._setScale(touchStartScale * scale, centerTouchX, centerTouchY);\n        map._tooltip.hide();\n        e.preventDefault();\n      } else {\n        var rect = map.container.getBoundingClientRect();\n        offset = {\n          top: rect.top + window.scrollY,\n          left: rect.left + window.scrollX\n        };\n        if (touches[0].pageX > touches[1].pageX) {\n          centerTouchX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;\n        } else {\n          centerTouchX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;\n        }\n        if (touches[0].pageY > touches[1].pageY) {\n          centerTouchY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;\n        } else {\n          centerTouchY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;\n        }\n        centerTouchX -= offset.left;\n        centerTouchY -= offset.top;\n        touchStartScale = map.scale;\n        touchStartDistance = Math.sqrt(Math.pow(touches[0].pageX - touches[1].pageX, 2) + Math.pow(touches[0].pageY - touches[1].pageY, 2));\n      }\n    }\n    lastTouchesLength = touches.length;\n  };\n  EventHandler.on(map.container, 'touchstart', handleTouchEvent);\n  EventHandler.on(map.container, 'touchmove', handleTouchEvent);\n}\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _createForOfIteratorHelperLoose(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (t) return (t = t.call(r)).next.bind(t);\n  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n    t && (r = t);\n    var o = 0;\n    return function () {\n      return o >= r.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: r[o++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent() {}\n  var _proto = BaseComponent.prototype;\n  _proto.dispose = function dispose() {\n    if (this._tooltip) {\n      removeElement(this._tooltip);\n    } else {\n      // @todo: move shape in base component in v2\n      this.shape.remove();\n    }\n    for (var _iterator = _createForOfIteratorHelperLoose(Object.getOwnPropertyNames(this)), _step; !(_step = _iterator()).done;) {\n      var propertyName = _step.value;\n      this[propertyName] = null;\n    }\n  };\n  return BaseComponent;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Interactable\n * ------------------------------------------------------------------------\n */\nvar Interactable = {\n  getLabelText: function getLabelText(key, label) {\n    if (!label) {\n      return;\n    }\n    if (typeof label.render === 'function') {\n      var params = [];\n\n      // Pass additional paramater (Marker config object) in case it's a Marker.\n      if (this.config && this.config.marker) {\n        params.push(this.config.marker);\n      }\n\n      // Becuase we need to add the key always at the end\n      params.push(key);\n      return label.render.apply(this, params);\n    }\n    return key;\n  },\n  getLabelOffsets: function getLabelOffsets(key, label) {\n    if (typeof label.offsets === 'function') {\n      return label.offsets(key);\n    }\n\n    // If offsets are an array of offsets e.g offsets: [ [0, 25], [10, 15] ]\n    if (Array.isArray(label.offsets)) {\n      return label.offsets[key];\n    }\n    return [0, 0];\n  },\n  setStyle: function setStyle(property, value) {\n    this.shape.setStyle(property, value);\n  },\n  remove: function remove() {\n    this.shape.remove();\n    if (this.label) this.label.remove();\n  },\n  hover: function hover(state) {\n    this._setStatus('isHovered', state);\n  },\n  select: function select(state) {\n    this._setStatus('isSelected', state);\n  },\n  // Private\n  _setStatus: function _setStatus(property, state) {\n    this.shape[property] = state;\n    this.shape.updateStyle();\n    this[property] = state;\n    if (this.label) {\n      this.label[property] = state;\n      this.label.updateStyle();\n    }\n  }\n};\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Region = /*#__PURE__*/function (_BaseComponent) {\n  function Region(_ref) {\n    var _this;\n    var map = _ref.map,\n      code = _ref.code,\n      path = _ref.path,\n      style = _ref.style,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelsGroup = _ref.labelsGroup;\n    _this = _BaseComponent.call(this) || this;\n    _this._map = map;\n    _this.shape = _this._createRegion(path, code, style);\n    var text = _this.getLabelText(code, label);\n\n    // If label is passed and render function returns something \n    if (label && text) {\n      var bbox = _this.shape.getBBox();\n      var offsets = _this.getLabelOffsets(code, label);\n      _this.labelX = bbox.x + bbox.width / 2 + offsets[0];\n      _this.labelY = bbox.y + bbox.height / 2 + offsets[1];\n      _this.label = _this._map.canvas.createText({\n        text: text,\n        textAnchor: 'middle',\n        alignmentBaseline: 'central',\n        dataCode: code,\n        x: _this.labelX,\n        y: _this.labelY\n      }, labelStyle, labelsGroup);\n      _this.label.addClass('jvm-region jvm-element');\n    }\n    return _this;\n  }\n  _inheritsLoose(Region, _BaseComponent);\n  var _proto = Region.prototype;\n  _proto._createRegion = function _createRegion(path, code, style) {\n    path = this._map.canvas.createPath({\n      d: path,\n      dataCode: code\n    }, style);\n    path.addClass('jvm-region jvm-element');\n    return path;\n  };\n  _proto.updateLabelPosition = function updateLabelPosition() {\n    if (this.label) {\n      this.label.set({\n        x: this.labelX * this._map.scale + this._map.transX * this._map.scale,\n        y: this.labelY * this._map.scale + this._map.transY * this._map.scale\n      });\n    }\n  };\n  return Region;\n}(BaseComponent);\ninherit(Region, Interactable);\n\nfunction createRegions() {\n  this._regionLabelsGroup = this._regionLabelsGroup || this.canvas.createGroup('jvm-regions-labels-group');\n  for (var code in this._mapData.paths) {\n    var region = new Region({\n      map: this,\n      code: code,\n      path: this._mapData.paths[code].path,\n      style: merge({}, this.params.regionStyle),\n      labelStyle: this.params.regionLabelStyle,\n      labelsGroup: this._regionLabelsGroup,\n      label: this.params.labels && this.params.labels.regions\n    });\n    this.regions[code] = {\n      config: this._mapData.paths[code],\n      element: region\n    };\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Line = /*#__PURE__*/function (_BaseComponent) {\n  function Line(_ref) {\n    var _this;\n    var index = _ref.index,\n      map = _ref.map,\n      style = _ref.style,\n      x1 = _ref.x1,\n      y1 = _ref.y1,\n      x2 = _ref.x2,\n      y2 = _ref.y2,\n      group = _ref.group,\n      config = _ref.config;\n    _this = _BaseComponent.call(this) || this;\n    _this.config = config;\n    _this.shape = map.canvas.createLine({\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      dataIndex: index\n    }, style, group);\n    _this.shape.addClass('jvm-line');\n    return _this;\n  }\n  _inheritsLoose(Line, _BaseComponent);\n  var _proto = Line.prototype;\n  _proto.setStyle = function setStyle(property, value) {\n    this.shape.setStyle(property, value);\n  };\n  return Line;\n}(BaseComponent);\n\nfunction createLines(lines, markers, isRecentlyCreated) {\n  if (isRecentlyCreated === void 0) {\n    isRecentlyCreated = false;\n  }\n  var point1 = false,\n    point2 = false;\n\n  // Create group for holding lines\n  // we're checking if `linesGroup` exists or not becuase we may add lines\n  // after the map has loaded so we will append the futured lines to this group as well.\n  this.linesGroup = this.linesGroup || this.canvas.createGroup('jvm-lines-group');\n  for (var index in lines) {\n    var config = lines[index];\n    for (var mindex in markers) {\n      var markerConfig = isRecentlyCreated ? markers[mindex].config : markers[mindex];\n      if (markerConfig.name === config.from) {\n        point1 = this.getMarkerPosition(markerConfig);\n      }\n      if (markerConfig.name === config.to) {\n        point2 = this.getMarkerPosition(markerConfig);\n      }\n    }\n    if (point1 !== false && point2 !== false) {\n      // Register lines with unique keys\n      this._lines[getLineUid(config.from, config.to)] = new Line({\n        index: index,\n        map: this,\n        // Merge the default `lineStyle` object with the custom `line` config style\n        style: merge({\n          initial: this.params.lineStyle\n        }, {\n          initial: config.style || {}\n        }, true),\n        x1: point1.x,\n        y1: point1.y,\n        x2: point2.x,\n        y2: point2.y,\n        group: this.linesGroup,\n        config: config\n      });\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Marker = /*#__PURE__*/function (_BaseComponent) {\n  function Marker(_ref) {\n    var _this;\n    var index = _ref.index,\n      style = _ref.style,\n      label = _ref.label,\n      cx = _ref.cx,\n      cy = _ref.cy,\n      map = _ref.map,\n      group = _ref.group;\n    _this = _BaseComponent.call(this) || this;\n\n    // Private\n    _this._map = map;\n    _this._isImage = !!style.initial.image;\n\n    // Protected\n    _this.config = arguments[0];\n    _this.shape = map.canvas[_this._isImage ? 'createImage' : 'createCircle']({\n      dataIndex: index,\n      cx: cx,\n      cy: cy\n    }, style, group);\n    _this.shape.addClass('jvm-marker jvm-element');\n    if (_this._isImage) {\n      _this.updateLabelPosition();\n    }\n    if (label) {\n      _this._createLabel(_this.config);\n    }\n    return _this;\n  }\n  _inheritsLoose(Marker, _BaseComponent);\n  var _proto = Marker.prototype;\n  _proto.updateLabelPosition = function updateLabelPosition() {\n    if (this.label) {\n      this.label.set({\n        x: this._labelX * this._map.scale + this._offsets[0] + this._map.transX * this._map.scale + 5 + (this._isImage ? (this.shape.width || 0) / 2 : this.shape.node.r.baseVal.value),\n        y: this._labelY * this._map.scale + this._map.transY * this._map.scale + this._offsets[1]\n      });\n    }\n  };\n  _proto._createLabel = function _createLabel(_ref2) {\n    var index = _ref2.index,\n      map = _ref2.map,\n      label = _ref2.label,\n      labelsGroup = _ref2.labelsGroup,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      marker = _ref2.marker,\n      isRecentlyCreated = _ref2.isRecentlyCreated;\n    var labelText = this.getLabelText(index, label);\n    this._labelX = cx / map.scale - map.transX;\n    this._labelY = cy / map.scale - map.transY;\n    this._offsets = isRecentlyCreated && marker.offsets ? marker.offsets : this.getLabelOffsets(index, label);\n    this.label = map.canvas.createText({\n      text: labelText,\n      dataIndex: index,\n      x: this._labelX,\n      y: this._labelY,\n      dy: '0.6ex'\n    }, map.params.markerLabelStyle, labelsGroup);\n    this.label.addClass('jvm-marker jvm-element');\n    if (isRecentlyCreated) {\n      this.updateLabelPosition();\n    }\n  };\n  return Marker;\n}(BaseComponent);\ninherit(Marker, Interactable);\n\nfunction createMarkers(markers, isRecentlyCreated) {\n  var _this = this;\n  if (markers === void 0) {\n    markers = {};\n  }\n  if (isRecentlyCreated === void 0) {\n    isRecentlyCreated = false;\n  }\n  // Create groups for holding markers and markers labels\n  // We're checking if `markersGroup` exists or not becuase we may add markers after the map has loaded\n  // So we will append the futured markers to this group as well.\n  this._markersGroup = this._markersGroup || this.canvas.createGroup('jvm-markers-group');\n  this._markerLabelsGroup = this._markerLabelsGroup || this.canvas.createGroup('jvm-markers-labels-group');\n  var _loop = function _loop() {\n      var config = markers[index];\n      var point = _this.getMarkerPosition(config);\n      var uid = config.coords.join(':');\n      if (!point) {\n        return 0; // continue\n      }\n\n      // We're checking if recently created marker does already exist\n      // If it does we don't need to create it again, so we'll continue\n      // Becuase we may have more than one marker submitted via `addMarkers` method.\n      if (isRecentlyCreated) {\n        if (Object.keys(_this._markers).filter(function (i) {\n          return _this._markers[i]._uid === uid;\n        }).length) {\n          return 0; // continue\n        }\n        index = Object.keys(_this._markers).length;\n      }\n      var marker = new Marker({\n        index: index,\n        map: _this,\n        // Merge the `markerStyle` object with the marker config `style` if presented.\n        style: merge(_this.params.markerStyle, _extends({}, config.style || {}), true),\n        label: _this.params.labels && _this.params.labels.markers,\n        labelsGroup: _this._markerLabelsGroup,\n        cx: point.x,\n        cy: point.y,\n        group: _this._markersGroup,\n        marker: config,\n        isRecentlyCreated: isRecentlyCreated\n      });\n\n      // Check for marker duplication\n      // this is useful when for example: a user clicks a button for creating marker two times\n      // so it will remove the old one and the new one will take its place.\n      if (_this._markers[index]) {\n        _this.removeMarkers([index]);\n      }\n      _this._markers[index] = {\n        _uid: uid,\n        config: config,\n        element: marker\n      };\n    },\n    _ret;\n  for (var index in markers) {\n    _ret = _loop();\n    if (_ret === 0) continue;\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Legend = /*#__PURE__*/function () {\n  function Legend(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._options = options;\n    this._map = this._options.map;\n    this._series = this._options.series;\n    this._body = createElement('div', 'jvm-legend');\n    if (this._options.cssClass) {\n      this._body.setAttribute('class', this._options.cssClass);\n    }\n    if (options.vertical) {\n      this._map.legendVertical.appendChild(this._body);\n    } else {\n      this._map.legendHorizontal.appendChild(this._body);\n    }\n    this.render();\n  }\n  var _proto = Legend.prototype;\n  _proto.render = function render() {\n    var ticks = this._series.scale.getTicks();\n    var inner = createElement('div', 'jvm-legend-inner');\n    this._body.innderHTML = '';\n    if (this._options.title) {\n      var legendTitle = createElement('div', 'jvm-legend-title', this._options.title);\n      this._body.appendChild(legendTitle);\n    }\n    this._body.appendChild(inner);\n    for (var i = 0; i < ticks.length; i++) {\n      var tick = createElement('div', 'jvm-legend-tick');\n      var sample = createElement('div', 'jvm-legend-tick-sample');\n      switch (this._series.config.attribute) {\n        case 'fill':\n          if (isImageUrl(ticks[i].value)) {\n            sample.style.background = \"url(\" + ticks[i].value + \")\";\n          } else {\n            sample.style.background = ticks[i].value;\n          }\n          break;\n        case 'stroke':\n          sample.style.background = ticks[i].value;\n          break;\n        case 'image':\n          sample.style.background = \"url(\" + (typeof ticks[i].value === 'object' ? ticks[i].value.url : ticks[i].value) + \") no-repeat center center\";\n          sample.style.backgroundSize = 'cover';\n          break;\n      }\n      tick.appendChild(sample);\n      var label = ticks[i].label;\n      if (this._options.labelRender) {\n        label = this._options.labelRender(label);\n      }\n      var tickText = createElement('div', 'jvm-legend-tick-text', label);\n      tick.appendChild(tickText);\n      inner.appendChild(tick);\n    }\n  };\n  return Legend;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar OrdinalScale = /*#__PURE__*/function () {\n  function OrdinalScale(scale) {\n    this._scale = scale;\n  }\n  var _proto = OrdinalScale.prototype;\n  _proto.getValue = function getValue(value) {\n    return this._scale[value];\n  };\n  _proto.getTicks = function getTicks() {\n    var ticks = [];\n    for (var key in this._scale) {\n      ticks.push({\n        label: key,\n        value: this._scale[key]\n      });\n    }\n    return ticks;\n  };\n  return OrdinalScale;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Series = /*#__PURE__*/function () {\n  function Series(config, elements, map) {\n    if (config === void 0) {\n      config = {};\n    }\n    // Private\n    this._map = map;\n    this._elements = elements; // Could be markers or regions\n    this._values = config.values || {};\n\n    // Protected\n    this.config = config;\n    this.config.attribute = config.attribute || 'fill';\n\n    // Set initial attributes\n    if (config.attributes) {\n      this.setAttributes(config.attributes);\n    }\n    if (typeof config.scale === 'object') {\n      this.scale = new OrdinalScale(config.scale);\n    }\n    if (this.config.legend) {\n      this.legend = new Legend(merge({\n        map: this._map,\n        series: this\n      }, this.config.legend));\n    }\n    this.setValues(this._values);\n  }\n  var _proto = Series.prototype;\n  _proto.setValues = function setValues(values) {\n    var attrs = {};\n    for (var key in values) {\n      if (values[key]) {\n        attrs[key] = this.scale.getValue(values[key]);\n      }\n    }\n    this.setAttributes(attrs);\n  };\n  _proto.setAttributes = function setAttributes(attrs) {\n    for (var code in attrs) {\n      if (this._elements[code]) {\n        this._elements[code].element.setStyle(this.config.attribute, attrs[code]);\n      }\n    }\n  };\n  _proto.clear = function clear() {\n    var key,\n      attrs = {};\n    for (key in this._values) {\n      if (this._elements[key]) {\n        attrs[key] = this._elements[key].element.shape.style.initial[this.config.attribute];\n      }\n    }\n    this.setAttributes(attrs);\n    this._values = {};\n  };\n  return Series;\n}();\n\nfunction createSeries() {\n  this.series = {\n    markers: [],\n    regions: []\n  };\n  for (var key in this.params.series) {\n    for (var i = 0; i < this.params.series[key].length; i++) {\n      this.series[key][i] = new Series(this.params.series[key][i], key === 'markers' ? this._markers : this.regions, this);\n    }\n  }\n}\n\nfunction applyTransform() {\n  var maxTransX, maxTransY, minTransX, minTransY;\n  if (this._defaultWidth * this.scale <= this._width) {\n    maxTransX = (this._width - this._defaultWidth * this.scale) / (2 * this.scale);\n    minTransX = (this._width - this._defaultWidth * this.scale) / (2 * this.scale);\n  } else {\n    maxTransX = 0;\n    minTransX = (this._width - this._defaultWidth * this.scale) / this.scale;\n  }\n  if (this._defaultHeight * this.scale <= this._height) {\n    maxTransY = (this._height - this._defaultHeight * this.scale) / (2 * this.scale);\n    minTransY = (this._height - this._defaultHeight * this.scale) / (2 * this.scale);\n  } else {\n    maxTransY = 0;\n    minTransY = (this._height - this._defaultHeight * this.scale) / this.scale;\n  }\n  if (this.transY > maxTransY) {\n    this.transY = maxTransY;\n  } else if (this.transY < minTransY) {\n    this.transY = minTransY;\n  }\n  if (this.transX > maxTransX) {\n    this.transX = maxTransX;\n  } else if (this.transX < minTransX) {\n    this.transX = minTransX;\n  }\n  this.canvas.applyTransformParams(this.scale, this.transX, this.transY);\n  if (this._markers) {\n    this._repositionMarkers();\n  }\n  if (this._lines) {\n    this._repositionLines();\n  }\n  this._repositionLabels();\n}\n\nfunction resize() {\n  var curBaseScale = this._baseScale;\n  if (this._width / this._height > this._defaultWidth / this._defaultHeight) {\n    this._baseScale = this._height / this._defaultHeight;\n    this._baseTransX = Math.abs(this._width - this._defaultWidth * this._baseScale) / (2 * this._baseScale);\n  } else {\n    this._baseScale = this._width / this._defaultWidth;\n    this._baseTransY = Math.abs(this._height - this._defaultHeight * this._baseScale) / (2 * this._baseScale);\n  }\n  this.scale *= this._baseScale / curBaseScale;\n  this.transX *= this._baseScale / curBaseScale;\n  this.transY *= this._baseScale / curBaseScale;\n}\n\nfunction setScale(scale, anchorX, anchorY, isCentered, animate) {\n  var _this = this;\n  var zoomStep,\n    interval,\n    i = 0,\n    count = Math.abs(Math.round((scale - this.scale) * 60 / Math.max(scale, this.scale))),\n    scaleStart,\n    scaleDiff,\n    transXStart,\n    transXDiff,\n    transYStart,\n    transYDiff,\n    transX,\n    transY;\n  if (scale > this.params.zoomMax * this._baseScale) {\n    scale = this.params.zoomMax * this._baseScale;\n  } else if (scale < this.params.zoomMin * this._baseScale) {\n    scale = this.params.zoomMin * this._baseScale;\n  }\n  if (typeof anchorX != 'undefined' && typeof anchorY != 'undefined') {\n    zoomStep = scale / this.scale;\n    if (isCentered) {\n      transX = anchorX + this._defaultWidth * (this._width / (this._defaultWidth * scale)) / 2;\n      transY = anchorY + this._defaultHeight * (this._height / (this._defaultHeight * scale)) / 2;\n    } else {\n      transX = this.transX - (zoomStep - 1) / scale * anchorX;\n      transY = this.transY - (zoomStep - 1) / scale * anchorY;\n    }\n  }\n  if (animate && count > 0) {\n    scaleStart = this.scale;\n    scaleDiff = (scale - scaleStart) / count;\n    transXStart = this.transX * this.scale;\n    transYStart = this.transY * this.scale;\n    transXDiff = (transX * scale - transXStart) / count;\n    transYDiff = (transY * scale - transYStart) / count;\n    interval = setInterval(function () {\n      i += 1;\n      _this.scale = scaleStart + scaleDiff * i;\n      _this.transX = (transXStart + transXDiff * i) / _this.scale;\n      _this.transY = (transYStart + transYDiff * i) / _this.scale;\n      _this._applyTransform();\n      if (i == count) {\n        clearInterval(interval);\n        _this._emit(Events.onViewportChange, [_this.scale, _this.transX, _this.transY]);\n      }\n    }, 10);\n  } else {\n    this.transX = transX;\n    this.transY = transY;\n    this.scale = scale;\n    this._applyTransform();\n    this._emit(Events.onViewportChange, [this.scale, this.transX, this.transY]);\n  }\n}\n\nfunction setFocus(config) {\n  var _this = this;\n  if (config === void 0) {\n    config = {};\n  }\n  var bbox,\n    codes = [];\n  if (config.region) {\n    codes.push(config.region);\n  } else if (config.regions) {\n    codes = config.regions;\n  }\n  if (codes.length) {\n    codes.forEach(function (code) {\n      if (_this.regions[code]) {\n        var itemBbox = _this.regions[code].element.shape.getBBox();\n        if (itemBbox) {\n          // Handle the first loop\n          if (typeof bbox == 'undefined') {\n            bbox = itemBbox;\n          } else {\n            // get the old bbox properties plus the current\n            // this kinda incrementing the old values and the new values\n            bbox = {\n              x: Math.min(bbox.x, itemBbox.x),\n              y: Math.min(bbox.y, itemBbox.y),\n              width: Math.max(bbox.x + bbox.width, itemBbox.x + itemBbox.width) - Math.min(bbox.x, itemBbox.x),\n              height: Math.max(bbox.y + bbox.height, itemBbox.y + itemBbox.height) - Math.min(bbox.y, itemBbox.y)\n            };\n          }\n        }\n      }\n    });\n    return this._setScale(Math.min(this._width / bbox.width, this._height / bbox.height), -(bbox.x + bbox.width / 2), -(bbox.y + bbox.height / 2), true, config.animate);\n  } else if (config.coords) {\n    var point = this.coordsToPoint(config.coords[0], config.coords[1]);\n    var x = this.transX - point.x / this.scale;\n    var y = this.transY - point.y / this.scale;\n    return this._setScale(config.scale * this._baseScale, x, y, true, config.animate);\n  }\n}\n\nfunction updateSize() {\n  this._width = this.container.offsetWidth;\n  this._height = this.container.offsetHeight;\n  this._resize();\n  this.canvas.setSize(this._width, this._height);\n  this._applyTransform();\n}\n\n/**\n * ------------------------------------------------------------------------\n * Object\n * ------------------------------------------------------------------------\n */\nvar Proj = {\n  /* sgn(n){\n    if (n > 0) {\n      return 1;\n    } else if (n < 0) {\n      return -1;\n    } else {\n      return n;\n    }\n  }, */\n  mill: function mill(lat, lng, c) {\n    return {\n      x: this.radius * (lng - c) * this.radDeg,\n      y: -this.radius * Math.log(Math.tan((45 + 0.4 * lat) * this.radDeg)) / 0.8\n    };\n  },\n  /* mill_inv(x, y, c) {\n    return {\n      lat: (2.5 * Math.atan(Math.exp(0.8 * y / this.radius)) - 5 * Math.PI / 8) * this.degRad,\n      lng: (c * this.radDeg + x / this.radius) * this.degRad\n    };\n  }, */\n  merc: function merc(lat, lng, c) {\n    return {\n      x: this.radius * (lng - c) * this.radDeg,\n      y: -this.radius * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))\n    };\n  },\n  /* merc_inv(x, y, c) {\n    return {\n      lat: (2 * Math.atan(Math.exp(y / this.radius)) - Math.PI / 2) * this.degRad,\n      lng: (c * this.radDeg + x / this.radius) * this.degRad\n    };\n  }, */\n  aea: function aea(lat, lng, c) {\n    var fi0 = 0,\n      lambda0 = c * this.radDeg,\n      fi1 = 29.5 * this.radDeg,\n      fi2 = 45.5 * this.radDeg,\n      fi = lat * this.radDeg,\n      lambda = lng * this.radDeg,\n      n = (Math.sin(fi1) + Math.sin(fi2)) / 2,\n      C = Math.cos(fi1) * Math.cos(fi1) + 2 * n * Math.sin(fi1),\n      theta = n * (lambda - lambda0),\n      ro = Math.sqrt(C - 2 * n * Math.sin(fi)) / n,\n      ro0 = Math.sqrt(C - 2 * n * Math.sin(fi0)) / n;\n    return {\n      x: ro * Math.sin(theta) * this.radius,\n      y: -(ro0 - ro * Math.cos(theta)) * this.radius\n    };\n  },\n  /* aea_inv(xCoord, yCoord, c) {\n    var x = xCoord / this.radius,\n        y = yCoord / this.radius,\n        fi0 = 0,\n        lambda0 = c * this.radDeg,\n        fi1 = 29.5 * this.radDeg,\n        fi2 = 45.5 * this.radDeg,\n        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,\n        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),\n        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n,\n        ro = Math.sqrt(x*x+(ro0-y)*(ro0-y)),\n        theta = Math.atan( x / (ro0 - y) );\n     return {\n      lat: (Math.asin((C - ro * ro * n * n) / (2 * n))) * this.degRad,\n      lng: (lambda0 + theta / n) * this.degRad\n    };\n  }, */\n  lcc: function lcc(lat, lng, c) {\n    var fi0 = 0,\n      lambda0 = c * this.radDeg,\n      lambda = lng * this.radDeg,\n      fi1 = 33 * this.radDeg,\n      fi2 = 45 * this.radDeg,\n      fi = lat * this.radDeg,\n      n = Math.log(Math.cos(fi1) * (1 / Math.cos(fi2))) / Math.log(Math.tan(Math.PI / 4 + fi2 / 2) * (1 / Math.tan(Math.PI / 4 + fi1 / 2))),\n      F = Math.cos(fi1) * Math.pow(Math.tan(Math.PI / 4 + fi1 / 2), n) / n,\n      ro = F * Math.pow(1 / Math.tan(Math.PI / 4 + fi / 2), n),\n      ro0 = F * Math.pow(1 / Math.tan(Math.PI / 4 + fi0 / 2), n);\n    return {\n      x: ro * Math.sin(n * (lambda - lambda0)) * this.radius,\n      y: -(ro0 - ro * Math.cos(n * (lambda - lambda0))) * this.radius\n    };\n  }\n  /* lcc_inv(xCoord, yCoord, c) {\n    var x = xCoord / this.radius,\n        y = yCoord / this.radius,\n        fi0 = 0,\n        lambda0 = c * this.radDeg,\n        fi1 = 33 * this.radDeg,\n        fi2 = 45 * this.radDeg,\n        n = Math.log( Math.cos(fi1) * (1 / Math.cos(fi2)) ) / Math.log( Math.tan( Math.PI / 4 + fi2 / 2) * (1 / Math.tan( Math.PI / 4 + fi1 / 2) ) ),\n        F = ( Math.cos(fi1) * Math.pow( Math.tan( Math.PI / 4 + fi1 / 2 ), n ) ) / n,\n        ro0 = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi0 / 2 ), n ),\n        ro = this.sgn(n) * Math.sqrt(x*x+(ro0-y)*(ro0-y)),\n        theta = Math.atan( x / (ro0 - y) );\n     return {\n      lat: (2 * Math.atan(Math.pow(F/ro, 1/n)) - Math.PI / 2) * this.degRad,\n      lng: (lambda0 + theta / n) * this.degRad\n    };\n  } */\n};\nProj.degRad = 180 / Math.PI;\nProj.radDeg = Math.PI / 180;\nProj.radius = 6381372;\n\nfunction coordsToPoint(lat, lng) {\n  var projection = Map.maps[this.params.map].projection;\n  var _Proj$projection$type = Proj[projection.type](lat, lng, projection.centralMeridian),\n    x = _Proj$projection$type.x,\n    y = _Proj$projection$type.y;\n  var inset = this.getInsetForPoint(x, y);\n  if (!inset) {\n    return false;\n  }\n  var bbox = inset.bbox;\n  x = (x - bbox[0].x) / (bbox[1].x - bbox[0].x) * inset.width * this.scale;\n  y = (y - bbox[0].y) / (bbox[1].y - bbox[0].y) * inset.height * this.scale;\n  return {\n    x: x + this.transX * this.scale + inset.left * this.scale,\n    y: y + this.transY * this.scale + inset.top * this.scale\n  };\n}\n\nfunction getInsetForPoint(x, y) {\n  var insets = Map.maps[this.params.map].insets;\n  for (var index = 0; index < insets.length; index++) {\n    var _insets$index$bbox = insets[index].bbox,\n      start = _insets$index$bbox[0],\n      end = _insets$index$bbox[1];\n    if (x > start.x && x < end.x && y > start.y && y < end.y) {\n      return insets[index];\n    }\n  }\n}\n\nfunction getMarkerPosition(_ref) {\n  var coords = _ref.coords;\n  if (Map.maps[this.params.map].projection) {\n    return this.coordsToPoint.apply(this, coords);\n  }\n  return {\n    x: coords[0] * this.scale + this.transX * this.scale,\n    y: coords[1] * this.scale + this.transY * this.scale\n  };\n}\n\nfunction repositionLines() {\n  var point1 = false,\n    point2 = false;\n  for (var index in this._lines) {\n    for (var mindex in this._markers) {\n      var marker = this._markers[mindex];\n      if (marker.config.name === this._lines[index].config.from) {\n        point1 = this.getMarkerPosition(marker.config);\n      }\n      if (marker.config.name === this._lines[index].config.to) {\n        point2 = this.getMarkerPosition(marker.config);\n      }\n    }\n    if (point1 !== false && point2 !== false) {\n      this._lines[index].setStyle({\n        x1: point1.x,\n        y1: point1.y,\n        x2: point2.x,\n        y2: point2.y\n      });\n    }\n  }\n}\n\nfunction repositionMarkers() {\n  for (var index in this._markers) {\n    var point = this.getMarkerPosition(this._markers[index].config);\n    if (point !== false) {\n      this._markers[index].element.setStyle({\n        cx: point.x,\n        cy: point.y\n      });\n    }\n  }\n}\n\nfunction repositionLabels() {\n  var labels = this.params.labels;\n  if (!labels) {\n    return;\n  }\n\n  // Regions labels\n  if (labels.regions) {\n    for (var key in this.regions) {\n      this.regions[key].element.updateLabelPosition();\n    }\n  }\n\n  // Markers labels\n  if (labels.markers) {\n    for (var _key in this._markers) {\n      this._markers[_key].element.updateLabelPosition();\n    }\n  }\n}\n\nvar core = {\n  _setupContainerEvents: setupContainerEvents,\n  _setupElementEvents: setupElementEvents,\n  _setupZoomButtons: setupZoomButtons,\n  _setupContainerTouchEvents: setupContainerTouchEvents,\n  _createRegions: createRegions,\n  _createLines: createLines,\n  _createMarkers: createMarkers,\n  _createSeries: createSeries,\n  _applyTransform: applyTransform,\n  _resize: resize,\n  _setScale: setScale,\n  setFocus: setFocus,\n  updateSize: updateSize,\n  coordsToPoint: coordsToPoint,\n  getInsetForPoint: getInsetForPoint,\n  getMarkerPosition: getMarkerPosition,\n  _repositionLines: repositionLines,\n  _repositionMarkers: repositionMarkers,\n  _repositionLabels: repositionLabels\n};\n\nvar Defaults = {\n  map: 'world',\n  backgroundColor: 'transparent',\n  draggable: true,\n  zoomButtons: true,\n  zoomOnScroll: true,\n  zoomOnScrollSpeed: 3,\n  zoomMax: 12,\n  zoomMin: 1,\n  zoomAnimate: true,\n  showTooltip: true,\n  zoomStep: 1.5,\n  bindTouchEvents: true,\n  // Line options\n  lineStyle: {\n    stroke: '#808080',\n    strokeWidth: 1,\n    strokeLinecap: 'round'\n  },\n  // Marker options\n  markersSelectable: false,\n  markersSelectableOne: false,\n  markerStyle: {\n    initial: {\n      r: 7,\n      fill: '#374151',\n      fillOpacity: 1,\n      stroke: '#FFF',\n      strokeWidth: 5,\n      strokeOpacity: .5\n    },\n    hover: {\n      fill: '#3cc0ff',\n      cursor: 'pointer'\n    },\n    selected: {\n      fill: 'blue'\n    },\n    selectedHover: {}\n  },\n  markerLabelStyle: {\n    initial: {\n      fontFamily: 'Verdana',\n      fontSize: 12,\n      fontWeight: 500,\n      cursor: 'default',\n      fill: '#374151'\n    },\n    hover: {\n      cursor: 'pointer'\n    },\n    selected: {},\n    selectedHover: {}\n  },\n  // Region options\n  regionsSelectable: false,\n  regionsSelectableOne: false,\n  regionStyle: {\n    initial: {\n      fill: '#dee2e8',\n      fillOpacity: 1,\n      stroke: 'none',\n      strokeWidth: 0\n    },\n    hover: {\n      fillOpacity: .7,\n      cursor: 'pointer'\n    },\n    selected: {\n      fill: '#9ca3af'\n    },\n    selectedHover: {}\n  },\n  regionLabelStyle: {\n    initial: {\n      fontFamily: 'Verdana',\n      fontSize: '12',\n      fontWeight: 'bold',\n      cursor: 'default',\n      fill: '#35373e'\n    },\n    hover: {\n      cursor: 'pointer'\n    }\n  }\n};\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar SVGElement = /*#__PURE__*/function () {\n  function SVGElement(name, config) {\n    this.node = this._createElement(name);\n    if (config) {\n      this.set(config);\n    }\n  }\n\n  // Create new SVG element `svg`, `g`, `path`, `line`, `circle`, `image`, etc.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS#important_namespace_uris\n  var _proto = SVGElement.prototype;\n  _proto._createElement = function _createElement(tagName) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n  };\n  _proto.addClass = function addClass(className) {\n    this.node.setAttribute('class', className);\n  };\n  _proto.getBBox = function getBBox() {\n    return this.node.getBBox();\n  }\n\n  // Apply attributes on the current node element\n  ;\n  _proto.set = function set(property, value) {\n    if (typeof property === 'object') {\n      for (var attr in property) {\n        this.applyAttr(attr, property[attr]);\n      }\n    } else {\n      this.applyAttr(property, value);\n    }\n  };\n  _proto.get = function get(property) {\n    return this.style.initial[property];\n  };\n  _proto.applyAttr = function applyAttr(property, value) {\n    this.node.setAttribute(hyphenate(property), value);\n  };\n  _proto.remove = function remove() {\n    removeElement(this.node);\n  };\n  return SVGElement;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar SVGShapeElement = /*#__PURE__*/function (_SVGElement) {\n  function SVGShapeElement(name, config, style) {\n    var _this;\n    if (style === void 0) {\n      style = {};\n    }\n    _this = _SVGElement.call(this, name, config) || this;\n    _this.isHovered = false;\n    _this.isSelected = false;\n    _this.style = style;\n    _this.style.current = {};\n    _this.updateStyle();\n    return _this;\n  }\n  _inheritsLoose(SVGShapeElement, _SVGElement);\n  var _proto = SVGShapeElement.prototype;\n  _proto.setStyle = function setStyle(property, value) {\n    if (typeof property === 'object') {\n      merge(this.style.current, property);\n    } else {\n      var _merge;\n      merge(this.style.current, (_merge = {}, _merge[property] = value, _merge));\n    }\n    this.updateStyle();\n  };\n  _proto.updateStyle = function updateStyle() {\n    var attrs = {};\n    merge(attrs, this.style.initial);\n    merge(attrs, this.style.current);\n    if (this.isHovered) {\n      merge(attrs, this.style.hover);\n    }\n    if (this.isSelected) {\n      merge(attrs, this.style.selected);\n      if (this.isHovered) {\n        merge(attrs, this.style.selectedHover);\n      }\n    }\n    this.set(attrs);\n  };\n  return SVGShapeElement;\n}(SVGElement);\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar SVGTextElement = /*#__PURE__*/function (_SVGShapeElement) {\n  function SVGTextElement(config, style) {\n    return _SVGShapeElement.call(this, 'text', config, style) || this;\n  }\n  _inheritsLoose(SVGTextElement, _SVGShapeElement);\n  var _proto = SVGTextElement.prototype;\n  _proto.applyAttr = function applyAttr(attr, value) {\n    attr === 'text' ? this.node.textContent = value : _SVGShapeElement.prototype.applyAttr.call(this, attr, value);\n  };\n  return SVGTextElement;\n}(SVGShapeElement);\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar SVGImageElement = /*#__PURE__*/function (_SVGShapeElement) {\n  function SVGImageElement(config, style) {\n    return _SVGShapeElement.call(this, 'image', config, style) || this;\n  }\n  _inheritsLoose(SVGImageElement, _SVGShapeElement);\n  var _proto = SVGImageElement.prototype;\n  _proto.applyAttr = function applyAttr(attr, value) {\n    var imageUrl;\n    if (attr === 'image') {\n      // This get executed when we have url in series.markers[0].scale.someScale.url\n      if (typeof value === 'object') {\n        imageUrl = value.url;\n        this.offset = value.offset || [0, 0];\n      } else {\n        imageUrl = value;\n        this.offset = [0, 0];\n      }\n      this.node.setAttributeNS('http://www.w3.org/1999/xlink', 'href', imageUrl);\n\n      // Set width and height then call this `applyAttr` again\n      this.width = 23;\n      this.height = 23;\n      this.applyAttr('width', this.width);\n      this.applyAttr('height', this.height);\n      this.applyAttr('x', this.cx - this.width / 2 + this.offset[0]);\n      this.applyAttr('y', this.cy - this.height / 2 + this.offset[1]);\n    } else if (attr == 'cx') {\n      this.cx = value;\n      if (this.width) {\n        this.applyAttr('x', value - this.width / 2 + this.offset[0]);\n      }\n    } else if (attr == 'cy') {\n      this.cy = value;\n      if (this.height) {\n        this.applyAttr('y', value - this.height / 2 + this.offset[1]);\n      }\n    } else {\n      // This time Call SVGElement\n      _SVGShapeElement.prototype.applyAttr.apply(this, arguments);\n    }\n  };\n  return SVGImageElement;\n}(SVGShapeElement);\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar SVGCanvasElement = /*#__PURE__*/function (_SVGElement) {\n  function SVGCanvasElement(container) {\n    var _this;\n    _this = _SVGElement.call(this, 'svg') || this; // Create svg element for holding the whole map\n\n    _this._container = container;\n\n    // Create the defs element\n    _this._defsElement = new SVGElement('defs');\n\n    // Create group element which will hold the paths (regions)\n    _this._rootElement = new SVGElement('g', {\n      id: 'jvm-regions-group'\n    });\n\n    // Append the defs element to the this.node (SVG tag)\n    _this.node.appendChild(_this._defsElement.node);\n\n    // Append the group to this.node (SVG tag)\n    _this.node.appendChild(_this._rootElement.node);\n\n    // Append this.node (SVG tag) to the container\n    _this._container.appendChild(_this.node);\n    return _this;\n  }\n  _inheritsLoose(SVGCanvasElement, _SVGElement);\n  var _proto = SVGCanvasElement.prototype;\n  _proto.setSize = function setSize(width, height) {\n    this.node.setAttribute('width', width);\n    this.node.setAttribute('height', height);\n  };\n  _proto.applyTransformParams = function applyTransformParams(scale, transX, transY) {\n    this._rootElement.node.setAttribute('transform', \"scale(\" + scale + \") translate(\" + transX + \", \" + transY + \")\");\n  }\n\n  // Create `path` element\n  ;\n  _proto.createPath = function createPath(config, style) {\n    var path = new SVGShapeElement('path', config, style);\n    path.node.setAttribute('fill-rule', 'evenodd');\n    return this._add(path);\n  }\n\n  // Create `circle` element\n  ;\n  _proto.createCircle = function createCircle(config, style, group) {\n    var circle = new SVGShapeElement('circle', config, style);\n    return this._add(circle, group);\n  }\n\n  // Create `line` element\n  ;\n  _proto.createLine = function createLine(config, style, group) {\n    var line = new SVGShapeElement('line', config, style);\n    return this._add(line, group);\n  }\n\n  // Create `text` element\n  ;\n  _proto.createText = function createText(config, style, group) {\n    var text = new SVGTextElement(config, style);\n    return this._add(text, group);\n  }\n\n  // Create `image` element\n  ;\n  _proto.createImage = function createImage(config, style, group) {\n    var image = new SVGImageElement(config, style);\n    return this._add(image, group);\n  }\n\n  // Create `g` element\n  ;\n  _proto.createGroup = function createGroup(id) {\n    var group = new SVGElement('g');\n    this.node.appendChild(group.node);\n    if (id) {\n      group.node.id = id;\n    }\n    group.canvas = this;\n    return group;\n  }\n\n  // Add some element to a spcific group or the root element if the group isn't given\n  ;\n  _proto._add = function _add(element, group) {\n    group = group || this._rootElement;\n    group.node.appendChild(element.node);\n    return element;\n  };\n  return SVGCanvasElement;\n}(SVGElement);\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Tooltip = /*#__PURE__*/function (_BaseComponent) {\n  function Tooltip(map) {\n    var _this;\n    _this = _BaseComponent.call(this) || this;\n    var tooltip = createElement('div', 'jvm-tooltip');\n    _this._map = map;\n    _this._tooltip = document.body.appendChild(tooltip);\n    _this._bindEventListeners();\n    return _this || _assertThisInitialized(_this);\n  }\n  _inheritsLoose(Tooltip, _BaseComponent);\n  var _proto = Tooltip.prototype;\n  _proto._bindEventListeners = function _bindEventListeners() {\n    var _this2 = this;\n    EventHandler.on(this._map.container, 'mousemove', function (event) {\n      if (!_this2._tooltip.classList.contains('active')) {\n        return;\n      }\n      var container = findElement(_this2._map.container, '#jvm-regions-group').getBoundingClientRect();\n      var space = 5; // Space between the cursor and tooltip element\n\n      // Tooltip\n      var _this2$_tooltip$getBo = _this2._tooltip.getBoundingClientRect(),\n        height = _this2$_tooltip$getBo.height,\n        width = _this2$_tooltip$getBo.width;\n      var topIsPassed = event.clientY <= container.top + height + space;\n      var top = event.pageY - height - space;\n      var left = event.pageX - width - space;\n\n      // Ensure the tooltip will never cross outside the canvas area(map)\n      if (topIsPassed) {\n        // Top:\n        top += height + space;\n\n        // The cursor is a bit larger from left side\n        left -= space * 2;\n      }\n      if (event.clientX < container.left + width + space) {\n        // Left:\n        left = event.pageX + space + 2;\n        if (topIsPassed) {\n          left += space * 2;\n        }\n      }\n      _this2.css({\n        top: top + \"px\",\n        left: left + \"px\"\n      });\n    });\n  };\n  _proto.getElement = function getElement() {\n    return this._tooltip;\n  };\n  _proto.show = function show() {\n    this._tooltip.classList.add('active');\n  };\n  _proto.hide = function hide() {\n    this._tooltip.classList.remove('active');\n  };\n  _proto.text = function text(string, html) {\n    if (html === void 0) {\n      html = false;\n    }\n    var property = html ? 'innerHTML' : 'textContent';\n    if (!string) {\n      return this._tooltip[property];\n    }\n    this._tooltip[property] = string;\n  };\n  _proto.css = function css(_css) {\n    for (var style in _css) {\n      this._tooltip.style[style] = _css[style];\n    }\n    return this;\n  };\n  return Tooltip;\n}(BaseComponent);\n\nvar DataVisualization = /*#__PURE__*/function () {\n  function DataVisualization(_ref, map) {\n    var scale = _ref.scale,\n      values = _ref.values;\n    this._scale = scale;\n    this._values = values;\n    this._fromColor = this.hexToRgb(scale[0]);\n    this._toColor = this.hexToRgb(scale[1]);\n    this._map = map;\n    this.setMinMaxValues(values);\n    this.visualize();\n  }\n  var _proto = DataVisualization.prototype;\n  _proto.setMinMaxValues = function setMinMaxValues(values) {\n    this.min = Number.MAX_VALUE;\n    this.max = 0;\n    for (var value in values) {\n      value = parseFloat(values[value]);\n      if (value > this.max) {\n        this.max = value;\n      }\n      if (value < this.min) {\n        this.min = value;\n      }\n    }\n  };\n  _proto.visualize = function visualize() {\n    var attrs = {},\n      value;\n    for (var regionCode in this._values) {\n      value = parseFloat(this._values[regionCode]);\n      if (!isNaN(value)) {\n        attrs[regionCode] = this.getValue(value);\n      }\n    }\n    this.setAttributes(attrs);\n  };\n  _proto.setAttributes = function setAttributes(attrs) {\n    for (var code in attrs) {\n      if (this._map.regions[code]) {\n        this._map.regions[code].element.setStyle('fill', attrs[code]);\n      }\n    }\n  };\n  _proto.getValue = function getValue(value) {\n    if (this.min === this.max) {\n      return \"#\" + this._toColor.join('');\n    }\n    var hex,\n      color = '#';\n    for (var i = 0; i < 3; i++) {\n      hex = Math.round(this._fromColor[i] + (this._toColor[i] - this._fromColor[i]) * ((value - this.min) / (this.max - this.min))).toString(16);\n      color += (hex.length === 1 ? '0' : '') + hex;\n    }\n    return color;\n  };\n  _proto.hexToRgb = function hexToRgb(h) {\n    var r = 0,\n      g = 0,\n      b = 0;\n    if (h.length == 4) {\n      r = '0x' + h[1] + h[1];\n      g = '0x' + h[2] + h[2];\n      b = '0x' + h[3] + h[3];\n    } else if (h.length == 7) {\n      r = '0x' + h[1] + h[2];\n      g = '0x' + h[3] + h[4];\n      b = '0x' + h[5] + h[6];\n    }\n    return [parseInt(r), parseInt(g), parseInt(b)];\n  };\n  return DataVisualization;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar Map = /*#__PURE__*/function () {\n  function Map(options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    // Merge the given options with the default options\n    this.params = merge(Map.defaults, options, true);\n\n    // Throw an error if the given map name doesn't match\n    // the map that was set in map file\n    if (!Map.maps[this.params.map]) {\n      throw new Error(\"Attempt to use map which was not loaded: \" + options.map);\n    }\n    this.regions = {};\n    this.scale = 1;\n    this.transX = 0;\n    this.transY = 0;\n    this._mapData = Map.maps[this.params.map];\n    this._markers = {};\n    this._lines = {};\n    this._defaultWidth = this._mapData.width;\n    this._defaultHeight = this._mapData.height;\n    this._height = 0;\n    this._width = 0;\n    this._baseScale = 1;\n    this._baseTransX = 0;\n    this._baseTransY = 0;\n\n    // `document` is already ready, just initialise now\n    if (document.readyState !== 'loading') {\n      this._init();\n    } else {\n      // Wait until `document` is ready\n      window.addEventListener('DOMContentLoaded', function () {\n        return _this._init();\n      });\n    }\n  }\n  var _proto = Map.prototype;\n  _proto._init = function _init() {\n    var options = this.params;\n    this.container = getElement(options.selector);\n    this.container.classList.add('jvm-container');\n\n    // The map canvas element\n    this.canvas = new SVGCanvasElement(this.container);\n\n    // Set the map's background color\n    this.setBackgroundColor(options.backgroundColor);\n\n    // Create regions\n    this._createRegions();\n\n    // Update size\n    this.updateSize();\n\n    // Create lines\n    this._createLines(options.lines || {}, options.markers || {});\n\n    // Create markers\n    this._createMarkers(options.markers);\n\n    // Position labels\n    this._repositionLabels();\n\n    // Setup the container events\n    this._setupContainerEvents();\n\n    // Setup regions/markers events\n    this._setupElementEvents();\n\n    // Create zoom buttons if `zoomButtons` is presented\n    if (options.zoomButtons) {\n      this._setupZoomButtons();\n    }\n\n    // Create toolip\n    if (options.showTooltip) {\n      this._tooltip = new Tooltip(this);\n    }\n\n    // Set selected regions if any\n    if (options.selectedRegions) {\n      this._setSelected('regions', options.selectedRegions);\n    }\n\n    // Set selected regions if any\n    if (options.selectedMarkers) {\n      this._setSelected('_markers', options.selectedMarkers);\n    }\n\n    // Set focus on a spcific region\n    if (options.focusOn) {\n      this.setFocus(options.focusOn);\n    }\n\n    // Data visualization\n    if (options.visualizeData) {\n      this.dataVisualization = new DataVisualization(options.visualizeData, this);\n    }\n\n    // Bind touch events if true\n    if (options.bindTouchEvents) {\n      if ('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch) {\n        this._setupContainerTouchEvents();\n      }\n    }\n\n    // Create series if any\n    if (options.series) {\n      this.container.appendChild(this.legendHorizontal = createElement('div', 'jvm-series-container jvm-series-h'));\n      this.container.appendChild(this.legendVertical = createElement('div', 'jvm-series-container jvm-series-v'));\n      this._createSeries();\n    }\n\n    // Fire loaded event\n    this._emit(Events.onLoaded, [this]);\n  }\n\n  // Public\n  ;\n  _proto.setBackgroundColor = function setBackgroundColor(color) {\n    this.container.style.backgroundColor = color;\n  }\n\n  // Region methods\n  ;\n  _proto.getSelectedRegions = function getSelectedRegions() {\n    return this._getSelected('regions');\n  };\n  _proto.clearSelectedRegions = function clearSelectedRegions(regions) {\n    var _this2 = this;\n    if (regions === void 0) {\n      regions = undefined;\n    }\n    regions = this._normalizeRegions(regions) || this._getSelected('regions');\n    regions.forEach(function (key) {\n      _this2.regions[key].element.select(false);\n    });\n  };\n  _proto.setSelectedRegions = function setSelectedRegions(regions) {\n    this.clearSelectedRegions();\n    this._setSelected('regions', this._normalizeRegions(regions));\n  }\n\n  // Markers methods\n  ;\n  _proto.getSelectedMarkers = function getSelectedMarkers() {\n    return this._getSelected('_markers');\n  };\n  _proto.clearSelectedMarkers = function clearSelectedMarkers() {\n    this._clearSelected('_markers');\n  };\n  _proto.addMarkers = function addMarkers(config) {\n    config = Array.isArray(config) ? config : [config];\n    this._createMarkers(config, true);\n  };\n  _proto.removeMarkers = function removeMarkers(markers) {\n    var _this3 = this;\n    if (!markers) {\n      markers = Object.keys(this._markers);\n    }\n    markers.forEach(function (index) {\n      // Remove the element from the DOM\n      _this3._markers[index].element.remove();\n      // Remove the element from markers object\n      delete _this3._markers[index];\n    });\n  };\n  _proto.addLine = function addLine(from, to, style) {\n    if (style === void 0) {\n      style = {};\n    }\n    console.warn('`addLine` method is deprecated, please use `addLines` instead.');\n    this._createLines([{\n      from: from,\n      to: to,\n      style: style\n    }], this._markers, true);\n  };\n  _proto.addLines = function addLines(config) {\n    var uids = this._getLinesAsUids();\n    if (!Array.isArray(config)) {\n      config = [config];\n    }\n    this._createLines(config.filter(function (line) {\n      return !(uids.indexOf(getLineUid(line.from, line.to)) > -1);\n    }), this._markers, true);\n  };\n  _proto.removeLines = function removeLines(lines) {\n    var _this4 = this;\n    if (Array.isArray(lines)) {\n      lines = lines.map(function (line) {\n        return getLineUid(line.from, line.to);\n      });\n    } else {\n      lines = this._getLinesAsUids();\n    }\n    lines.forEach(function (uid) {\n      _this4._lines[uid].dispose();\n      delete _this4._lines[uid];\n    });\n  };\n  _proto.removeLine = function removeLine(from, to) {\n    console.warn('`removeLine` method is deprecated, please use `removeLines` instead.');\n    var uid = getLineUid(from, to);\n    if (this._lines.hasOwnProperty(uid)) {\n      this._lines[uid].element.remove();\n      delete this._lines[uid];\n    }\n  }\n\n  // Reset map\n  ;\n  _proto.reset = function reset() {\n    for (var key in this.series) {\n      for (var i = 0; i < this.series[key].length; i++) {\n        this.series[key][i].clear();\n      }\n    }\n    if (this.legendHorizontal) {\n      removeElement(this.legendHorizontal);\n      this.legendHorizontal = null;\n    }\n    if (this.legendVertical) {\n      removeElement(this.legendVertical);\n      this.legendVertical = null;\n    }\n    this.scale = this._baseScale;\n    this.transX = this._baseTransX;\n    this.transY = this._baseTransY;\n    this._applyTransform();\n    this.clearSelectedMarkers();\n    this.clearSelectedRegions();\n    this.removeMarkers();\n  }\n\n  // Destroy the map\n  ;\n  _proto.destroy = function destroy(destroyInstance) {\n    var _this5 = this;\n    if (destroyInstance === void 0) {\n      destroyInstance = true;\n    }\n    // Remove event registry\n    EventHandler.flush();\n\n    // Remove tooltip from DOM and memory\n    this._tooltip.dispose();\n\n    // Fire destroyed event\n    this._emit(Events.onDestroyed);\n\n    // Remove references\n    if (destroyInstance) {\n      Object.keys(this).forEach(function (key) {\n        try {\n          delete _this5[key];\n        } catch (e) {}\n      });\n    }\n  };\n  _proto.extend = function extend(name, callback) {\n    if (typeof this[name] === 'function') {\n      throw new Error(\"The method [\" + name + \"] does already exist, please use another name.\");\n    }\n    Map.prototype[name] = callback;\n  }\n\n  // Private\n  ;\n  _proto._emit = function _emit(eventName, args) {\n    for (var event in Events) {\n      if (Events[event] === eventName && typeof this.params[event] === 'function') {\n        this.params[event].apply(this, args);\n      }\n    }\n  }\n\n  // Get selected markers/regions\n  ;\n  _proto._getSelected = function _getSelected(type) {\n    var selected = [];\n    for (var key in this[type]) {\n      if (this[type][key].element.isSelected) {\n        selected.push(key);\n      }\n    }\n    return selected;\n  };\n  _proto._setSelected = function _setSelected(type, keys) {\n    var _this6 = this;\n    keys.forEach(function (key) {\n      if (_this6[type][key]) {\n        _this6[type][key].element.select(true);\n      }\n    });\n  };\n  _proto._clearSelected = function _clearSelected(type) {\n    var _this7 = this;\n    this._getSelected(type).forEach(function (key) {\n      _this7[type][key].element.select(false);\n    });\n  };\n  _proto._getLinesAsUids = function _getLinesAsUids() {\n    return Object.keys(this._lines);\n  };\n  _proto._normalizeRegions = function _normalizeRegions(regions) {\n    return typeof regions === 'string' ? [regions] : regions;\n  };\n  return Map;\n}();\nMap.maps = {};\nMap.defaults = Defaults;\nObject.assign(Map.prototype, core);\n\n/**\n * jsVectorMap\n * Copyrights (c) Mustafa Omar https://github.com/themustafaomar\n * Released under the MIT License.\n */\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nvar jsVectorMap = /*#__PURE__*/function () {\n  function jsVectorMap(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (!options.selector) {\n      throw new Error('Selector is not given.');\n    }\n    return new Map(options);\n  }\n\n  // Public\n  jsVectorMap.addMap = function addMap(name, map) {\n    Map.maps[name] = map;\n  };\n  return jsVectorMap;\n}();\nvar index = window.jsVectorMap = jsVectorMap;\n\nexport { index as default };\n","\"use strict\";jsVectorMap.addMap(\"world\",{insets:[{width:900,top:0,left:0,height:440.70631074413296,bbox:[{y:-12671671.123330014,x:-20004297.151525836},{y:6930392.025135122,x:20026572.39474939}]}],paths:{BD:{path:\"M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z\",name:\"Bangladesh\"},BE:{path:\"M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z\",name:\"Belgium\"},BF:{path:\"M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z\",name:\"Burkina Faso\"},BG:{path:\"M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z\",name:\"Bulgaria\"},BA:{path:\"M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z\",name:\"Bosnia and Herz.\"},BN:{path:\"M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z\",name:\"Brunei\"},BO:{path:\"M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z\",name:\"Bolivia\"},JP:{path:\"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z\",name:\"Japan\"},BI:{path:\"M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z\",name:\"Burundi\"},BJ:{path:\"M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z\",name:\"Benin\"},BT:{path:\"M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z\",name:\"Bhutan\"},JM:{path:\"M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z\",name:\"Jamaica\"},BW:{path:\"M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z\",name:\"Botswana\"},BR:{path:\"M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z\",name:\"Brazil\"},BS:{path:\"M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z\",name:\"Bahamas\"},BY:{path:\"M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z\",name:\"Belarus\"},BZ:{path:\"M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z\",name:\"Belize\"},RU:{path:\"M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM874.85,67.94l-5.63,0.48l-0.26,-0.84l3.15,-1.89l1.94,0.01l3.19,1.16l-2.39,1.09ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z\",name:\"Russia\"},RW:{path:\"M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z\",name:\"Rwanda\"},RS:{path:\"M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z\",name:\"Serbia\"},LT:{path:\"M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z\",name:\"Lithuania\"},LU:{path:\"M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z\",name:\"Luxembourg\"},LR:{path:\"M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z\",name:\"Liberia\"},RO:{path:\"M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z\",name:\"Romania\"},GW:{path:\"M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z\",name:\"Guinea-Bissau\"},GT:{path:\"M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z\",name:\"Guatemala\"},GR:{path:\"M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z\",name:\"Greece\"},GQ:{path:\"M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z\",name:\"Eq. Guinea\"},GY:{path:\"M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z\",name:\"Guyana\"},GE:{path:\"M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z\",name:\"Georgia\"},GB:{path:\"M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z\",name:\"United Kingdom\"},GA:{path:\"M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z\",name:\"Gabon\"},GN:{path:\"M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z\",name:\"Guinea\"},GM:{path:\"M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z\",name:\"Gambia\"},GL:{path:\"M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z\",name:\"Greenland\"},KW:{path:\"M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z\",name:\"Kuwait\"},GH:{path:\"M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z\",name:\"Ghana\"},OM:{path:\"M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z\",name:\"Oman\"},_2:{path:\"M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z\",name:\"Somaliland\"},_1:{path:\"M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z\",name:\"Kosovo\"},_0:{path:\"M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z\",name:\"N. Cyprus\"},JO:{path:\"M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z\",name:\"Jordan\"},HR:{path:\"M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z\",name:\"Croatia\"},HT:{path:\"M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z\",name:\"Haiti\"},HU:{path:\"M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z\",name:\"Hungary\"},HN:{path:\"M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z\",name:\"Honduras\"},PR:{path:\"M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z\",name:\"Puerto Rico\"},PS:{path:\"M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z\",name:\"Palestine\"},PT:{path:\"M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z\",name:\"Portugal\"},PY:{path:\"M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z\",name:\"Paraguay\"},PA:{path:\"M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z\",name:\"Panama\"},PG:{path:\"M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z\",name:\"Papua New Guinea\"},PE:{path:\"M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z\",name:\"Peru\"},PK:{path:\"M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z\",name:\"Pakistan\"},PH:{path:\"M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z\",name:\"Philippines\"},PL:{path:\"M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z\",name:\"Poland\"},ZM:{path:\"M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z\",name:\"Zambia\"},EH:{path:\"M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z\",name:\"W. Sahara\"},EE:{path:\"M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z\",name:\"Estonia\"},EG:{path:\"M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z\",name:\"Egypt\"},ZA:{path:\"M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z\",name:\"South Africa\"},EC:{path:\"M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z\",name:\"Ecuador\"},AL:{path:\"M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z\",name:\"Albania\"},AO:{path:\"M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z\",name:\"Angola\"},KZ:{path:\"M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z\",name:\"Kazakhstan\"},ET:{path:\"M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z\",name:\"Ethiopia\"},ZW:{path:\"M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z\",name:\"Zimbabwe\"},ES:{path:\"M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z\",name:\"Spain\"},ER:{path:\"M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z\",name:\"Eritrea\"},ME:{path:\"M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z\",name:\"Montenegro\"},MD:{path:\"M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z\",name:\"Moldova\"},MG:{path:\"M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z\",name:\"Madagascar\"},MA:{path:\"M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z\",name:\"Morocco\"},UZ:{path:\"M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z\",name:\"Uzbekistan\"},MM:{path:\"M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z\",name:\"Myanmar\"},ML:{path:\"M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z\",name:\"Mali\"},MN:{path:\"M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z\",name:\"Mongolia\"},MK:{path:\"M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z\",name:\"Macedonia\"},MW:{path:\"M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z\",name:\"Malawi\"},MR:{path:\"M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z\",name:\"Mauritania\"},UG:{path:\"M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z\",name:\"Uganda\"},MY:{path:\"M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z\",name:\"Malaysia\"},MX:{path:\"M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z\",name:\"Mexico\"},VU:{path:\"M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z\",name:\"Vanuatu\"},FR:{path:\"M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z\",name:\"France\"},FI:{path:\"M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z\",name:\"Finland\"},FJ:{path:\"M871.53,326.34l-2.8,1.05l-0.08,-0.23l2.97,-1.21l-0.1,0.39ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z\",name:\"Fiji\"},FK:{path:\"M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z\",name:\"Falkland Is.\"},NI:{path:\"M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z\",name:\"Nicaragua\"},NL:{path:\"M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z\",name:\"Netherlands\"},NO:{path:\"M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z\",name:\"Norway\"},NA:{path:\"M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z\",name:\"Namibia\"},NC:{path:\"M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z\",name:\"New Caledonia\"},NE:{path:\"M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z\",name:\"Niger\"},NG:{path:\"M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z\",name:\"Nigeria\"},NZ:{path:\"M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z\",name:\"New Zealand\"},NP:{path:\"M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z\",name:\"Nepal\"},CI:{path:\"M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z\",name:\"Côte d'Ivoire\"},CH:{path:\"M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z\",name:\"Switzerland\"},CO:{path:\"M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z\",name:\"Colombia\"},CN:{path:\"M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z\",name:\"China\"},CM:{path:\"M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z\",name:\"Cameroon\"},CL:{path:\"M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z\",name:\"Chile\"},CA:{path:\"M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z\",name:\"Canada\"},CG:{path:\"M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z\",name:\"Congo\"},CF:{path:\"M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z\",name:\"Central African Rep.\"},CD:{path:\"M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z\",name:\"Dem. Rep. Congo\"},CZ:{path:\"M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z\",name:\"Czech Rep.\"},CY:{path:\"M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z\",name:\"Cyprus\"},CR:{path:\"M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z\",name:\"Costa Rica\"},CU:{path:\"M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z\",name:\"Cuba\"},SZ:{path:\"M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z\",name:\"Swaziland\"},SY:{path:\"M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z\",name:\"Syria\"},KG:{path:\"M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z\",name:\"Kyrgyzstan\"},KE:{path:\"M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z\",name:\"Kenya\"},SS:{path:\"M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z\",name:\"S. Sudan\"},SR:{path:\"M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z\",name:\"Suriname\"},KH:{path:\"M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z\",name:\"Cambodia\"},SV:{path:\"M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z\",name:\"El Salvador\"},SK:{path:\"M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z\",name:\"Slovakia\"},KR:{path:\"M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z\",name:\"Korea\"},SI:{path:\"M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z\",name:\"Slovenia\"},KP:{path:\"M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z\",name:\"Dem. Rep. Korea\"},SO:{path:\"M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z\",name:\"Somalia\"},SN:{path:\"M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z\",name:\"Senegal\"},SL:{path:\"M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z\",name:\"Sierra Leone\"},SB:{path:\"M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z\",name:\"Solomon Is.\"},SA:{path:\"M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z\",name:\"Saudi Arabia\"},SE:{path:\"M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z\",name:\"Sweden\"},SD:{path:\"M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z\",name:\"Sudan\"},DO:{path:\"M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z\",name:\"Dominican Rep.\"},DJ:{path:\"M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z\",name:\"Djibouti\"},DK:{path:\"M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z\",name:\"Denmark\"},DE:{path:\"M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z\",name:\"Germany\"},YE:{path:\"M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z\",name:\"Yemen\"},AT:{path:\"M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z\",name:\"Austria\"},DZ:{path:\"M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z\",name:\"Algeria\"},US:{path:\"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z\",name:\"United States\"},LV:{path:\"M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z\",name:\"Latvia\"},UY:{path:\"M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z\",name:\"Uruguay\"},LB:{path:\"M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z\",name:\"Lebanon\"},LA:{path:\"M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z\",name:\"Lao PDR\"},TW:{path:\"M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z\",name:\"Taiwan\"},TT:{path:\"M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z\",name:\"Trinidad and Tobago\"},TR:{path:\"M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z\",name:\"Turkey\"},LK:{path:\"M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z\",name:\"Sri Lanka\"},TN:{path:\"M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z\",name:\"Tunisia\"},TL:{path:\"M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z\",name:\"Timor-Leste\"},TM:{path:\"M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z\",name:\"Turkmenistan\"},TJ:{path:\"M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z\",name:\"Tajikistan\"},LS:{path:\"M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z\",name:\"Lesotho\"},TH:{path:\"M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z\",name:\"Thailand\"},TF:{path:\"M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z\",name:\"Fr. S. Antarctic Lands\"},TG:{path:\"M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z\",name:\"Togo\"},TD:{path:\"M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z\",name:\"Chad\"},LY:{path:\"M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z\",name:\"Libya\"},AE:{path:\"M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z\",name:\"United Arab Emirates\"},VE:{path:\"M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z\",name:\"Venezuela\"},AF:{path:\"M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z\",name:\"Afghanistan\"},IQ:{path:\"M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z\",name:\"Iraq\"},IS:{path:\"M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z\",name:\"Iceland\"},IR:{path:\"M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z\",name:\"Iran\"},AM:{path:\"M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z\",name:\"Armenia\"},IT:{path:\"M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z\",name:\"Italy\"},VN:{path:\"M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z\",name:\"Vietnam\"},AR:{path:\"M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z\",name:\"Argentina\"},AU:{path:\"M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z\",name:\"Australia\"},IL:{path:\"M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z\",name:\"Israel\"},IN:{path:\"M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z\",name:\"India\"},TZ:{path:\"M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z\",name:\"Tanzania\"},AZ:{path:\"M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z\",name:\"Azerbaijan\"},IE:{path:\"M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z\",name:\"Ireland\"},ID:{path:\"M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z\",name:\"Indonesia\"},UA:{path:\"M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z\",name:\"Ukraine\"},QA:{path:\"M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z\",name:\"Qatar\"},MZ:{path:\"M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z\",name:\"Mozambique\"}},height:440.70631074413296,width:900,projection:{type:\"mill\",centralMeridian:11.5}});\n","\"use client\"\nimport { useEffect, useState, useRef } from 'react'\n\ntype BaseVectorMapProps = {\n\twidth?: string\n\theight?: string\n\toptions?: any\n\ttype: string\n}\n\nconst BaseVectorMap = ({\n\twidth,\n\theight,\n\toptions,\n\ttype,\n}: BaseVectorMapProps) => {\n\tconst selectorId = type + new Date().getTime()\n\tconst ref = useRef<HTMLDivElement | null>(null)\n\tconst [map, setMap] = useState()\n\n\tuseEffect(() => {\n\t\tif (!map && ref.current) {\n\t\t\tconst map = new (window as any)['jsVectorMap']({\n\t\t\t\tselector: ref.current,\n\t\t\t\tmap: type,\n\t\t\t\t...options,\n\t\t\t})\n\t\t\tsetMap(map)\n\t\t}\n\t}, [selectorId, map, options, type, ref])\n\n\treturn (\n\t\t<div\n\t\t\tid={selectorId}\n\t\t\tref={ref}\n\t\t\tstyle={{ width: width, height: height }}\n\t\t></div>\n\t)\n}\n\nexport default BaseVectorMap\n","'use client'\nimport 'jsvectormap'\nimport 'jsvectormap/dist/maps/world.js'\nimport 'jsvectormap/dist/jsvectormap.min.css'\n\n//components\nimport BaseVectorMap from './BaseVectorMap'\n\ninterface WorldVectorMapProps {\n  width?: string\n  height?: string\n  options?: any\n}\n\nconst WorldVectorMap = ({ width, height, options }: WorldVectorMapProps) => {\n  return (\n    <>\n      <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\n    </>\n  )\n}\n\nexport default WorldVectorMap\n","const worldMapOpts = {\n  normalizeFunction: 'polynomial',\n  zoomOnScroll: false,\n  mapBgColor: '#F7F8F9',\n  hoverOpacity: 0.7,\n  selectedMarkers: [0, 2],\n  markersSelectable: true,\n  regionStyle: {\n    initial: {\n      fill: 'rgba(169,183,197, 0.3)',\n      fillOpacity: 1,\n    },\n  },\n  markers: [\n    { name: 'Palestine', coords: [31.9474, 35.2272] },\n    { name: 'Russia', coords: [61.524, 105.3188] },\n    { name: 'Canada', coords: [56.1304, -106.3468] },\n    { name: 'Greenland', coords: [71.7069, -42.6043] },\n  ],\n  markerStyle: {\n    initial: {\n      r: 5, // Marker width\n      fill: '#22c55e', // Marker color\n      fillOpacity: 1, // The opacity of the marker shape\n      stroke: '#FFF', // Stroke\n      strokeWidth: 1, // the stroke width\n      strokeOpacity: 0.65, // The stroke opacity\n    },\n    // All options in initial object can be overitten in hover, selected, selectedHover object as well.\n    hover: {\n      stroke: 'black',\n      cursor: 'pointer',\n      strokeWidth: 2,\n    },\n    selected: {\n      fill: 'blue',\n    },\n    selectedHover: {\n      fill: 'red',\n    },\n  },\n\n  labels: {\n    markers: {\n      render: (marker: any) => marker.name,\n    },\n  },\n}\nconst worldMapWithLineOpts = {\n  normalizeFunction: 'polynomial',\n  mapBgColor: '#F7F8F9',\n  zoomOnScroll: false,\n  zoomButtons: false,\n  markers: [\n    { name: 'Greenland', coords: [72, -42] },\n    { name: 'Canada', coords: [56.1304, -106.3468] },\n    { name: 'Brazil', coords: [-14.235, -51.9253] },\n    { name: 'Egypt', coords: [26.8206, 30.8025] },\n    { name: 'Russia', coords: [61, 105] },\n    { name: 'China', coords: [35.8617, 104.1954] },\n    { name: 'United States', coords: [37.0902, -95.7129] },\n    { name: 'Norway', coords: [60.472024, 8.468946] },\n    { name: 'Ukraine', coords: [48.379433, 31.16558] },\n  ],\n  lines: [\n    { from: 'Canada', to: 'Egypt' },\n    { from: 'Russia', to: 'Egypt' },\n    { from: 'Greenland', to: 'Egypt' },\n    { from: 'Brazil', to: 'Egypt' },\n    { from: 'United States', to: 'Egypt' },\n    { from: 'China', to: 'Egypt' },\n    { from: 'Norway', to: 'Egypt' },\n    { from: 'Ukraine', to: 'Egypt' },\n  ],\n  lineStyle: {\n    animation: true,\n    strokeDasharray: '6 3 6',\n  },\n  regionStyle: {\n    initial: {\n      fill: 'rgba(169,183,197, 0.3)',\n      fillOpacity: 1,\n    },\n  },\n  labels: {\n    markers: {\n      render: (marker: any) => marker.name,\n    },\n  },\n  markerStyle: {\n    initial: {\n      r: 5, // Marker width\n      fill: '#22c55e', // Marker color\n      fillOpacity: 1, // The opacity of the marker shape\n      stroke: '#FFF', // Stroke\n      strokeWidth: 1, // the stroke width\n      strokeOpacity: 0.65, // The stroke opacity\n    },\n    // All options in initial object can be overitten in hover, selected, selectedHover object as well.\n    hover: {\n      stroke: 'black',\n      cursor: 'pointer',\n      strokeWidth: 2,\n    },\n    selected: {\n      fill: 'blue',\n    },\n    selectedHover: {\n      fill: 'red',\n    },\n  },\n}\n\nexport { worldMapOpts, worldMapWithLineOpts }\n","import 'jsvectormap'\nimport 'jsvectormap/dist/maps/world.js'\nimport 'jsvectormap/dist/jsvectormap.min.css'\nimport BaseVectorMap from '@/components/VectorMap/BaseVectorMap'\n\ntype WorldVectorMapProps = {\n  width?: string\n  height?: string\n  options?: any\n}\n\nconst WorldMap = ({ width, height, options }: WorldVectorMapProps) => <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\n\nexport default WorldMap\n","import ComponentContainerCard from '@/components/ComponentContainerCard'\nimport { WorldVectorMap } from '@/components/VectorMap'\nimport { Col, Row } from 'react-bootstrap'\nimport { worldMapOpts, worldMapWithLineOpts } from '../data'\nimport WorldMap from './WorldMap'\n\nconst AllVectorMaps = () => {\n  return (\n    <>\n      <Row className=\"justify-content-center\">\n        <Col xs={12}>\n          <ComponentContainerCard title=\"World Map Markers\">\n            <WorldVectorMap height=\"350px\" width=\"100%\" options={worldMapOpts} />\n          </ComponentContainerCard>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col xs={12}>\n          <ComponentContainerCard title=\"World Map With Marker Lines\">\n            <WorldMap height=\"350px\" width=\"100%\" options={worldMapWithLineOpts} />\n          </ComponentContainerCard>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default AllVectorMaps\n","import PageMetaData from '@/components/PageMetaData'\nimport AllVectorMaps from './components/AllVectorMaps'\n\nconst VectorMaps = () => {\n  return (\n    <>\n      <PageMetaData title=\"Vector Maps\" />\n      <AllVectorMaps />\n    </>\n  )\n}\n\nexport default VectorMaps\n"],"names":["isMergeableObject","value","isNonNullObject","isSpecial","stringValue","isNode","isReactElement","canUseSymbol","REACT_ELEMENT_TYPE","emptyTarget","val","cloneUnlessOtherwiseSpecified","options","deepmerge","defaultArrayMerge","target","source","element","getMergeFunction","key","customMerge","getEnumerableOwnPropertySymbols","symbol","getKeys","propertyIsOnObject","object","property","propertyIsUnsafe","mergeObject","destination","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","getElement","selector","createElement","type","classes","content","html","el","findElement","parentElement","removeElement","isImageUrl","url","hyphenate","string","m","merge","deep","getLineUid","from","to","inherit","eventRegistry","eventUid","EventHandler","event","handler","uid","eventName","e","eventType","setupContainerEvents","_this","map","mouseDown","oldPageX","oldPageY","deltaY","rect","offsetX","offsetY","zoomStep","Events","parseEvent","isTooltip","isRegion","code","setupElementEvents","container","pageX","pageY","mouseMoved","data","showTooltip","_parseEvent","setupZoomButtons","zoomin","zoomout","setupContainerTouchEvents","touchStartScale","touchStartDistance","touchX","touchY","centerTouchX","centerTouchY","lastTouchesLength","handleTouchEvent","touches","offset","scale","transXOld","transYOld","_arrayLikeToArray","r","n","_assertThisInitialized","_createForOfIteratorHelperLoose","t","_unsupportedIterableToArray","o","_extends","_inheritsLoose","_setPrototypeOf","BaseComponent","_proto","_iterator","_step","propertyName","Interactable","label","params","state","Region","_BaseComponent","_ref","path","style","labelStyle","labelsGroup","text","bbox","offsets","createRegions","region","Line","index","x1","y1","x2","y2","group","config","createLines","lines","markers","isRecentlyCreated","point1","point2","mindex","markerConfig","Marker","cx","cy","_ref2","marker","labelText","createMarkers","_loop","point","i","_ret","Legend","ticks","inner","legendTitle","tick","sample","tickText","OrdinalScale","Series","elements","values","attrs","createSeries","applyTransform","maxTransX","maxTransY","minTransX","minTransY","resize","curBaseScale","setScale","anchorX","anchorY","isCentered","animate","interval","count","scaleStart","scaleDiff","transXStart","transXDiff","transYStart","transYDiff","transX","transY","setFocus","codes","itemBbox","x","y","updateSize","Proj","lat","lng","c","fi0","lambda0","fi1","fi2","fi","lambda","C","theta","ro","ro0","F","coordsToPoint","projection","Map","_Proj$projection$type","inset","getInsetForPoint","insets","_insets$index$bbox","start","end","getMarkerPosition","coords","repositionLines","repositionMarkers","repositionLabels","labels","_key","core","Defaults","SVGElement","name","tagName","className","attr","SVGShapeElement","_SVGElement","_merge","SVGTextElement","_SVGShapeElement","SVGImageElement","imageUrl","SVGCanvasElement","width","height","circle","line","image","id","Tooltip","tooltip","_this2","space","_this2$_tooltip$getBo","topIsPassed","top","left","_css","DataVisualization","regionCode","hex","color","h","g","b","regions","_this3","uids","_this4","destroyInstance","_this5","callback","args","selected","keys","_this6","_this7","jsVectorMap","BaseVectorMap","selectorId","ref","useRef","setMap","useState","useEffect","jsx","WorldVectorMap","Fragment","worldMapOpts","worldMapWithLineOpts","WorldMap","AllVectorMaps","jsxs","Row","Col","ComponentContainerCard","VectorMaps","PageMetaData"],"mappings":"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","x_google_ignoreList":[0,1]}