{"version":3,"file":"NavContext-BRvIv2qI.js","sources":["../../node_modules/@restart/hooks/esm/useForceUpdate.js","../../node_modules/@restart/ui/esm/SelectableContext.js","../../node_modules/@restart/ui/esm/NavContext.js"],"sourcesContent":["import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;"],"names":["useForceUpdate","dispatch","useReducer","state","SelectableContext","React.createContext","makeEventKey","eventKey","href","NavContext"],"mappings":"wCAkBe,SAASA,GAAiB,CAGvC,KAAM,CAAA,CAAGC,CAAQ,EAAIC,EAAAA,WAAWC,GAAS,CAACA,EAAO,EAAK,EACtD,OAAOF,CACT,CCtBK,MAACG,EAAiCC,EAAmB,cAAC,IAAI,EAClDC,EAAe,CAACC,EAAUC,EAAO,OACxCD,GAAY,KAAa,OAAOA,CAAQ,EACrCC,GAAQ,KCHXC,EAA0BJ,EAAmB,cAAC,IAAI,EACxDI,EAAW,YAAc","x_google_ignoreList":[0,1,2]}