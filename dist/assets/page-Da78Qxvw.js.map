{"version":3,"file":"page-Da78Qxvw.js","sources":["../../src/hooks/useClipboard.ts","../../src/app/(admin)/advanced/clipboard/components/AllClipboards.tsx","../../src/app/(admin)/advanced/clipboard/page.tsx"],"sourcesContent":["import { useState } from 'react'\n\ntype CopiedValue = string | null\ntype CopyFn = (text: string) => Promise<string | null>\n\nconst useClipboard = (): [CopiedValue, CopyFn] => {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null)\n\n  const copy: CopyFn = async (text: string) => {\n    if (!navigator.clipboard) {\n      console.warn('Clipboard not supported')\n      return text\n    }\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopiedText(text)\n      return text\n    } catch (error) {\n      console.warn('Copy failed', error)\n      setCopiedText(null)\n      return null\n    }\n  }\n\n  return [copiedText, copy]\n}\n\nexport default useClipboard\n","import ComponentContainerCard from '@/components/ComponentContainerCard'\nimport IconifyIcon from '@/components/wrappers/IconifyIcon'\nimport useClipboard from '@/hooks/useClipboard'\nimport { useRef, useState } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { toast } from 'sonner'\n\nconst ClipboardExample = () => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [inputText, setText] = useState<string>('Welcome to Rizz!')\n  const [, copy] = useClipboard()\n\n  const onCopy = (text: string) => {\n    copy(text).then((copied) => {\n      if (copied) {\n        toast.success('Copy To Clipboard', {\n          position: 'top-right',\n          duration: 2000,\n        })\n      }\n    })\n  }\n  const onCut = (text: string) => {\n    copy(text).then((copied) => {\n      if (copied) {\n        toast.success('Cut', { position: 'top-right', duration: 2000 })\n      }\n    })\n    setText('')\n  }\n  return (\n    <ComponentContainerCard title=\"Clipboard Examples\">\n      <div className=\"input-group\">\n        <input\n          ref={inputRef}\n          name=\"clipboard\"\n          type=\"text\"\n          onChange={(e) => setText(e.target.value)}\n          value={inputText}\n          className=\"form-control\"\n          id=\"clipboardInput\"\n          aria-label=\"Recipient's username\"\n          aria-describedby=\"button-addon2\"\n        />\n        <Button variant=\"secondary\" onClick={() => onCopy(inputRef.current?.value ?? '')}>\n          <IconifyIcon icon=\"fa-regular:copy\" className=\"me-2 fs-14\" />\n          Copy\n        </Button>\n        <Button variant=\"primary\" onClick={() => onCut(inputRef.current?.value ?? '')}>\n          <IconifyIcon icon=\"fa-solid:cut\" className=\"me-2 fs-14\" />\n          Cut\n        </Button>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst TextAreaClipboard = () => {\n  const inputRef = useRef<HTMLTextAreaElement>(null)\n  const [inputText, setText] = useState<string>('Welcome to Rizz !')\n  const [, copy] = useClipboard()\n\n  const onCopy = (text: string) => {\n    copy(text).then((copied) => {\n      if (copied) {\n        toast.success('Copy To Clipboard', {\n          position: 'top-right',\n          duration: 2000,\n        })\n      }\n    })\n  }\n  const onCut = (text: string) => {\n    copy(text).then((copied) => {\n      if (copied) {\n        toast.success('Cut', { position: 'top-right', duration: 2000 })\n      }\n    })\n    setText('')\n  }\n  return (\n    <ComponentContainerCard title=\"Textarea Example\">\n      <textarea ref={inputRef} onChange={(e) => setText(e.target.value)} value={inputText} className=\"form-control\" rows={3} />\n      <div className=\"mt-3\">\n        <Button variant=\"secondary\" className=\"btn-clipboard me-1\" onClick={() => onCopy(inputRef.current?.value ?? '')}>\n          <IconifyIcon icon=\"fa-regular:copy\" className=\"me-2 fs-14\" />\n          Copy\n        </Button>\n        <Button variant=\"primary\" className=\"btn-clipboard\" onClick={() => onCut(inputRef.current?.value ?? '')}>\n          <IconifyIcon icon=\"fa-solid:cut\" className=\"me-2 fs-14\" />\n          Cut\n        </Button>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst ParagraphClipboardExample = () => {\n  const [, copy] = useClipboard()\n\n  const onCopy = (text: string) => {\n    copy(text).then((copied) => {\n      if (copied) {\n        toast.success('Copy To Clipboard', {\n          position: 'top-right',\n          duration: 2000,\n        })\n      }\n    })\n  }\n\n  return (\n    <ComponentContainerCard title=\"Paragraph Examples\">\n      <p id=\"clipboardParagraph\" className=\"border p-3\">\n        Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it\n        over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked\n      </p>\n      <div className=\"mt-3\">\n        <Button\n          variant=\"secondary\"\n          className=\"btn-clipboard\"\n          onClick={() =>\n            onCopy(\n              'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked',\n            )\n          }>\n          <IconifyIcon icon=\"fa-regular:copy\" className=\"me-2 fs-14\" />\n          Copy\n        </Button>\n      </div>\n    </ComponentContainerCard>\n  )\n}\n\nconst AllClipboards = () => {\n  return (\n    <Row className=\"justify-content-center\">\n      <Col md={6}>\n        <ClipboardExample />\n        <ParagraphClipboardExample />\n      </Col>\n      <Col md={6}>\n        <TextAreaClipboard />\n      </Col>\n    </Row>\n  )\n}\n\nexport default AllClipboards\n","import PageMetaData from '@/components/PageMetaData'\nimport AllClipboards from './components/AllClipboards'\n\nconst Clipboard = () => {\n  return (\n    <>\n      <PageMetaData title=\"Clipboard\" />\n      <AllClipboards />\n    </>\n  )\n}\n\nexport default Clipboard\n"],"names":["useClipboard","copiedText","setCopiedText","useState","text","error","ClipboardExample","inputRef","useRef","inputText","setText","copy","onCopy","copied","toast","onCut","ComponentContainerCard","jsxs","jsx","e","Button","_a","IconifyIcon","TextAreaClipboard","ParagraphClipboardExample","AllClipboards","Row","Col","Clipboard","Fragment","PageMetaData"],"mappings":"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"}