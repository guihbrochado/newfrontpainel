{"version":3,"file":"Modal-OU7kPsZL.js","sources":["../../node_modules/dom-helpers/esm/scrollbarSize.js","../../node_modules/dom-helpers/esm/activeElement.js","../../node_modules/@restart/ui/esm/getScrollbarWidth.js","../../node_modules/@restart/ui/esm/ModalManager.js","../../node_modules/@restart/ui/esm/Modal.js","../../node_modules/dom-helpers/esm/addClass.js","../../node_modules/dom-helpers/esm/removeClass.js","../../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../../node_modules/react-bootstrap/esm/ModalBody.js","../../node_modules/react-bootstrap/esm/ModalContext.js","../../node_modules/react-bootstrap/esm/ModalDialog.js","../../node_modules/react-bootstrap/esm/ModalFooter.js","../../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../../node_modules/react-bootstrap/esm/ModalHeader.js","../../node_modules/react-bootstrap/esm/ModalTitle.js","../../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","activeElement","doc","ownerDocument","active","getBodyScrollbarWidth","window","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","_modal","containerState","style","paddingProp","container","css","m","modal","modalIdx","_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","key","i","manager","getManager","useModalManager","provided","useWindow","modalManager","useRef","useCallback","ref","Modal","forwardRef","_ref","show","role","className","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","ownerWindow","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","useState","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","e","isEscKey","handleHidden","args","dialogProps","dialog","React.cloneElement","renderTransition","backdropElement","_Fragment","ReactDOM","_jsxs","BaseModal","addClass","element","hasClass","replaceClassName","origClass","classToRemove","removeClass","Selector","BootstrapModalManager","prop","adjust","actual","value","marginProp","qsa","el","sharedManager","getSharedManager","options","ModalBody","React.forwardRef","bsPrefix","Component","useBootstrapPrefix","classNames","ModalContext","React.createContext","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","CloseButton","ModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","BackdropTransition","dialogClassName","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","getScrollbarSize","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","handleEscapeKeyDown","handleEnter","isAppearing","handleExit","handleEntering","addEventListener","handleExited","backdropProps","baseModalStyle","Modal$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}